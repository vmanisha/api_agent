{
    "openapi": "3.0.3",
    "info": {
        "title": "Merge ATS API",
        "version": "1.0",
        "description": "The unified API for building rich integrations with multiple Applicant Tracking System platforms.",
        "contact": {
            "name": "Merge Team",
            "url": "https://www.merge.dev/",
            "email": "hello@merge.dev"
        }
    },
    "paths": {
        "/account-details": {
            "get": {
                "operationId": "account_details_retrieve",
                "description": "Get details for a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "account-details"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/account-token/{public_token}": {
            "get": {
                "operationId": "account_token_retrieve",
                "description": "Returns the account token for the end user with the provided public token.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "public_token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "account-token"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountToken"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/activities": {
            "get": {
                "operationId": "activities_list",
                "description": "Returns a list of `Activity` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandUser": {
                                "value": "user",
                                "summary": "Expand User"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "activity_type",
                                "activity_type,visibility",
                                "visibility"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesActivityType,Visibility": {
                                "value": "activity_type,visibility",
                                "summary": "Original Enum Values Activity_type, Visibility"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "activity_type",
                                "activity_type,visibility",
                                "visibility"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesActivityType,Visibility": {
                                "value": "activity_type,visibility",
                                "summary": "Original Enum Values Activity_type, Visibility"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "user_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return activities done by this user.",
                        "examples": {
                            "UserId": {
                                "summary": "user_id"
                            }
                        }
                    }
                ],
                "tags": [
                    "activities"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedActivityList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "activities_create",
                "description": "Creates an `Activity` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "activities"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivityEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/activities/{id}": {
            "get": {
                "operationId": "activities_retrieve",
                "description": "Returns an `Activity` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandUser": {
                                "value": "user",
                                "summary": "Expand User"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "activity_type",
                                "activity_type,visibility",
                                "visibility"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesActivityType,Visibility": {
                                "value": "activity_type,visibility",
                                "summary": "Original Enum Values Activity_type, Visibility"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "activity_type",
                                "activity_type,visibility",
                                "visibility"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesActivityType,Visibility": {
                                "value": "activity_type,visibility",
                                "summary": "Original Enum Values Activity_type, Visibility"
                            }
                        }
                    }
                ],
                "tags": [
                    "activities"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Activity"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/activities/meta/post": {
            "get": {
                "operationId": "activities_meta_post_retrieve",
                "description": "Returns metadata for `Activity` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "activities"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/applications": {
            "get": {
                "operationId": "applications_list",
                "description": "Returns a list of `Application` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "candidate_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return applications for this candidate.",
                        "examples": {
                            "CandidateId": {
                                "summary": "candidate_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "credited_to_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return applications credited to this user.",
                        "examples": {
                            "CreditedToId": {
                                "summary": "credited_to_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "current_stage_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return applications at this interview stage.",
                        "examples": {
                            "CurrentStageId": {
                                "summary": "current_stage_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "candidate",
                                "candidate,credited_to",
                                "candidate,credited_to,current_stage",
                                "candidate,credited_to,current_stage,reject_reason",
                                "candidate,credited_to,reject_reason",
                                "candidate,current_stage",
                                "candidate,current_stage,reject_reason",
                                "candidate,job",
                                "candidate,job,credited_to",
                                "candidate,job,credited_to,current_stage",
                                "candidate,job,credited_to,current_stage,reject_reason",
                                "candidate,job,credited_to,reject_reason",
                                "candidate,job,current_stage",
                                "candidate,job,current_stage,reject_reason",
                                "candidate,job,reject_reason",
                                "candidate,reject_reason",
                                "credited_to",
                                "credited_to,current_stage",
                                "credited_to,current_stage,reject_reason",
                                "credited_to,reject_reason",
                                "current_stage",
                                "current_stage,reject_reason",
                                "job",
                                "job,credited_to",
                                "job,credited_to,current_stage",
                                "job,credited_to,current_stage,reject_reason",
                                "job,credited_to,reject_reason",
                                "job,current_stage",
                                "job,current_stage,reject_reason",
                                "job,reject_reason",
                                "offers",
                                "offers,candidate",
                                "offers,candidate,credited_to",
                                "offers,candidate,credited_to,current_stage",
                                "offers,candidate,credited_to,current_stage,reject_reason",
                                "offers,candidate,credited_to,reject_reason",
                                "offers,candidate,current_stage",
                                "offers,candidate,current_stage,reject_reason",
                                "offers,candidate,job",
                                "offers,candidate,job,credited_to",
                                "offers,candidate,job,credited_to,current_stage",
                                "offers,candidate,job,credited_to,current_stage,reject_reason",
                                "offers,candidate,job,credited_to,reject_reason",
                                "offers,candidate,job,current_stage",
                                "offers,candidate,job,current_stage,reject_reason",
                                "offers,candidate,job,reject_reason",
                                "offers,candidate,reject_reason",
                                "offers,credited_to",
                                "offers,credited_to,current_stage",
                                "offers,credited_to,current_stage,reject_reason",
                                "offers,credited_to,reject_reason",
                                "offers,current_stage",
                                "offers,current_stage,reject_reason",
                                "offers,job",
                                "offers,job,credited_to",
                                "offers,job,credited_to,current_stage",
                                "offers,job,credited_to,current_stage,reject_reason",
                                "offers,job,credited_to,reject_reason",
                                "offers,job,current_stage",
                                "offers,job,current_stage,reject_reason",
                                "offers,job,reject_reason",
                                "offers,reject_reason",
                                "reject_reason"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandOffers,Candidate,Job,CreditedTo,CurrentStage,RejectReason": {
                                "value": "offers,candidate,job,credited_to,current_stage,reject_reason",
                                "summary": "Expand Offers, Candidate, Job, Credited_to, Current_stage, Reject_reason"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "job_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return applications for this job.",
                        "examples": {
                            "JobId": {
                                "summary": "job_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "reject_reason_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return applications with this reject reason.",
                        "examples": {
                            "RejectReasonId": {
                                "summary": "reject_reason_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "source",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "If provided, will only return applications with this source."
                    }
                ],
                "tags": [
                    "applications"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedApplicationList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "applications_create",
                "description": "Creates an `Application` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/applications/{id}": {
            "get": {
                "operationId": "applications_retrieve",
                "description": "Returns an `Application` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "candidate",
                                "candidate,credited_to",
                                "candidate,credited_to,current_stage",
                                "candidate,credited_to,current_stage,reject_reason",
                                "candidate,credited_to,reject_reason",
                                "candidate,current_stage",
                                "candidate,current_stage,reject_reason",
                                "candidate,job",
                                "candidate,job,credited_to",
                                "candidate,job,credited_to,current_stage",
                                "candidate,job,credited_to,current_stage,reject_reason",
                                "candidate,job,credited_to,reject_reason",
                                "candidate,job,current_stage",
                                "candidate,job,current_stage,reject_reason",
                                "candidate,job,reject_reason",
                                "candidate,reject_reason",
                                "credited_to",
                                "credited_to,current_stage",
                                "credited_to,current_stage,reject_reason",
                                "credited_to,reject_reason",
                                "current_stage",
                                "current_stage,reject_reason",
                                "job",
                                "job,credited_to",
                                "job,credited_to,current_stage",
                                "job,credited_to,current_stage,reject_reason",
                                "job,credited_to,reject_reason",
                                "job,current_stage",
                                "job,current_stage,reject_reason",
                                "job,reject_reason",
                                "offers",
                                "offers,candidate",
                                "offers,candidate,credited_to",
                                "offers,candidate,credited_to,current_stage",
                                "offers,candidate,credited_to,current_stage,reject_reason",
                                "offers,candidate,credited_to,reject_reason",
                                "offers,candidate,current_stage",
                                "offers,candidate,current_stage,reject_reason",
                                "offers,candidate,job",
                                "offers,candidate,job,credited_to",
                                "offers,candidate,job,credited_to,current_stage",
                                "offers,candidate,job,credited_to,current_stage,reject_reason",
                                "offers,candidate,job,credited_to,reject_reason",
                                "offers,candidate,job,current_stage",
                                "offers,candidate,job,current_stage,reject_reason",
                                "offers,candidate,job,reject_reason",
                                "offers,candidate,reject_reason",
                                "offers,credited_to",
                                "offers,credited_to,current_stage",
                                "offers,credited_to,current_stage,reject_reason",
                                "offers,credited_to,reject_reason",
                                "offers,current_stage",
                                "offers,current_stage,reject_reason",
                                "offers,job",
                                "offers,job,credited_to",
                                "offers,job,credited_to,current_stage",
                                "offers,job,credited_to,current_stage,reject_reason",
                                "offers,job,credited_to,reject_reason",
                                "offers,job,current_stage",
                                "offers,job,current_stage,reject_reason",
                                "offers,job,reject_reason",
                                "offers,reject_reason",
                                "reject_reason"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandOffers,Candidate,Job,CreditedTo,CurrentStage,RejectReason": {
                                "value": "offers,candidate,job,credited_to,current_stage,reject_reason",
                                "summary": "Expand Offers, Candidate, Job, Credited_to, Current_stage, Reject_reason"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "applications"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/applications/{id}/change-stage": {
            "post": {
                "operationId": "applications_change_stage_create",
                "description": "Updates the `current_stage` field of an `Application` object",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "applications"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationStageRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationStageRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationStageRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/applications/meta/post": {
            "get": {
                "operationId": "applications_meta_post_retrieve",
                "description": "Returns metadata for `Application` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "application_remote_template_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The template ID associated with the nested application in the request."
                    }
                ],
                "tags": [
                    "applications"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/async-passthrough": {
            "post": {
                "operationId": "async_passthrough_create",
                "description": "Asynchronously pull data from an endpoint not currently supported by Merge.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "async-passthrough"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncPassthroughReciept"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/async-passthrough/{async_passthrough_receipt_id}": {
            "get": {
                "operationId": "async_passthrough_retrieve",
                "description": "Retrieves data from earlier async-passthrough POST request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "async_passthrough_receipt_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "async-passthrough"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments": {
            "get": {
                "operationId": "attachments_list",
                "description": "Returns a list of `Attachment` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "candidate_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return attachments for this candidate.",
                        "examples": {
                            "CandidateId": {
                                "summary": "candidate_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "candidate"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCandidate": {
                                "value": "candidate",
                                "summary": "Expand Candidate"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "attachment_type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesAttachmentType": {
                                "value": "attachment_type",
                                "summary": "Original Enum Values Attachment_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "attachment_type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesAttachmentType": {
                                "value": "attachment_type",
                                "summary": "Original Enum Values Attachment_type"
                            }
                        }
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAttachmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "attachments_create",
                "description": "Creates an `Attachment` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AttachmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/{id}": {
            "get": {
                "operationId": "attachments_retrieve",
                "description": "Returns an `Attachment` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "candidate"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCandidate": {
                                "value": "candidate",
                                "summary": "Expand Candidate"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "attachment_type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesAttachmentType": {
                                "value": "attachment_type",
                                "summary": "Original Enum Values Attachment_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "attachment_type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesAttachmentType": {
                                "value": "attachment_type",
                                "summary": "Original Enum Values Attachment_type"
                            }
                        }
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/meta/post": {
            "get": {
                "operationId": "attachments_meta_post_retrieve",
                "description": "Returns metadata for `Attachment` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/audit-trail": {
            "get": {
                "operationId": "audit_trail_list",
                "description": "Gets a list of audit trail events.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include audit trail events that occurred before this time"
                    },
                    {
                        "in": "query",
                        "name": "event_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include events with the given event type. Possible values include: `CREATED_REMOTE_PRODUCTION_API_KEY`, `DELETED_REMOTE_PRODUCTION_API_KEY`, `CREATED_TEST_API_KEY`, `DELETED_TEST_API_KEY`, `REGENERATED_PRODUCTION_API_KEY`, `INVITED_USER`, `TWO_FACTOR_AUTH_ENABLED`, `TWO_FACTOR_AUTH_DISABLED`, `DELETED_LINKED_ACCOUNT`, `CREATED_DESTINATION`, `DELETED_DESTINATION`, `CHANGED_DESTINATION`, `CHANGED_SCOPES`, `CHANGED_PERSONAL_INFORMATION`, `CHANGED_ORGANIZATION_SETTINGS`, `ENABLED_INTEGRATION`, `DISABLED_INTEGRATION`, `ENABLED_CATEGORY`, `DISABLED_CATEGORY`, `CHANGED_PASSWORD`, `RESET_PASSWORD`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `CREATED_INTEGRATION_WIDE_FIELD_MAPPING`, `CREATED_LINKED_ACCOUNT_FIELD_MAPPING`, `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING`, `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING`, `DELETED_INTEGRATION_WIDE_FIELD_MAPPING`, `DELETED_LINKED_ACCOUNT_FIELD_MAPPING`, `FORCED_LINKED_ACCOUNT_RESYNC`, `MUTED_ISSUE`, `GENERATED_MAGIC_LINK`"
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include audit trail events that occurred after this time"
                    },
                    {
                        "in": "query",
                        "name": "user_email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, this will return events associated with the specified user email. Please note that the email address reflects the user's email at the time of the event, and may not be their current email."
                    }
                ],
                "tags": [
                    "audit-trail"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAuditLogEventList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/available-actions": {
            "get": {
                "operationId": "available_actions_retrieve",
                "description": "Returns a list of models and actions available for an account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "available-actions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableActions"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/candidates": {
            "get": {
                "operationId": "candidates_list",
                "description": "Returns a list of `Candidate` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "email_addresses",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return candidates with these email addresses; multiple addresses can be separated by commas."
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "applications",
                                "applications,attachments",
                                "attachments"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandApplications,Attachments": {
                                "value": "applications,attachments",
                                "summary": "Expand Applications, Attachments"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_name",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "If provided, will only return candidates with this first name."
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "last_name",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "If provided, will only return candidates with this last name."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return candidates with these tags; multiple tags can be separated by commas."
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCandidateList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "candidates_create",
                "description": "Creates a `Candidate` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CandidateEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CandidateEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CandidateEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CandidateResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/candidates/{id}": {
            "get": {
                "operationId": "candidates_retrieve",
                "description": "Returns a `Candidate` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "applications",
                                "applications,attachments",
                                "attachments"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandApplications,Attachments": {
                                "value": "applications,attachments",
                                "summary": "Expand Applications, Attachments"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Candidate"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "patch": {
                "operationId": "candidates_partial_update",
                "description": "Updates a `Candidate` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCandidateEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCandidateEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedCandidateEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CandidateResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/candidates/ignore/{model_id}": {
            "post": {
                "operationId": "candidates_ignore_create",
                "description": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The \"reason\" and \"message\" fields in the request body will be stored for audit purposes.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "model_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IgnoreCommonModelRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IgnoreCommonModelRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IgnoreCommonModelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-extra-tags": [
                    "ignore-model"
                ]
            }
        },
        "/candidates/meta/patch/{id}": {
            "get": {
                "operationId": "candidates_meta_patch_retrieve",
                "description": "Returns metadata for `Candidate` PATCHs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-patch": "META_PATCH",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/candidates/meta/post": {
            "get": {
                "operationId": "candidates_meta_post_retrieve",
                "description": "Returns metadata for `Candidate` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "candidates"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/default-scopes": {
            "get": {
                "operationId": "default_scopes_retrieve",
                "description": "Get the default permissions for Merge Common Models and fields across all Linked Accounts of a given category. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes).",
                "tags": [
                    "scopes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/delete-account": {
            "post": {
                "operationId": "delete_account_delete",
                "description": "Delete a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "delete-account"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/departments": {
            "get": {
                "operationId": "departments_list",
                "description": "Returns a list of `Department` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "departments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDepartmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/departments/{id}": {
            "get": {
                "operationId": "departments_retrieve",
                "description": "Returns a `Department` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "departments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/eeocs": {
            "get": {
                "operationId": "eeocs_list",
                "description": "Returns a list of `EEOC` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "candidate_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return EEOC info for this candidate.",
                        "examples": {
                            "CandidateId": {
                                "summary": "candidate_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "candidate"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCandidate": {
                                "value": "candidate",
                                "summary": "Expand Candidate"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "disability_status",
                                "disability_status,gender",
                                "disability_status,gender,race",
                                "disability_status,gender,race,veteran_status",
                                "disability_status,gender,veteran_status",
                                "disability_status,race",
                                "disability_status,race,veteran_status",
                                "disability_status,veteran_status",
                                "gender",
                                "gender,race",
                                "gender,race,veteran_status",
                                "gender,veteran_status",
                                "race",
                                "race,veteran_status",
                                "veteran_status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesDisabilityStatus,Gender,Race,VeteranStatus": {
                                "value": "disability_status,gender,race,veteran_status",
                                "summary": "Original Enum Values Disability_status, Gender, Race, Veteran_status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "disability_status",
                                "disability_status,gender",
                                "disability_status,gender,race",
                                "disability_status,gender,race,veteran_status",
                                "disability_status,gender,veteran_status",
                                "disability_status,race",
                                "disability_status,race,veteran_status",
                                "disability_status,veteran_status",
                                "gender",
                                "gender,race",
                                "gender,race,veteran_status",
                                "gender,veteran_status",
                                "race",
                                "race,veteran_status",
                                "veteran_status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesDisabilityStatus,Gender,Race,VeteranStatus": {
                                "value": "disability_status,gender,race,veteran_status",
                                "summary": "Original Enum Values Disability_status, Gender, Race, Veteran_status"
                            }
                        }
                    }
                ],
                "tags": [
                    "eeocs"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEEOCList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/eeocs/{id}": {
            "get": {
                "operationId": "eeocs_retrieve",
                "description": "Returns an `EEOC` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "candidate"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCandidate": {
                                "value": "candidate",
                                "summary": "Expand Candidate"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "disability_status",
                                "disability_status,gender",
                                "disability_status,gender,race",
                                "disability_status,gender,race,veteran_status",
                                "disability_status,gender,veteran_status",
                                "disability_status,race",
                                "disability_status,race,veteran_status",
                                "disability_status,veteran_status",
                                "gender",
                                "gender,race",
                                "gender,race,veteran_status",
                                "gender,veteran_status",
                                "race",
                                "race,veteran_status",
                                "veteran_status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesDisabilityStatus,Gender,Race,VeteranStatus": {
                                "value": "disability_status,gender,race,veteran_status",
                                "summary": "Original Enum Values Disability_status, Gender, Race, Veteran_status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "disability_status",
                                "disability_status,gender",
                                "disability_status,gender,race",
                                "disability_status,gender,race,veteran_status",
                                "disability_status,gender,veteran_status",
                                "disability_status,race",
                                "disability_status,race,veteran_status",
                                "disability_status,veteran_status",
                                "gender",
                                "gender,race",
                                "gender,race,veteran_status",
                                "gender,veteran_status",
                                "race",
                                "race,veteran_status",
                                "veteran_status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesDisabilityStatus,Gender,Race,VeteranStatus": {
                                "value": "disability_status,gender,race,veteran_status",
                                "summary": "Original Enum Values Disability_status, Gender, Race, Veteran_status"
                            }
                        }
                    }
                ],
                "tags": [
                    "eeocs"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EEOC"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/field-mappings": {
            "get": {
                "operationId": "field_mappings_retrieve",
                "description": "Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingApiInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "field_mappings_create",
                "description": "Create new Field Mappings that will be available after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/field-mappings/{field_mapping_id}": {
            "patch": {
                "operationId": "field_mappings_partial_update",
                "description": "Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "field_mapping_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "delete": {
                "operationId": "field_mappings_destroy",
                "description": "Deletes Field Mappings for a Linked Account. All data related to this Field Mapping will be deleted and these changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "field_mapping_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/generate-key": {
            "post": {
                "operationId": "generate_key_create",
                "description": "Create a remote key.",
                "tags": [
                    "generate-key"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/interviews": {
            "get": {
                "operationId": "interviews_list",
                "description": "Returns a list of `ScheduledInterview` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return interviews for this application.",
                        "examples": {
                            "ApplicationId": {
                                "summary": "application_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application",
                                "application,job_interview_stage",
                                "interviewers",
                                "interviewers,application",
                                "interviewers,application,job_interview_stage",
                                "interviewers,job_interview_stage",
                                "interviewers,organizer",
                                "interviewers,organizer,application",
                                "interviewers,organizer,application,job_interview_stage",
                                "interviewers,organizer,job_interview_stage",
                                "job_interview_stage",
                                "organizer",
                                "organizer,application",
                                "organizer,application,job_interview_stage",
                                "organizer,job_interview_stage"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandInterviewers,Organizer,Application,JobInterviewStage": {
                                "value": "interviewers,organizer,application,job_interview_stage",
                                "summary": "Expand Interviewers, Organizer, Application, Job_interview_stage"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "job_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, wll only return interviews organized for this job.",
                        "examples": {
                            "JobId": {
                                "summary": "job_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_interview_stage_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return interviews at this stage.",
                        "examples": {
                            "JobInterviewStageId": {
                                "summary": "job_interview_stage_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "organizer_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return interviews organized by this user.",
                        "examples": {
                            "OrganizerId": {
                                "summary": "organizer_id"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "interviews"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScheduledInterviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "interviews_create",
                "description": "Creates a `ScheduledInterview` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "interviews"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduledInterviewEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduledInterviewEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduledInterviewEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledInterviewResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/interviews/{id}": {
            "get": {
                "operationId": "interviews_retrieve",
                "description": "Returns a `ScheduledInterview` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application",
                                "application,job_interview_stage",
                                "interviewers",
                                "interviewers,application",
                                "interviewers,application,job_interview_stage",
                                "interviewers,job_interview_stage",
                                "interviewers,organizer",
                                "interviewers,organizer,application",
                                "interviewers,organizer,application,job_interview_stage",
                                "interviewers,organizer,job_interview_stage",
                                "job_interview_stage",
                                "organizer",
                                "organizer,application",
                                "organizer,application,job_interview_stage",
                                "organizer,job_interview_stage"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandInterviewers,Organizer,Application,JobInterviewStage": {
                                "value": "interviewers,organizer,application,job_interview_stage",
                                "summary": "Expand Interviewers, Organizer, Application, Job_interview_stage"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "interviews"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScheduledInterview"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/interviews/meta/post": {
            "get": {
                "operationId": "interviews_meta_post_retrieve",
                "description": "Returns metadata for `ScheduledInterview` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "interviews"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/issues": {
            "get": {
                "operationId": "issues_list",
                "description": "Gets issues.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account_token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include issues whose most recent action occurred before this time"
                    },
                    {
                        "in": "query",
                        "name": "end_user_organization_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_incident_time_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose first incident time was after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "first_incident_time_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose first incident time was before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "include_muted",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If true, will include muted issues"
                    },
                    {
                        "in": "query",
                        "name": "integration_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_incident_time_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose last incident time was after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "last_incident_time_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose last incident time was before this datetime."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include issues whose most recent action occurred after this time"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ONGOING",
                                "RESOLVED"
                            ]
                        },
                        "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED"
                    }
                ],
                "tags": [
                    "issues"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIssueList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/issues/{id}": {
            "get": {
                "operationId": "issues_retrieve",
                "description": "Get a specific issue.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "issues"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/job-interview-stages": {
            "get": {
                "operationId": "job_interview_stages_list",
                "description": "Returns a list of `JobInterviewStage` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "job"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandJob": {
                                "value": "job",
                                "summary": "Expand Job"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "job_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return interview stages for this job.",
                        "examples": {
                            "JobId": {
                                "summary": "job_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "job-interview-stages"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobInterviewStageList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/job-interview-stages/{id}": {
            "get": {
                "operationId": "job_interview_stages_retrieve",
                "description": "Returns a `JobInterviewStage` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "job"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandJob": {
                                "value": "job",
                                "summary": "Expand Job"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "job-interview-stages"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobInterviewStage"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/job-postings": {
            "get": {
                "operationId": "job_postings_list",
                "description": "Returns a list of `JobPosting` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "CLOSED",
                                "DRAFT",
                                "INTERNAL",
                                "PENDING",
                                "PUBLISHED"
                            ]
                        },
                        "description": "If provided, will only return Job Postings with this status. Options: ('PUBLISHED', 'CLOSED', 'DRAFT', 'INTERNAL', 'PENDING')\n\n* `PUBLISHED` - PUBLISHED\n* `CLOSED` - CLOSED\n* `DRAFT` - DRAFT\n* `INTERNAL` - INTERNAL\n* `PENDING` - PENDING"
                    }
                ],
                "tags": [
                    "job-postings"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobPostingList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/job-postings/{id}": {
            "get": {
                "operationId": "job_postings_retrieve",
                "description": "Returns a `JobPosting` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "job-postings"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobPosting"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/jobs": {
            "get": {
                "operationId": "jobs_list",
                "description": "Returns a list of `Job` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "code",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "If provided, will only return jobs with this code."
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departments",
                                "departments,hiring_managers",
                                "departments,hiring_managers,job_postings",
                                "departments,hiring_managers,job_postings,recruiters",
                                "departments,hiring_managers,recruiters",
                                "departments,job_postings",
                                "departments,job_postings,recruiters",
                                "departments,offices",
                                "departments,offices,hiring_managers",
                                "departments,offices,hiring_managers,job_postings",
                                "departments,offices,hiring_managers,job_postings,recruiters",
                                "departments,offices,hiring_managers,recruiters",
                                "departments,offices,job_postings",
                                "departments,offices,job_postings,recruiters",
                                "departments,offices,recruiters",
                                "departments,recruiters",
                                "hiring_managers",
                                "hiring_managers,job_postings",
                                "hiring_managers,job_postings,recruiters",
                                "hiring_managers,recruiters",
                                "job_postings",
                                "job_postings,recruiters",
                                "offices",
                                "offices,hiring_managers",
                                "offices,hiring_managers,job_postings",
                                "offices,hiring_managers,job_postings,recruiters",
                                "offices,hiring_managers,recruiters",
                                "offices,job_postings",
                                "offices,job_postings,recruiters",
                                "offices,recruiters",
                                "recruiters"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandDepartments,Offices,HiringManagers,JobPostings,Recruiters": {
                                "value": "departments,offices,hiring_managers,job_postings,recruiters",
                                "summary": "Expand Departments, Offices, Hiring_managers, Job_postings, Recruiters"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "offices",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return jobs for this office; multiple offices can be separated by commas."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "ARCHIVED",
                                "CLOSED",
                                "DRAFT",
                                "OPEN",
                                "PENDING"
                            ]
                        },
                        "description": "If provided, will only return jobs with this status. Options: ('OPEN', 'CLOSED', 'DRAFT', 'ARCHIVED', 'PENDING')\n\n* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `DRAFT` - DRAFT\n* `ARCHIVED` - ARCHIVED\n* `PENDING` - PENDING"
                    }
                ],
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/jobs/{id}": {
            "get": {
                "operationId": "jobs_retrieve",
                "description": "Returns a `Job` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "departments",
                                "departments,hiring_managers",
                                "departments,hiring_managers,job_postings",
                                "departments,hiring_managers,job_postings,recruiters",
                                "departments,hiring_managers,recruiters",
                                "departments,job_postings",
                                "departments,job_postings,recruiters",
                                "departments,offices",
                                "departments,offices,hiring_managers",
                                "departments,offices,hiring_managers,job_postings",
                                "departments,offices,hiring_managers,job_postings,recruiters",
                                "departments,offices,hiring_managers,recruiters",
                                "departments,offices,job_postings",
                                "departments,offices,job_postings,recruiters",
                                "departments,offices,recruiters",
                                "departments,recruiters",
                                "hiring_managers",
                                "hiring_managers,job_postings",
                                "hiring_managers,job_postings,recruiters",
                                "hiring_managers,recruiters",
                                "job_postings",
                                "job_postings,recruiters",
                                "offices",
                                "offices,hiring_managers",
                                "offices,hiring_managers,job_postings",
                                "offices,hiring_managers,job_postings,recruiters",
                                "offices,hiring_managers,recruiters",
                                "offices,job_postings",
                                "offices,job_postings,recruiters",
                                "offices,recruiters",
                                "recruiters"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandDepartments,Offices,HiringManagers,JobPostings,Recruiters": {
                                "value": "departments,offices,hiring_managers,job_postings,recruiters",
                                "summary": "Expand Departments, Offices, Hiring_managers, Job_postings, Recruiters"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "jobs"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/jobs/{job_id}/screening-questions": {
            "get": {
                "operationId": "jobs_screening_questions_list",
                "description": "Returns a list of `ScreeningQuestion` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "job",
                                "options",
                                "options,job"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandOptions,Job": {
                                "value": "options,job",
                                "summary": "Expand Options, Job"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "path",
                        "name": "job_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "jobs",
                    "screening-questions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScreeningQuestionList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/link-token": {
            "post": {
                "operationId": "link_token_create",
                "description": "Creates a link token to be used when linking a new end user.",
                "tags": [
                    "link-token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkToken"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/linked-account-scopes": {
            "get": {
                "operationId": "linked_account_scopes_retrieve",
                "description": "Get all available permissions for Merge Common Models and fields for a single Linked Account. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "scopes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "linked_account_scopes_create",
                "description": "Update permissions for any Common Model or field for a single Linked Account. Any Scopes not set in this POST request will inherit the default Scopes. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes)",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "scopes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/linked-accounts": {
            "get": {
                "operationId": "linked_accounts_list",
                "description": "List linked accounts for your organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "accounting",
                                "ats",
                                "crm",
                                "datawarehouse",
                                "filestorage",
                                "hris",
                                "mktg",
                                "ticketing"
                            ]
                        },
                        "description": "Options: `accounting`, `ats`, `crm`, `filestorage`, `hris`, `mktg`, `ticketing`\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage\n* `datawarehouse` - datawarehouse"
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_user_email_address",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given email address."
                    },
                    {
                        "in": "query",
                        "name": "end_user_organization_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given organization name."
                    },
                    {
                        "in": "query",
                        "name": "end_user_origin_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given origin ID."
                    },
                    {
                        "in": "query",
                        "name": "end_user_origin_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once."
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once."
                    },
                    {
                        "in": "query",
                        "name": "include_duplicates",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account."
                    },
                    {
                        "in": "query",
                        "name": "integration_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given integration name."
                    },
                    {
                        "in": "query",
                        "name": "is_test_account",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`"
                    }
                ],
                "tags": [
                    "linked-accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountDetailsAndActionsList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/offers": {
            "get": {
                "operationId": "offers_list",
                "description": "Returns a list of `Offer` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return offers for this application.",
                        "examples": {
                            "ApplicationId": {
                                "summary": "application_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "creator_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return offers created by this user.",
                        "examples": {
                            "CreatorId": {
                                "summary": "creator_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application",
                                "application,creator",
                                "creator"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandApplication,Creator": {
                                "value": "application,creator",
                                "summary": "Expand Application, Creator"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "offers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOfferList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/offers/{id}": {
            "get": {
                "operationId": "offers_retrieve",
                "description": "Returns an `Offer` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application",
                                "application,creator",
                                "creator"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandApplication,Creator": {
                                "value": "application,creator",
                                "summary": "Expand Application, Creator"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "offers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/offices": {
            "get": {
                "operationId": "offices_list",
                "description": "Returns a list of `Office` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "offices"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOfficeList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/offices/{id}": {
            "get": {
                "operationId": "offices_retrieve",
                "description": "Returns an `Office` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "offices"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Office"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/passthrough": {
            "post": {
                "operationId": "passthrough_create",
                "description": "Pull data from an endpoint not currently supported by Merge.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "passthrough"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/regenerate-key": {
            "post": {
                "operationId": "regenerate_key_create",
                "description": "Exchange remote keys.",
                "tags": [
                    "regenerate-key"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/reject-reasons": {
            "get": {
                "operationId": "reject_reasons_list",
                "description": "Returns a list of `RejectReason` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "reject-reasons"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRejectReasonList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/reject-reasons/{id}": {
            "get": {
                "operationId": "reject_reasons_retrieve",
                "description": "Returns a `RejectReason` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "reject-reasons"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RejectReason"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/remote-fields": {
            "get": {
                "operationId": "remote_fields_retrieve",
                "description": "Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "common_models",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma seperated list of Common Model names. If included, will only return Remote Fields for those Common Models."
                    },
                    {
                        "in": "query",
                        "name": "include_example_values",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If true, will include example values, where available, for remote fields in the 3rd party platform. These examples come from active data from your customers."
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteFieldAPIResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/scorecards": {
            "get": {
                "operationId": "scorecards_list",
                "description": "Returns a list of `Scorecard` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "application_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return scorecards for this application.",
                        "examples": {
                            "ApplicationId": {
                                "summary": "application_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application",
                                "application,interview",
                                "application,interview,interviewer",
                                "application,interviewer",
                                "interview",
                                "interview,interviewer",
                                "interviewer"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandApplication,Interview,Interviewer": {
                                "value": "application,interview,interviewer",
                                "summary": "Expand Application, Interview, Interviewer"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "interview_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return scorecards for this interview.",
                        "examples": {
                            "InterviewId": {
                                "summary": "interview_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "interviewer_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return scorecards for this interviewer.",
                        "examples": {
                            "InterviewerId": {
                                "summary": "interviewer_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "overall_recommendation"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesOverallRecommendation": {
                                "value": "overall_recommendation",
                                "summary": "Original Enum Values Overall_recommendation"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "overall_recommendation"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesOverallRecommendation": {
                                "value": "overall_recommendation",
                                "summary": "Original Enum Values Overall_recommendation"
                            }
                        }
                    }
                ],
                "tags": [
                    "scorecards"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedScorecardList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/scorecards/{id}": {
            "get": {
                "operationId": "scorecards_retrieve",
                "description": "Returns a `Scorecard` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application",
                                "application,interview",
                                "application,interview,interviewer",
                                "application,interviewer",
                                "interview",
                                "interview,interviewer",
                                "interviewer"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandApplication,Interview,Interviewer": {
                                "value": "application,interview,interviewer",
                                "summary": "Expand Application, Interview, Interviewer"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "overall_recommendation"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesOverallRecommendation": {
                                "value": "overall_recommendation",
                                "summary": "Original Enum Values Overall_recommendation"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "overall_recommendation"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesOverallRecommendation": {
                                "value": "overall_recommendation",
                                "summary": "Original Enum Values Overall_recommendation"
                            }
                        }
                    }
                ],
                "tags": [
                    "scorecards"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scorecard"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/selective-sync/configurations": {
            "get": {
                "operationId": "selective_sync_configurations_list",
                "description": "Get a linked account's selective syncs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                                    }
                                },
                                "examples": {
                                    "StartDateConditionExample": {
                                        "value": [
                                            {
                                                "linked_account_conditions": [
                                                    {
                                                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                        "common_model": "hris.Employee",
                                                        "native_name": "Started At",
                                                        "field_name": "start_date",
                                                        "operator": "GREATER_THAN_OR_EQUAL",
                                                        "value": "2022-01-01T00:00:00Z"
                                                    }
                                                ]
                                            }
                                        ],
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "put": {
                "operationId": "selective_sync_configurations_update",
                "description": "Replace a linked account's selective syncs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationListRequest"
                            },
                            "examples": {
                                "StartDateConditionRequestExample": {
                                    "value": {
                                        "linked_account_conditons": [
                                            {
                                                "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                "operator": "GREATER_THAN_OR_EQUAL",
                                                "value": "2022-01-01T00:00:00Z"
                                            }
                                        ]
                                    },
                                    "summary": "Employees that started on or after January 1st, 2022"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                                    }
                                },
                                "examples": {
                                    "StartDateConditionExample": {
                                        "value": [
                                            {
                                                "linked_account_conditions": [
                                                    {
                                                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                        "common_model": "hris.Employee",
                                                        "native_name": "Started At",
                                                        "field_name": "start_date",
                                                        "operator": "GREATER_THAN_OR_EQUAL",
                                                        "value": "2022-01-01T00:00:00Z"
                                                    }
                                                ]
                                            }
                                        ],
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/selective-sync/meta": {
            "get": {
                "operationId": "selective_sync_meta_list",
                "description": "Get metadata for the conditions available to a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "common_model",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedConditionSchemaList"
                                },
                                "examples": {
                                    "PaginatedConditionSchemaListExample": {
                                        "value": {
                                            "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                            "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                                            "results": [
                                                {
                                                    "id": "123e4567-e89b-12d3-a456-426655440000",
                                                    "common_model": "hris.Employee",
                                                    "native_name": "Started At",
                                                    "field_name": "start_date",
                                                    "is_unique": true,
                                                    "condition_type": "DATE_TIME",
                                                    "operators": [
                                                        {
                                                            "operator": "GREATER_THAN_OR_EQUAL",
                                                            "is_unique": true
                                                        },
                                                        {
                                                            "operator": "LESS_THAN_OR_EQUAL",
                                                            "is_unique": true
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/sync-status": {
            "get": {
                "operationId": "sync_status_list",
                "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`. Learn more about sync status in our [Help Center](https://help.merge.dev/en/articles/8184193-merge-sync-statuses).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "sync-status"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSyncStatusList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/sync-status/resync": {
            "post": {
                "operationId": "sync_status_resync_create",
                "description": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Launch, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "force-resync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyncStatus"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tags": {
            "get": {
                "operationId": "tags_list",
                "description": "Returns a list of `Tag` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/target-fields": {
            "get": {
                "operationId": "target_fields_retrieve",
                "description": "Get all organization-wide Target Fields, this will not include any Linked Account specific Target Fields. Organization-wide Target Fields are additional fields appended to the Merge Common Model for all Linked Accounts in a category. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/target-fields/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalTargetFieldAPIResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/users": {
            "get": {
                "operationId": "users_list",
                "description": "Returns a list of `RemoteUser` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "nullable": true
                        },
                        "description": "If provided, will only return remote users with the given email address"
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "access_role"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesAccessRole": {
                                "value": "access_role",
                                "summary": "Original Enum Values Access_role"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "access_role"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesAccessRole": {
                                "value": "access_role",
                                "summary": "Original Enum Values Access_role"
                            }
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRemoteUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/users/{id}": {
            "get": {
                "operationId": "users_retrieve",
                "description": "Returns a `RemoteUser` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "access_role"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesAccessRole": {
                                "value": "access_role",
                                "summary": "Original Enum Values Access_role"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "access_role"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesAccessRole": {
                                "value": "access_role",
                                "summary": "Original Enum Values Access_role"
                            }
                        }
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteUser"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/webhook-receivers": {
            "get": {
                "operationId": "webhook_receivers_list",
                "description": "Returns a list of `WebhookReceiver` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "webhook-receivers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WebhookReceiver"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "webhook_receivers_create",
                "description": "Creates a `WebhookReceiver` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "webhook-receivers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookReceiver"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        }
    },
    "components": {
        "schemas": {
            "AccessRoleEnum": {
                "enum": [
                    "SUPER_ADMIN",
                    "ADMIN",
                    "TEAM_MEMBER",
                    "LIMITED_TEAM_MEMBER",
                    "INTERVIEWER"
                ],
                "type": "string",
                "description": "* `SUPER_ADMIN` - SUPER_ADMIN\n* `ADMIN` - ADMIN\n* `TEAM_MEMBER` - TEAM_MEMBER\n* `LIMITED_TEAM_MEMBER` - LIMITED_TEAM_MEMBER\n* `INTERVIEWER` - INTERVIEWER",
                "x-merge-category": "ats"
            },
            "AccountDetails": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd"
                    },
                    "integration": {
                        "type": "string",
                        "readOnly": true,
                        "example": "BambooHR"
                    },
                    "integration_slug": {
                        "type": "string",
                        "readOnly": true,
                        "example": "bamboohr"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "hris"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Waystar Royco"
                    },
                    "end_user_email_address": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "example": "kendall.roy@waystar-royco.com"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true,
                        "example": "COMPLETE"
                    },
                    "webhook_listener_url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                    },
                    "is_duplicate": {
                        "type": "boolean",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                        "example": true
                    },
                    "account_type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "PRODUCTION"
                    }
                },
                "x-merge-category": "ats"
            },
            "AccountDetailsAndActions": {
                "type": "object",
                "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "e59b1821-f85c-4e28-a6b3-1804156f3563"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "example": "hris"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountDetailsAndActionsStatusEnum"
                            }
                        ],
                        "example": "INCOMPLETE"
                    },
                    "status_detail": {
                        "type": "string",
                        "example": "Invalid login credentials"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "example": "3ac95cde-6c7f-4eef-afec-be710b42308d"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "example": "Foo Bar, LLC"
                    },
                    "end_user_email_address": {
                        "type": "string",
                        "example": "hradmin@foobar.dev"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The tenant or domain the customer has provided access to.",
                        "example": "foobar"
                    },
                    "webhook_listener_url": {
                        "type": "string",
                        "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                    },
                    "is_duplicate": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                        "example": true
                    },
                    "integration": {
                        "$ref": "#/components/schemas/AccountDetailsAndActionsIntegration",
                        "example": {
                            "name": "SAP SuccessFactors",
                            "categories": [
                                "hris",
                                "ats"
                            ],
                            "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                            "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                            "color": "#F6A704",
                            "slug": "sap-successfactors",
                            "passthrough_available": true,
                            "available_model_operations": [
                                {
                                    "model_name": "Candidate",
                                    "available_operations": [
                                        "FETCH",
                                        "CREATE"
                                    ],
                                    "required_post_parameters": [
                                        "remote_user_id"
                                    ],
                                    "supported_fields": [
                                        "first_name",
                                        "last_name",
                                        "company",
                                        "title"
                                    ]
                                }
                            ]
                        }
                    },
                    "account_type": {
                        "type": "string",
                        "example": "PRODUCTION"
                    }
                },
                "required": [
                    "account_type",
                    "end_user_email_address",
                    "end_user_organization_name",
                    "id",
                    "status",
                    "webhook_listener_url"
                ],
                "x-merge-sample-json": "{\"id\": \"e59b1821-f85c-4e28-a6b3-1804156f3563\", \"category\": \"hris\", \"status\": \"INCOMPLETE\", \"status_detail\": \"Invalid login credentials\", \"end_user_origin_id\": \"3ac95cde-6c7f-4eef-afec-be710b42308d\", \"end_user_organization_name\": \"Foo Bar, LLC\", \"end_user_email_address\": \"hradmin@foobar.dev\", \"webhook_listener_url\": \"https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4\", \"is_duplicate\": true, \"integration\": {\"name\": \"SAP SuccessFactors\", \"categories\": [\"hris\", \"ats\"], \"image\": \"https://cdn.merge.dev/SuccessFactors_Logo.png\", \"square_image\": \"https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg\", \"color\": \"#F6A704\", \"slug\": \"sap-successfactors\", \"passthrough_available\": true, \"available_model_operations\": [{\"model_name\": \"Candidate\", \"available_operations\": [\"FETCH\", \"CREATE\"], \"required_post_parameters\": [\"remote_user_id\"], \"supported_fields\": [\"first_name\", \"last_name\", \"company\", \"title\"]}]}}",
                "x-merge-category": "ats"
            },
            "AccountDetailsAndActionsIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        }
                    },
                    "image": {
                        "type": "string"
                    },
                    "square_image": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "passthrough_available": {
                        "type": "boolean"
                    },
                    "available_model_operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelOperation"
                        }
                    }
                },
                "required": [
                    "categories",
                    "color",
                    "name",
                    "passthrough_available",
                    "slug"
                ],
                "x-merge-category": "ats"
            },
            "AccountDetailsAndActionsStatusEnum": {
                "enum": [
                    "COMPLETE",
                    "INCOMPLETE",
                    "RELINK_NEEDED"
                ],
                "type": "string",
                "description": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
                "x-merge-category": "ats"
            },
            "AccountIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Company name."
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        },
                        "description": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>"
                    },
                    "square_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Company logo in square shape. <b>Upload an image with a white background.</b>"
                    },
                    "color": {
                        "type": "string",
                        "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                        "maxLength": 18
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "api_endpoints_to_documentation_urls": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}"
                    },
                    "webhook_setup_guide_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "Setup guide URL for third party webhook creation. Exposed in Merge Docs."
                    },
                    "category_beta_status": {
                        "type": "object",
                        "description": "Category or categories this integration is in beta status for.",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "ats"
            },
            "AccountToken": {
                "type": "object",
                "properties": {
                    "account_token": {
                        "type": "string",
                        "example": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB"
                    },
                    "integration": {
                        "$ref": "#/components/schemas/AccountIntegration",
                        "example": {
                            "name": "SAP SuccessFactors",
                            "categories": [
                                "hris",
                                "ats"
                            ],
                            "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                            "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                            "color": "#F6A704",
                            "slug": "sap-successfactors"
                        }
                    }
                },
                "required": [
                    "account_token",
                    "integration"
                ],
                "x-merge-category": "ats"
            },
            "Activity": {
                "type": "object",
                "description": "# The Activity Object\n### Description\nThe `Activity` object is used to represent an activity for a candidate performed by a user.\n### Usage Example\nFetch from the `LIST Activities` endpoint and filter by `ID` to show all activities.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "198123"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "user": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user that performed the action.",
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's activity was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "activity_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The activity's type.\n\n* `NOTE` - NOTE\n* `EMAIL` - EMAIL\n* `OTHER` - OTHER",
                        "example": "NOTE"
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true,
                        "description": "The activity's subject.",
                        "example": "Gil Feig's interview"
                    },
                    "body": {
                        "type": "string",
                        "nullable": true,
                        "description": "The activity's body.",
                        "example": "Candidate loves integrations!"
                    },
                    "visibility": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VisibilityEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The activity's visibility.\n\n* `ADMIN_ONLY` - ADMIN_ONLY\n* `PUBLIC` - PUBLIC\n* `PRIVATE` - PRIVATE",
                        "example": "PRIVATE"
                    },
                    "candidate": {
                        "type": "string",
                        "nullable": true,
                        "description": "The activity’s candidate.",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"user\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "ActivityEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ActivityRequest"
                    },
                    "remote_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "model",
                    "remote_user_id"
                ],
                "x-merge-category": "ats"
            },
            "ActivityRequest": {
                "type": "object",
                "description": "# The Activity Object\n### Description\nThe `Activity` object is used to represent an activity for a candidate performed by a user.\n### Usage Example\nFetch from the `LIST Activities` endpoint and filter by `ID` to show all activities.",
                "properties": {
                    "user": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user that performed the action.",
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "activity_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActivityTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The activity's type.\n\n* `NOTE` - NOTE\n* `EMAIL` - EMAIL\n* `OTHER` - OTHER",
                        "example": "NOTE"
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true,
                        "description": "The activity's subject.",
                        "example": "Gil Feig's interview"
                    },
                    "body": {
                        "type": "string",
                        "nullable": true,
                        "description": "The activity's body.",
                        "example": "Candidate loves integrations!"
                    },
                    "visibility": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VisibilityEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The activity's visibility.\n\n* `ADMIN_ONLY` - ADMIN_ONLY\n* `PUBLIC` - PUBLIC\n* `PRIVATE` - PRIVATE",
                        "example": "PRIVATE"
                    },
                    "candidate": {
                        "type": "string",
                        "nullable": true,
                        "description": "The activity’s candidate.",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"user\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "ActivityResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Activity"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ats"
            },
            "ActivityTypeEnum": {
                "enum": [
                    "NOTE",
                    "EMAIL",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `NOTE` - NOTE\n* `EMAIL` - EMAIL\n* `OTHER` - OTHER",
                "x-merge-category": "ats"
            },
            "AdvancedMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_required": {
                        "type": "boolean"
                    },
                    "is_custom": {
                        "type": "boolean"
                    },
                    "field_choices": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "id"
                ],
                "x-merge-category": "ats"
            },
            "Application": {
                "type": "object",
                "description": "# The Application Object\n### Description\nThe Application Object is used to represent a candidate's journey through a particular Job's recruiting process. If a Candidate applies for multiple Jobs, there will be a separate Application for each Job if the third-party integration allows it.\n\n### Usage Example\nFetch from the `LIST Applications` endpoint and filter by `ID` to show all applications.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "98796"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "candidate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The candidate applying.",
                        "example": "2872ba14-4084-492b-be96-e5eee6fc33ef",
                        "x-merge-expands-to": "Candidate"
                    },
                    "job": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The job being applied for.",
                        "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633",
                        "x-merge-expands-to": "Job"
                    },
                    "applied_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the application was submitted.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "rejected_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the application was rejected.",
                        "example": "2021-11-15T00:00:00Z"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "e9b5c11d-c588-468e-8567-cd6992e42b62"
                        ],
                        "x-merge-expands-to": "Offer"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true,
                        "description": "The application's source.",
                        "example": "Campus recruiting event"
                    },
                    "credited_to": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user credited for this application.",
                        "example": "58166795-8d68-4b30-9bfb-bfd402479484",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "current_stage": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application's current stage.",
                        "example": "d578dfdc-7b0a-4ab6-a2b0-4b40f20eb9ea",
                        "x-merge-expands-to": "JobInterviewStage"
                    },
                    "reject_reason": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application's reason for rejection.",
                        "example": "59b25f2b-da02-40f5-9656-9fa0db555784",
                        "x-merge-expands-to": "RejectReason"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/candidacies",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"candidate\": \"Candidate\", \"credited_to\": \"RemoteUser\", \"current_stage\": \"JobInterviewStage\", \"job\": \"Job\", \"offers\": \"Offer\", \"reject_reason\": \"RejectReason\"}",
                "x-merge-category": "ats"
            },
            "ApplicationEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ApplicationRequest"
                    },
                    "remote_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "model",
                    "remote_user_id"
                ],
                "x-merge-category": "ats"
            },
            "ApplicationRequest": {
                "type": "object",
                "description": "# The Application Object\n### Description\nThe Application Object is used to represent a candidate's journey through a particular Job's recruiting process. If a Candidate applies for multiple Jobs, there will be a separate Application for each Job if the third-party integration allows it.\n\n### Usage Example\nFetch from the `LIST Applications` endpoint and filter by `ID` to show all applications.",
                "properties": {
                    "candidate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The candidate applying.",
                        "example": "2872ba14-4084-492b-be96-e5eee6fc33ef",
                        "x-merge-expands-to": "Candidate"
                    },
                    "job": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The job being applied for.",
                        "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633",
                        "x-merge-expands-to": "Job"
                    },
                    "applied_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the application was submitted.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "rejected_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the application was rejected.",
                        "example": "2021-11-15T00:00:00Z"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "e9b5c11d-c588-468e-8567-cd6992e42b62"
                        ],
                        "x-merge-expands-to": "Offer"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true,
                        "description": "The application's source.",
                        "example": "Campus recruiting event"
                    },
                    "credited_to": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user credited for this application.",
                        "example": "58166795-8d68-4b30-9bfb-bfd402479484",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "current_stage": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application's current stage.",
                        "example": "d578dfdc-7b0a-4ab6-a2b0-4b40f20eb9ea",
                        "x-merge-expands-to": "JobInterviewStage"
                    },
                    "reject_reason": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application's reason for rejection.",
                        "example": "59b25f2b-da02-40f5-9656-9fa0db555784",
                        "x-merge-expands-to": "RejectReason"
                    },
                    "remote_template_id": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "example": "92830948203"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"candidate\": \"Candidate\", \"credited_to\": \"RemoteUser\", \"current_stage\": \"JobInterviewStage\", \"job\": \"Job\", \"offers\": \"Offer\", \"reject_reason\": \"RejectReason\"}",
                "x-merge-category": "ats"
            },
            "ApplicationResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ats"
            },
            "AsyncPassthroughReciept": {
                "type": "object",
                "properties": {
                    "async_passthrough_receipt_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "fd29020f-2695-445e-922e-dcd5e81903fd"
                    }
                },
                "required": [
                    "async_passthrough_receipt_id"
                ],
                "x-merge-category": "ats"
            },
            "Attachment": {
                "type": "object",
                "description": "# The Attachment Object\n### Description\nThe `Attachment` object is used to represent a file attached to a candidate.\n### Usage Example\nFetch from the `LIST Attachments` endpoint and view attachments accessible by a company.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "c640b80b-fac9-409f-aa19-1f9221aec445"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "11167"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's name.",
                        "example": "Candidate Resume"
                    },
                    "file_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 2000,
                        "example": "http://alturl.com/p749b",
                        "description": "The attachment's url."
                    },
                    "candidate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "",
                        "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
                    },
                    "attachment_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttachmentTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The attachment's type.\n\n* `RESUME` - RESUME\n* `COVER_LETTER` - COVER_LETTER\n* `OFFER_LETTER` - OFFER_LETTER\n* `OTHER` - OTHER",
                        "example": "RESUME"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/attachments",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"ticket\": \"Ticket\"}",
                "x-merge-category": "ats"
            },
            "AttachmentEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/AttachmentRequest"
                    },
                    "remote_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "model",
                    "remote_user_id"
                ],
                "x-merge-category": "ats"
            },
            "AttachmentRequest": {
                "type": "object",
                "description": "# The Attachment Object\n### Description\nThe `Attachment` object is used to represent a file attached to a candidate.\n### Usage Example\nFetch from the `LIST Attachments` endpoint and view attachments accessible by a company.",
                "properties": {
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's name.",
                        "example": "Candidate Resume"
                    },
                    "file_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 2000,
                        "example": "http://alturl.com/p749b",
                        "description": "The attachment's url."
                    },
                    "candidate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "",
                        "example": "2872ba14-4084-492b-be96-e5eee6fc33ef"
                    },
                    "attachment_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttachmentTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The attachment's type.\n\n* `RESUME` - RESUME\n* `COVER_LETTER` - COVER_LETTER\n* `OFFER_LETTER` - OFFER_LETTER\n* `OTHER` - OTHER",
                        "example": "RESUME"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"ticket\": \"Ticket\"}",
                "x-merge-category": "ats"
            },
            "AttachmentResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Attachment"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ats"
            },
            "AttachmentTypeEnum": {
                "enum": [
                    "RESUME",
                    "COVER_LETTER",
                    "OFFER_LETTER",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `RESUME` - RESUME\n* `COVER_LETTER` - COVER_LETTER\n* `OFFER_LETTER` - OFFER_LETTER\n* `OTHER` - OTHER",
                "x-merge-category": "ats"
            },
            "AuditLogEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b5ceea2a-7171-47ce-8090-165cfce5572c"
                    },
                    "user_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The User's full name at the time of this Event occurring.",
                        "maxLength": 200,
                        "example": "Gil Feig"
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "The User's email at the time of this Event occurring.",
                        "maxLength": 254,
                        "example": "hello@merge.dev"
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "Designates the role of the user (or SYSTEM/API if action not taken by a user) at the time of this Event occurring.\n\n* `ADMIN` - ADMIN\n* `DEVELOPER` - DEVELOPER\n* `MEMBER` - MEMBER\n* `API` - API\n* `SYSTEM` - SYSTEM\n* `MERGE_TEAM` - MERGE_TEAM",
                        "example": "ADMIN"
                    },
                    "ip_address": {
                        "type": "string",
                        "maxLength": 45,
                        "example": "192.0.2.123"
                    },
                    "event_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventTypeEnum"
                            }
                        ],
                        "description": "Designates the type of event that occurred.\n\n* `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY\n* `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY\n* `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY\n* `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY\n* `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY\n* `INVITED_USER` - INVITED_USER\n* `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED\n* `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED\n* `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT\n* `CREATED_DESTINATION` - CREATED_DESTINATION\n* `DELETED_DESTINATION` - DELETED_DESTINATION\n* `CHANGED_DESTINATION` - CHANGED_DESTINATION\n* `CHANGED_SCOPES` - CHANGED_SCOPES\n* `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION\n* `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS\n* `ENABLED_INTEGRATION` - ENABLED_INTEGRATION\n* `DISABLED_INTEGRATION` - DISABLED_INTEGRATION\n* `ENABLED_CATEGORY` - ENABLED_CATEGORY\n* `DISABLED_CATEGORY` - DISABLED_CATEGORY\n* `CHANGED_PASSWORD` - CHANGED_PASSWORD\n* `RESET_PASSWORD` - RESET_PASSWORD\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING\n* `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING\n* `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING\n* `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING\n* `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC\n* `MUTED_ISSUE` - MUTED_ISSUE\n* `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK",
                        "example": "CHANGED_SCOPES"
                    },
                    "event_description": {
                        "type": "string",
                        "example": "Organization-wide Scopes for model hris.Employee updated from Read to Read+Write"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "event_description",
                    "event_type",
                    "ip_address",
                    "role"
                ],
                "x-merge-category": "ats"
            },
            "AvailableActions": {
                "type": "object",
                "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
                "properties": {
                    "integration": {
                        "$ref": "#/components/schemas/AccountIntegration",
                        "example": {
                            "name": "Lever",
                            "categories": [
                                "ats"
                            ],
                            "image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png",
                            "square_image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png",
                            "color": "#262A34",
                            "is_in_beta": "true",
                            "api_endpoints_to_documentation_urls": "{'GET': [('/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve')], 'POST': []}"
                        }
                    },
                    "passthrough_available": {
                        "type": "boolean",
                        "example": true
                    },
                    "available_model_operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelOperation"
                        },
                        "example": [
                            {
                                "model_name": "Candidate",
                                "available_operations": [
                                    "FETCH",
                                    "CREATE"
                                ],
                                "required_post_parameters": [
                                    "remote_user_id"
                                ],
                                "supported_fields": [
                                    "first_name",
                                    "last_name",
                                    "company",
                                    "title"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "integration",
                    "passthrough_available"
                ],
                "x-merge-category": "ats"
            },
            "Candidate": {
                "type": "object",
                "description": "# The Candidate Object\n### Description\nThe `Candidate` object is used to represent profile information about a given Candidate. Because it is specific to a Candidate, this information stays constant across applications.\n### Usage Example\nFetch from the `LIST Candidates` endpoint and filter by `ID` to show all candidates.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "521b18c2-4d01-4297-b451-19858d07c133"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "21198"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's first name.",
                        "example": "Gil"
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's last name.",
                        "example": "Feig"
                    },
                    "company": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's current company.",
                        "example": "Columbia Dining App."
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's current title.",
                        "example": "Software Engineer"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's candidate was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's candidate was updated.",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "last_interaction_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the most recent interaction with the candidate occurred.",
                        "example": "2021-10-17T00:00:00Z"
                    },
                    "is_private": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the candidate is private.",
                        "example": true
                    },
                    "can_email": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the candidate can be emailed.",
                        "example": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The candidate's locations."
                        },
                        "nullable": true,
                        "description": "The candidate's locations.",
                        "example": [
                            "San Francisco",
                            "New York",
                            "Miami"
                        ]
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumber"
                        },
                        "example": [
                            {
                                "value": "+1234567890",
                                "phone_number_type": "MOBILE"
                            }
                        ]
                    },
                    "email_addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailAddress"
                        },
                        "example": [
                            {
                                "value": "hello@merge.dev",
                                "email_address_type": "PERSONAL"
                            }
                        ]
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Url"
                        },
                        "example": [
                            {
                                "value": "http://alturl.com/p749b",
                                "url_type": "BLOG"
                            }
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The tag's name."
                        },
                        "example": [
                            "High-Priority"
                        ],
                        "description": "Array of `Tag` names as strings."
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "29eb9867-ce2a-403f-b8ce-f2844b89f078",
                            "b4d08e5c-de00-4d64-a29f-66addac9af99",
                            "4ff877d2-fb3e-4a5b-a7a5-168ddf2ffa56"
                        ],
                        "description": "Array of `Application` object IDs.",
                        "x-merge-expands-to": "Application"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "bea08964-32b4-4a20-8bb4-2612ba09de1d"
                        ],
                        "description": "Array of `Attachment` object IDs.",
                        "x-merge-expands-to": "Attachment"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/candidates",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"applications\": \"Application\", \"attachments\": \"Attachment\"}",
                "x-merge-category": "ats"
            },
            "CandidateEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/CandidateRequest"
                    },
                    "remote_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "model",
                    "remote_user_id"
                ],
                "x-merge-category": "ats"
            },
            "CandidateRequest": {
                "type": "object",
                "description": "# The Candidate Object\n### Description\nThe `Candidate` object is used to represent profile information about a given Candidate. Because it is specific to a Candidate, this information stays constant across applications.\n### Usage Example\nFetch from the `LIST Candidates` endpoint and filter by `ID` to show all candidates.",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's first name.",
                        "example": "Gil"
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's last name.",
                        "example": "Feig"
                    },
                    "company": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's current company.",
                        "example": "Columbia Dining App."
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's current title.",
                        "example": "Software Engineer"
                    },
                    "last_interaction_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the most recent interaction with the candidate occurred.",
                        "example": "2021-10-17T00:00:00Z"
                    },
                    "is_private": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the candidate is private.",
                        "example": true
                    },
                    "can_email": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the candidate can be emailed.",
                        "example": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The candidate's locations."
                        },
                        "nullable": true,
                        "description": "The candidate's locations.",
                        "example": [
                            "San Francisco",
                            "New York",
                            "Miami"
                        ]
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumberRequest"
                        },
                        "example": [
                            {
                                "value": "+1234567890",
                                "phone_number_type": "MOBILE"
                            }
                        ]
                    },
                    "email_addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailAddressRequest"
                        },
                        "example": [
                            {
                                "value": "hello@merge.dev",
                                "email_address_type": "PERSONAL"
                            }
                        ]
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UrlRequest"
                        },
                        "example": [
                            {
                                "value": "http://alturl.com/p749b",
                                "url_type": "BLOG"
                            }
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The tag's name."
                        },
                        "example": [
                            "High-Priority"
                        ],
                        "description": "Array of `Tag` names as strings."
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "29eb9867-ce2a-403f-b8ce-f2844b89f078",
                            "b4d08e5c-de00-4d64-a29f-66addac9af99",
                            "4ff877d2-fb3e-4a5b-a7a5-168ddf2ffa56"
                        ],
                        "description": "Array of `Application` object IDs.",
                        "x-merge-expands-to": "Application"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "bea08964-32b4-4a20-8bb4-2612ba09de1d"
                        ],
                        "description": "Array of `Attachment` object IDs.",
                        "x-merge-expands-to": "Attachment"
                    },
                    "remote_template_id": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "example": "92830948203"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"applications\": \"Application\", \"attachments\": \"Attachment\"}",
                "x-merge-category": "ats"
            },
            "CandidateResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Candidate"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ats"
            },
            "CategoriesEnum": {
                "enum": [
                    "hris",
                    "ats",
                    "accounting",
                    "ticketing",
                    "crm",
                    "mktg",
                    "filestorage"
                ],
                "type": "string",
                "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
                "x-merge-category": "ats"
            },
            "CategoryEnum": {
                "enum": [
                    "hris",
                    "ats",
                    "accounting",
                    "ticketing",
                    "crm",
                    "mktg",
                    "filestorage"
                ],
                "type": "string",
                "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
                "x-merge-category": "ats"
            },
            "CommonModelScopeAPI": {
                "type": "object",
                "properties": {
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializer"
                        },
                        "description": "The common models you want to update the scopes for",
                        "example": [
                            {
                                "model_name": "Employee",
                                "model_permissions": {
                                    "READ": {
                                        "is_enabled": true
                                    },
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                },
                                "field_permissions": {
                                    "enabled_fields": [
                                        "avatar",
                                        "created_at",
                                        "custom_fields",
                                        "date_of_birth",
                                        "first_name",
                                        "gender",
                                        "remote_created_at",
                                        "remote_data"
                                    ],
                                    "disabled_fields": [
                                        "company",
                                        "employments",
                                        "groups",
                                        "home_location",
                                        "manager",
                                        "work_location"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "common_models"
                ],
                "x-merge-category": "ats"
            },
            "CommonModelScopesBodyRequest": {
                "type": "object",
                "properties": {
                    "model_id": {
                        "type": "string",
                        "minLength": 1,
                        "example": "hris.Employee"
                    },
                    "enabled_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnabledActionsEnum"
                        },
                        "example": [
                            "READ",
                            "WRITE"
                        ]
                    },
                    "disabled_fields": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "example": [
                            "first_name"
                        ]
                    }
                },
                "required": [
                    "disabled_fields",
                    "enabled_actions",
                    "model_id"
                ],
                "x-merge-category": "ats"
            },
            "ConditionSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account."
                    },
                    "common_model": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The common model for which a condition schema is defined."
                    },
                    "native_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "field_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_unique": {
                        "type": "boolean",
                        "description": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times."
                    },
                    "condition_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS"
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperatorSchema"
                        },
                        "description": "The schemas for the operators that can be used on a condition."
                    }
                },
                "required": [
                    "condition_type",
                    "field_name",
                    "id",
                    "native_name",
                    "operators"
                ],
                "x-merge-category": "ats"
            },
            "ConditionTypeEnum": {
                "enum": [
                    "BOOLEAN",
                    "DATE",
                    "DATE_TIME",
                    "INTEGER",
                    "FLOAT",
                    "STRING",
                    "LIST_OF_STRINGS"
                ],
                "type": "string",
                "description": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
                "x-merge-category": "ats"
            },
            "CreateFieldMappingRequest": {
                "type": "object",
                "properties": {
                    "target_field_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the target field you want this remote field to map to.",
                        "example": "example_target_field_name"
                    },
                    "target_field_description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The description of the target field you want this remote field to map to.",
                        "example": "this is a example description of the target field"
                    },
                    "remote_field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "description": "The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.",
                        "example": [
                            "example_remote_field"
                        ]
                    },
                    "remote_method": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The method of the remote endpoint where the remote field is coming from.",
                        "example": "GET"
                    },
                    "remote_url_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the remote endpoint where the remote field is coming from.",
                        "example": "/example-url-path"
                    },
                    "common_model_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the Common Model that the remote field corresponds to in a given category.",
                        "example": "ExampleCommonModel"
                    }
                },
                "required": [
                    "common_model_name",
                    "remote_field_traversal_path",
                    "remote_method",
                    "remote_url_path",
                    "target_field_description",
                    "target_field_name"
                ],
                "x-merge-category": "ats"
            },
            "DataPassthroughRequest": {
                "type": "object",
                "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
                "properties": {
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "example": "POST"
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the request in the third party's platform.",
                        "example": "/scooters"
                    },
                    "base_url_override": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional override of the third party's base url for the request.",
                        "example": "https://api.example.com"
                    },
                    "data": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The data with the request. You must include a `request_format` parameter matching the data's format",
                        "example": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
                    },
                    "multipart_form_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipartFormFieldRequest"
                        },
                        "nullable": true,
                        "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`."
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                        "example": {
                            "EXTRA-HEADER": "value"
                        }
                    },
                    "request_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestFormatEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "JSON"
                    },
                    "normalize_response": {
                        "type": "boolean",
                        "description": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`."
                    }
                },
                "required": [
                    "method",
                    "path"
                ],
                "x-merge-category": "ats"
            },
            "DebugModeLog": {
                "type": "object",
                "properties": {
                    "log_id": {
                        "type": "string",
                        "example": "99433219-8017-4acd-bb3c-ceb23d663832"
                    },
                    "dashboard_view": {
                        "type": "string",
                        "example": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832"
                    },
                    "log_summary": {
                        "$ref": "#/components/schemas/DebugModelLogSummary",
                        "example": {
                            "url": "www.exampleintegration.com/api/v1/exampleapi",
                            "method": "POST",
                            "status_code": 200
                        }
                    }
                },
                "required": [
                    "dashboard_view",
                    "log_id",
                    "log_summary"
                ],
                "x-merge-sample-json": "{\"log_id\": \"99433219-8017-4acd-bb3c-ceb23d663832\", \"dashboard_view\": \"https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832\", \"log_summary\": {\"url\": \"www.exampleintegration.com/api/v1/exampleapi\", \"method\": \"POST\", \"status_code\": 200}}",
                "x-merge-category": "ats"
            },
            "DebugModelLogSummary": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "www.exampleintegration.com/api/v1/exampleapi"
                    },
                    "method": {
                        "type": "string",
                        "example": "POST"
                    },
                    "status_code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "required": [
                    "method",
                    "status_code",
                    "url"
                ],
                "x-merge-sample-json": "{\"url\": \"www.exampleintegration.com/api/v1/exampleapi\", \"method\": \"POST\", \"status_code\": 200}",
                "x-merge-category": "ats"
            },
            "Department": {
                "type": "object",
                "description": "# The Department Object\n### Description\nThe `Department` object is used to represent a department within a company.\n### Usage Example\nFetch from the `LIST Departments` endpoint and view the departments within a company.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "23456"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The department's name.",
                        "example": "Engineering"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/departments",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-category": "ats"
            },
            "DisabilityStatusEnum": {
                "enum": [
                    "YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY",
                    "NO_I_DONT_HAVE_A_DISABILITY",
                    "I_DONT_WISH_TO_ANSWER"
                ],
                "type": "string",
                "description": "* `YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY` - YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY\n* `NO_I_DONT_HAVE_A_DISABILITY` - NO_I_DONT_HAVE_A_DISABILITY\n* `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER",
                "x-merge-category": "ats"
            },
            "EEOC": {
                "type": "object",
                "description": "# The EEOC Object\n### Description\nThe `EEOC` object is used to represent the Equal Employment Opportunity Commission information for a candidate (race, gender, veteran status, disability status).\n### Usage Example\nFetch from the `LIST EEOCs` endpoint and filter by `candidate` to show all EEOC information for a candidate.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "f7dd7b4f-237e-4772-8bd4-3246384c6c58"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "76"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "candidate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The candidate being represented.",
                        "example": "f963f34d-3d2f-4f77-b557-cf36bc7e6498",
                        "x-merge-expands-to": "Candidate"
                    },
                    "submitted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the information was submitted.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "race": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RaceEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The candidate's race.\n\n* `AMERICAN_INDIAN_OR_ALASKAN_NATIVE` - AMERICAN_INDIAN_OR_ALASKAN_NATIVE\n* `ASIAN` - ASIAN\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `WHITE` - WHITE\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY",
                        "example": "HISPANIC_OR_LATINO"
                    },
                    "gender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GenderEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The candidate's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY",
                        "example": "FEMALE"
                    },
                    "veteran_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VeteranStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The candidate's veteran status.\n\n* `I_AM_NOT_A_PROTECTED_VETERAN` - I_AM_NOT_A_PROTECTED_VETERAN\n* `I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN` - I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN\n* `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER",
                        "example": "I_AM_NOT_A_PROTECTED_VETERAN"
                    },
                    "disability_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DisabilityStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The candidate's disability status.\n\n* `YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY` - YES_I_HAVE_A_DISABILITY_OR_PREVIOUSLY_HAD_A_DISABILITY\n* `NO_I_DONT_HAVE_A_DISABILITY` - NO_I_DONT_HAVE_A_DISABILITY\n* `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER",
                        "example": "I_DONT_WISH_TO_ANSWER"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/eeoc",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"candidate\": \"Candidate\"}",
                "x-merge-category": "ats"
            },
            "EmailAddress": {
                "type": "object",
                "description": "# The EmailAddress Object\n### Description\nThe `EmailAddress` object is used to represent a candidate's email address.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their email addresses.",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "value": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "The email address.",
                        "maxLength": 254,
                        "example": "merge_is_hiring@merge.dev"
                    },
                    "email_address_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmailAddressTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The type of email address.\n\n* `PERSONAL` - PERSONAL\n* `WORK` - WORK\n* `OTHER` - OTHER",
                        "example": "PERSONAL"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "ats"
            },
            "EmailAddressRequest": {
                "type": "object",
                "description": "# The EmailAddress Object\n### Description\nThe `EmailAddress` object is used to represent a candidate's email address.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their email addresses.",
                "properties": {
                    "value": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "The email address.",
                        "maxLength": 254,
                        "example": "merge_is_hiring@merge.dev"
                    },
                    "email_address_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmailAddressTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The type of email address.\n\n* `PERSONAL` - PERSONAL\n* `WORK` - WORK\n* `OTHER` - OTHER",
                        "example": "PERSONAL"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "EmailAddressTypeEnum": {
                "enum": [
                    "PERSONAL",
                    "WORK",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `PERSONAL` - PERSONAL\n* `WORK` - WORK\n* `OTHER` - OTHER",
                "x-merge-category": "ats"
            },
            "EnabledActionsEnum": {
                "enum": [
                    "READ",
                    "WRITE"
                ],
                "type": "string",
                "description": "* `READ` - READ\n* `WRITE` - WRITE",
                "x-merge-category": "ats"
            },
            "EncodingEnum": {
                "enum": [
                    "RAW",
                    "BASE64",
                    "GZIP_BASE64"
                ],
                "type": "string",
                "description": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                "x-merge-category": "ats"
            },
            "EndUserDetailsRequest": {
                "type": "object",
                "properties": {
                    "end_user_email_address": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
                        "maxLength": 100,
                        "example": "example@gmail.com"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Your end user's organization.",
                        "maxLength": 100,
                        "example": "Test Organization"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
                        "maxLength": 100,
                        "example": "12345"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        },
                        "description": "The integration categories to show in Merge Link.",
                        "example": [
                            "hris",
                            "ats"
                        ]
                    },
                    "integration": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://docs.merge.dev/guides/merge-link/single-integration/.",
                        "example": "bamboohr"
                    },
                    "link_expiry_mins": {
                        "type": "integer",
                        "maximum": 10080,
                        "minimum": 30,
                        "default": 30,
                        "description": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30."
                    },
                    "should_create_magic_link_url": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false,
                        "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link."
                    },
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonModelScopesBodyRequest"
                        },
                        "nullable": true,
                        "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account."
                    },
                    "category_common_model_scopes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializerRequest"
                            }
                        },
                        "nullable": true,
                        "description": "When creating a Link Token, you can set permissions for Common Models that will apply to the account that is going to be linked. Any model or field not specified in link token payload will default to existing settings.",
                        "example": {
                            "hris": [
                                {
                                    "model_name": "Employee",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "first_name",
                                            "last_name",
                                            "personal_email"
                                        ],
                                        "disabled": [
                                            "preferred_name"
                                        ]
                                    }
                                },
                                {
                                    "model_name": "Employment",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": false
                                        },
                                        "WRITE": {
                                            "is_enabled": false
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "effective_date"
                                        ]
                                    }
                                }
                            ],
                            "ats": [
                                {
                                    "model_name": "Job",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "name"
                                        ],
                                        "disabled": [
                                            "description"
                                        ]
                                    }
                                },
                                {
                                    "model_name": "Department",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "language": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The language code for the language to localize Merge Link to.",
                        "maxLength": 2
                    }
                },
                "required": [
                    "categories",
                    "end_user_email_address",
                    "end_user_organization_name",
                    "end_user_origin_id"
                ],
                "x-merge-category": "ats"
            },
            "ErrorValidationProblem": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/ValidationProblemSource",
                        "example": {
                            "pointer": "/model/custom_fields"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Missing Required Field"
                    },
                    "detail": {
                        "type": "string",
                        "example": "custom_fields is a required field on model."
                    },
                    "problem_type": {
                        "type": "string",
                        "example": "MISSING_REQUIRED_FIELD"
                    }
                },
                "required": [
                    "detail",
                    "problem_type",
                    "title"
                ],
                "x-merge-category": "ats"
            },
            "EventTypeEnum": {
                "enum": [
                    "CREATED_REMOTE_PRODUCTION_API_KEY",
                    "DELETED_REMOTE_PRODUCTION_API_KEY",
                    "CREATED_TEST_API_KEY",
                    "DELETED_TEST_API_KEY",
                    "REGENERATED_PRODUCTION_API_KEY",
                    "INVITED_USER",
                    "TWO_FACTOR_AUTH_ENABLED",
                    "TWO_FACTOR_AUTH_DISABLED",
                    "DELETED_LINKED_ACCOUNT",
                    "CREATED_DESTINATION",
                    "DELETED_DESTINATION",
                    "CHANGED_DESTINATION",
                    "CHANGED_SCOPES",
                    "CHANGED_PERSONAL_INFORMATION",
                    "CHANGED_ORGANIZATION_SETTINGS",
                    "ENABLED_INTEGRATION",
                    "DISABLED_INTEGRATION",
                    "ENABLED_CATEGORY",
                    "DISABLED_CATEGORY",
                    "CHANGED_PASSWORD",
                    "RESET_PASSWORD",
                    "ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION",
                    "ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT",
                    "DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION",
                    "DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT",
                    "CREATED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "CREATED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "CHANGED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "CHANGED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "DELETED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "DELETED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "FORCED_LINKED_ACCOUNT_RESYNC",
                    "MUTED_ISSUE",
                    "GENERATED_MAGIC_LINK"
                ],
                "type": "string",
                "description": "* `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY\n* `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY\n* `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY\n* `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY\n* `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY\n* `INVITED_USER` - INVITED_USER\n* `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED\n* `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED\n* `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT\n* `CREATED_DESTINATION` - CREATED_DESTINATION\n* `DELETED_DESTINATION` - DELETED_DESTINATION\n* `CHANGED_DESTINATION` - CHANGED_DESTINATION\n* `CHANGED_SCOPES` - CHANGED_SCOPES\n* `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION\n* `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS\n* `ENABLED_INTEGRATION` - ENABLED_INTEGRATION\n* `DISABLED_INTEGRATION` - DISABLED_INTEGRATION\n* `ENABLED_CATEGORY` - ENABLED_CATEGORY\n* `DISABLED_CATEGORY` - DISABLED_CATEGORY\n* `CHANGED_PASSWORD` - CHANGED_PASSWORD\n* `RESET_PASSWORD` - RESET_PASSWORD\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING\n* `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING\n* `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING\n* `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING\n* `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC\n* `MUTED_ISSUE` - MUTED_ISSUE\n* `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK",
                "x-merge-category": "ats"
            },
            "ExternalTargetFieldAPI": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": "example_target_field_name"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": "this is a example description of a target field"
                    },
                    "is_mapped": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": true
                    }
                },
                "x-merge-category": "ats"
            },
            "ExternalTargetFieldAPIResponse": {
                "type": "object",
                "properties": {
                    "Activity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Application": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Candidate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Department": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "EEOC": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "ScheduledInterview": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Job": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "JobPosting": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "JobInterviewStage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Offer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Office": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "RejectReason": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Scorecard": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "RemoteUser": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "FieldMappingApiInstance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "is_integration_wide": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "target_field": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "is_organization_wide": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "description",
                            "is_organization_wide",
                            "name"
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "example": {
                            "name": "example_target_field_name",
                            "description": "this is a example description of a target field",
                            "is_organization_wide": true
                        }
                    },
                    "remote_field": {
                        "type": "object",
                        "properties": {
                            "remote_key_name": {
                                "type": "string"
                            },
                            "schema": {
                                "type": "object",
                                "additionalProperties": {}
                            },
                            "remote_endpoint_info": {
                                "type": "object",
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "url_path": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "field_traversal_path": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "field_traversal_path",
                                    "method",
                                    "url_path"
                                ]
                            }
                        },
                        "required": [
                            "remote_endpoint_info",
                            "remote_key_name",
                            "schema"
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "example": {
                            "remote_key_name": "example_remote_field_key",
                            "schema": {
                                "type": "string"
                            },
                            "remote_endpoint_info": {
                                "method": "GET",
                                "url_path": "/example-url-path",
                                "field_traversal_path": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "FieldMappingApiInstanceResponse": {
                "type": "object",
                "properties": {
                    "Activity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Application": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Candidate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Department": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "EEOC": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "ScheduledInterview": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Job": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "JobPosting": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "JobInterviewStage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Offer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Office": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "RejectReason": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Scorecard": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "RemoteUser": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "FieldMappingInstanceResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/FieldMappingApiInstance"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ats"
            },
            "FieldPermissionDeserializer": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "array",
                        "items": {}
                    },
                    "disabled": {
                        "type": "array",
                        "items": {}
                    }
                },
                "x-merge-category": "ats"
            },
            "FieldPermissionDeserializerRequest": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "array",
                        "items": {}
                    },
                    "disabled": {
                        "type": "array",
                        "items": {}
                    }
                },
                "x-merge-category": "ats"
            },
            "GenderEnum": {
                "enum": [
                    "MALE",
                    "FEMALE",
                    "NON-BINARY",
                    "OTHER",
                    "DECLINE_TO_SELF_IDENTIFY"
                ],
                "type": "string",
                "description": "* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY",
                "x-merge-category": "ats"
            },
            "GenerateRemoteKeyRequest": {
                "type": "object",
                "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the remote key",
                        "example": "Remote Deployment Key 1"
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "ats"
            },
            "IgnoreCommonModelRequest": {
                "type": "object",
                "properties": {
                    "reason": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReasonEnum"
                            }
                        ],
                        "example": "GENERAL_CUSTOMER_REQUEST"
                    },
                    "message": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 256,
                        "example": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39"
                    }
                },
                "required": [
                    "reason"
                ],
                "x-merge-category": "ats"
            },
            "IndividualCommonModelScopeDeserializer": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "type": "string"
                    },
                    "model_permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ModelPermissionDeserializer"
                        }
                    },
                    "field_permissions": {
                        "$ref": "#/components/schemas/FieldPermissionDeserializer"
                    }
                },
                "required": [
                    "model_name"
                ],
                "x-merge-category": "ats"
            },
            "IndividualCommonModelScopeDeserializerRequest": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "model_permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ModelPermissionDeserializerRequest"
                        }
                    },
                    "field_permissions": {
                        "$ref": "#/components/schemas/FieldPermissionDeserializerRequest"
                    }
                },
                "required": [
                    "model_name"
                ],
                "x-merge-category": "ats"
            },
            "Issue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IssueStatusEnum"
                            }
                        ],
                        "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                        "example": "ONGOING"
                    },
                    "error_description": {
                        "type": "string",
                        "example": "Missing Permissions"
                    },
                    "end_user": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
                    },
                    "first_incident_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-12-05T16:19:15.161Z"
                    },
                    "last_incident_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-12-05T16:19:15.161Z"
                    },
                    "is_muted": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "error_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "example": [
                            "Missing employee permissions.",
                            "Missing time off permissions."
                        ]
                    }
                },
                "required": [
                    "error_description"
                ],
                "x-merge-category": "ats"
            },
            "IssueStatusEnum": {
                "enum": [
                    "ONGOING",
                    "RESOLVED"
                ],
                "type": "string",
                "description": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                "x-merge-category": "ats"
            },
            "Job": {
                "type": "object",
                "description": "# The Job Object\n### Description\nThe `Job` object can be used to track any jobs that are currently or will be open/closed for applications.\n### Usage Example\nFetch from the `LIST Jobs` endpoint to show all job postings.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "022a2bef-57e5-4def-8ed2-7c41bd9a5ed8"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "8765432"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The job's name.",
                        "example": "Software Engineer (Merge is actually hiring btw)"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The job's description.",
                        "example": "<b>If you're reading this documentation, you might be a good fit for Merge!</b>"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The job's code. Typically an additional identifier used to reference the particular job that is displayed on the ATS.",
                        "example": "C0025"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The job's status.\n\n* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `DRAFT` - DRAFT\n* `ARCHIVED` - ARCHIVED\n* `PENDING` - PENDING",
                        "example": "OPEN"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The job's type.\n\n* `POSTING` - POSTING\n* `REQUISITION` - REQUISITION\n* `PROFILE` - PROFILE",
                        "example": "POSTING"
                    },
                    "job_postings": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "2r3c1341-a20f-4e51-b72c-f3830a16c97b",
                            "543ed912-33ec-444e-a215-8d71cc42fc12"
                        ],
                        "description": "IDs of `JobPosting` objects that serve as job postings for this `Job`.",
                        "x-merge-expands-to": "JobPosting"
                    },
                    "job_posting_urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Url"
                        },
                        "example": [
                            {
                                "value": "https://merge.dev/careers",
                                "url_type": "JOB_POSTING"
                            }
                        ]
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's job was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's job was updated.",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "confidential": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the job is confidential.",
                        "example": true
                    },
                    "departments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                            "d6e687d6-0c36-48a1-8114-35324b5cb38f"
                        ],
                        "description": "IDs of `Department` objects for this `Job`.",
                        "x-merge-expands-to": "Department"
                    },
                    "offices": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46"
                        ],
                        "description": "IDs of `Office` objects for this `Job`.",
                        "x-merge-expands-to": "Office"
                    },
                    "hiring_managers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "787ed912-33ec-444e-a215-8d71cc42fc12"
                        ],
                        "description": "IDs of `RemoteUser` objects that serve as hiring managers for this `Job`.",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "recruiters": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "787ed912-33ec-444e-a215-8d71cc42fc12"
                        ],
                        "description": "IDs of `RemoteUser` objects that serve as recruiters for this `Job`.",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/positions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-sample-json": "{\"id\": \"022a2bef-57e5-4def-8ed2-7c41bd9a5ed8\", \"remote_id\": \"8765432\", \"name\": \"Software Engineer (Merge is actually hiring btw)\", \"description\": \"<b>If you're reading this documentation, you might be a good fit for Merge!</b>\", \"code\": \"C0025\", \"status\": \"OPEN\", \"job_posting_urls\": [{\"value\": \"https://merge.dev/careers\", \"url_type\": \"JOB_POSTING\"}], \"remote_created_at\": \"2021-10-15T00:00:00Z\", \"remote_updated_at\": \"2021-10-16T00:00:00Z\", \"confidential\": true, \"departments\": [\"5b3c1341-a20f-4e51-b72c-f3830a16c97b\", \"d6e687d6-0c36-48a1-8114-35324b5cb38f\"], \"offices\": [\"9871b4a9-f5d2-4f3b-a66b-dfedbed42c46\"], \"hiring_managers\": [\"787ed912-33ec-444e-a215-8d71cc42fc12\"], \"remote_data\": [{\"path\": \"/positions\", \"data\": {\"example\": \"Varies by platform\"}}]}",
                "x-merge-expands": "{\"departments\": \"Department\", \"hiring_managers\": \"RemoteUser\", \"job_postings\": \"JobPosting\", \"offices\": \"Office\", \"recruiters\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "JobInterviewStage": {
                "type": "object",
                "description": "# The JobInterviewStage Object\n### Description\nThe `JobInterviewStage` object is used to represent a particular recruiting stage for an `Application`. A given `Application` typically has the `JobInterviewStage` object represented in the current_stage field.\n### Usage Example\nFetch from the `LIST JobInterviewStages` endpoint and view the job interview stages used by a company.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "f9813dd5-e70b-484c-91d8-00acd6065b07"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "876556788"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Standard stage names are offered by ATS systems but can be modified by users.",
                        "example": "Phone Screen"
                    },
                    "job": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "This field is populated only if the stage is specific to a particular job. If the stage is generic, this field will not be populated.",
                        "example": "ba7d9648-5316-4a80-8d73-4e636cef5a90",
                        "x-merge-expands-to": "Job"
                    },
                    "stage_order": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "description": "The stage’s order, with the lowest values ordered first. If the third-party does not return details on the order of stages, this field will not be populated.",
                        "example": 2
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/interview-stages",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"job\": \"Job\"}",
                "x-merge-category": "ats"
            },
            "JobPosting": {
                "type": "object",
                "description": "# The JobPosting Object\n### Description\nThe `JobPosting` object represents an external announcement on a job board created by an organization to attract qualified candidates to apply for a specific `Job` opening\n### Usage Example\nFetch from the `LIST JobPostings` endpoint to show all job postings.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "156a2bef-57e5-4def-8ed2-7c41bd9a554t"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "1341324"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "The job posting’s title.",
                        "example": "Platform - NYC"
                    },
                    "job_posting_urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Url"
                        },
                        "example": [
                            {
                                "value": "https://merge.dev/careers",
                                "url_type": "JOB_POSTING"
                            }
                        ],
                        "description": "The Url object is used to represent hyperlinks for a candidate to apply to a given job."
                    },
                    "job": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "ID of `Job` object for this `JobPosting`.",
                        "example": "022a2bef-57e5-4def-8ed2-7c41bd9a5ed8"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobPostingStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The job posting's status.\n\n* `PUBLISHED` - PUBLISHED\n* `CLOSED` - CLOSED\n* `DRAFT` - DRAFT\n* `INTERNAL` - INTERNAL\n* `PENDING` - PENDING",
                        "example": "PUBLISHED"
                    },
                    "content": {
                        "type": "string",
                        "nullable": true,
                        "description": "The job posting’s content.",
                        "example": "Apply at https://merge.dev/careers"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's job posting was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's job posting was updated.",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "is_internal": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Indicates whether the job posting is internal or external."
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/positions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-category": "ats"
            },
            "JobPostingStatusEnum": {
                "enum": [
                    "PUBLISHED",
                    "CLOSED",
                    "DRAFT",
                    "INTERNAL",
                    "PENDING"
                ],
                "type": "string",
                "description": "* `PUBLISHED` - PUBLISHED\n* `CLOSED` - CLOSED\n* `DRAFT` - DRAFT\n* `INTERNAL` - INTERNAL\n* `PENDING` - PENDING",
                "x-merge-category": "ats"
            },
            "JobStatusEnum": {
                "enum": [
                    "OPEN",
                    "CLOSED",
                    "DRAFT",
                    "ARCHIVED",
                    "PENDING"
                ],
                "type": "string",
                "description": "* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `DRAFT` - DRAFT\n* `ARCHIVED` - ARCHIVED\n* `PENDING` - PENDING",
                "x-merge-category": "ats"
            },
            "JobTypeEnum": {
                "enum": [
                    "POSTING",
                    "REQUISITION",
                    "PROFILE"
                ],
                "type": "string",
                "description": "* `POSTING` - POSTING\n* `REQUISITION` - REQUISITION\n* `PROFILE` - PROFILE",
                "x-merge-category": "ats"
            },
            "LinkToken": {
                "type": "object",
                "properties": {
                    "link_token": {
                        "type": "string",
                        "example": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
                    },
                    "integration_name": {
                        "type": "string",
                        "example": "Lever"
                    },
                    "magic_link_url": {
                        "type": "string",
                        "example": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                    }
                },
                "required": [
                    "link_token"
                ],
                "x-merge-category": "ats"
            },
            "LinkedAccountCommonModelScopeDeserializerRequest": {
                "type": "object",
                "properties": {
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializerRequest"
                        },
                        "description": "The common models you want to update the scopes for",
                        "example": [
                            {
                                "model_name": "Employee",
                                "model_permissions": {
                                    "READ": {
                                        "is_enabled": true
                                    },
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                },
                                "field_permissions": {
                                    "enabled_fields": [
                                        "avatar",
                                        "home_location"
                                    ],
                                    "disabled_fields": [
                                        "work_location"
                                    ]
                                }
                            },
                            {
                                "model_name": "Benefit",
                                "model_permissions": {
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "common_models"
                ],
                "x-merge-category": "ats"
            },
            "LinkedAccountCondition": {
                "type": "object",
                "properties": {
                    "condition_schema_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID indicating which condition schema to use for a specific condition."
                    },
                    "common_model": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The common model for a specific condition."
                    },
                    "native_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "description": "The operator for a specific condition."
                    },
                    "value": {
                        "readOnly": true,
                        "description": "The value for a condition."
                    },
                    "field_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "condition_schema_id",
                    "field_name",
                    "native_name",
                    "operator"
                ],
                "x-merge-category": "ats"
            },
            "LinkedAccountConditionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ID indicating which Linked Account Condition this is."
                    },
                    "condition_schema_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID indicating which condition schema to use for a specific condition."
                    },
                    "operator": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The operator for a specific condition."
                    },
                    "value": {
                        "description": "The value for a specific condition."
                    }
                },
                "required": [
                    "condition_schema_id",
                    "operator",
                    "value"
                ],
                "x-merge-category": "ats"
            },
            "LinkedAccountSelectiveSyncConfiguration": {
                "type": "object",
                "properties": {
                    "linked_account_conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountCondition"
                        },
                        "readOnly": true,
                        "description": "The conditions belonging to a selective sync."
                    }
                },
                "x-merge-category": "ats"
            },
            "LinkedAccountSelectiveSyncConfigurationListRequest": {
                "type": "object",
                "properties": {
                    "sync_configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationRequest"
                        },
                        "description": "The selective syncs associated with a linked account."
                    }
                },
                "required": [
                    "sync_configurations"
                ],
                "x-merge-category": "ats"
            },
            "LinkedAccountSelectiveSyncConfigurationRequest": {
                "type": "object",
                "properties": {
                    "linked_account_conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountConditionRequest"
                        },
                        "description": "The conditions belonging to a selective sync."
                    }
                },
                "required": [
                    "linked_account_conditions"
                ],
                "x-merge-category": "ats"
            },
            "LinkedAccountStatus": {
                "type": "object",
                "properties": {
                    "linked_account_status": {
                        "type": "string"
                    },
                    "can_make_request": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "can_make_request",
                    "linked_account_status"
                ],
                "x-merge-category": "ats"
            },
            "MetaResponse": {
                "type": "object",
                "properties": {
                    "request_schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "type": "object",
                            "properties": {
                                "model": {
                                    "type": "object",
                                    "required": [
                                        "last_name",
                                        "first_name",
                                        "merge_categories",
                                        "new_york_city_neighborhood",
                                        "favorite_tv_shows",
                                        "favorite_watch"
                                    ],
                                    "properties": {
                                        "email_addresses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "email_address_type": {
                                                        "type": "string",
                                                        "title": "email_address_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "email_addresses",
                                            "description": "Array of email_addresses objects"
                                        },
                                        "urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "url_type": {
                                                        "type": "string",
                                                        "title": "url_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "urls",
                                            "description": "Array of urls objects"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "title": "first_name",
                                            "description": "The first name."
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "title": "last_name",
                                            "description": "The last name."
                                        },
                                        "phone_numbers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "phone_number_type": {
                                                        "type": "string",
                                                        "title": "phone_number_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "phone_numbers",
                                            "description": "Array of phone_numbers objects"
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": "tags",
                                            "description": "Array of tags names"
                                        },
                                        "attachments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "title": "id"
                                                    },
                                                    "file_url": {
                                                        "type": "string",
                                                        "title": "file_url"
                                                    },
                                                    "file_name": {
                                                        "type": "string",
                                                        "title": "file_name"
                                                    },
                                                    "attachment_type": {
                                                        "type": "string",
                                                        "title": "attachment_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "attachments",
                                            "description": "Array of attachments objects "
                                        },
                                        "merge_categories": {
                                            "type": "array",
                                            "categories": {
                                                "type": "string",
                                                "enum": [
                                                    "HRIS",
                                                    "ATS",
                                                    "Accounting",
                                                    "Ticketing",
                                                    "File Storage",
                                                    "CRM",
                                                    "Marketing Automation"
                                                ],
                                                "enum_information": [
                                                    {
                                                        "value": "HRIS",
                                                        "description": "Merge HRIS Category"
                                                    },
                                                    {
                                                        "value": "ATS",
                                                        "description": "Merge ATS Category"
                                                    },
                                                    {
                                                        "value": "Accounting",
                                                        "description": "Merge Accounting Category"
                                                    },
                                                    {
                                                        "value": "Ticketing",
                                                        "description": "Merge Ticketing Category"
                                                    },
                                                    {
                                                        "value": "File Storage",
                                                        "description": "Merge File Storage Category"
                                                    },
                                                    {
                                                        "value": "CRM",
                                                        "description": "Merge CRM Category"
                                                    },
                                                    {
                                                        "value": "Marketing Automation",
                                                        "description": "Merge Marketing Automation Category"
                                                    }
                                                ]
                                            },
                                            "title": "Merge Categories",
                                            "description": "Array of Merge's Unified API Categories"
                                        },
                                        "new_york_city_neighborhood": {
                                            "type": "string",
                                            "title": "Borough",
                                            "description": "One of the 5 Boroughs of New York City"
                                        },
                                        "favorite_tv_shows": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": "Favorite TV Shows",
                                            "description": "Array of TV Show objects on merge.tv_shows"
                                        },
                                        "favorite_watch": {
                                            "type": "string",
                                            "title": "Favorite Watch",
                                            "description": "Favorite watch of all time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "remote_field_classes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "status": {
                        "$ref": "#/components/schemas/LinkedAccountStatus",
                        "example": {
                            "linked_account_status": "COMPLETE",
                            "can_make_request": true
                        }
                    },
                    "has_conditional_params": {
                        "type": "boolean"
                    },
                    "has_required_linked_account_params": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "has_conditional_params",
                    "has_required_linked_account_params",
                    "request_schema"
                ],
                "x-merge-category": "ats"
            },
            "MethodEnum": {
                "enum": [
                    "GET",
                    "OPTIONS",
                    "HEAD",
                    "POST",
                    "PUT",
                    "PATCH",
                    "DELETE"
                ],
                "type": "string",
                "description": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
                "x-merge-category": "ats"
            },
            "ModelOperation": {
                "type": "object",
                "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "example": "Candidate"
                    },
                    "available_operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "FETCH",
                            "CREATE"
                        ]
                    },
                    "required_post_parameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "remote_user_id"
                        ]
                    },
                    "supported_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "first_name",
                            "last_name",
                            "company",
                            "title"
                        ]
                    }
                },
                "required": [
                    "available_operations",
                    "model_name",
                    "required_post_parameters",
                    "supported_fields"
                ],
                "x-merge-category": "ats"
            },
            "ModelPermissionDeserializer": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "x-merge-category": "ats"
            },
            "ModelPermissionDeserializerRequest": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "x-merge-category": "ats"
            },
            "MultipartFormFieldRequest": {
                "type": "object",
                "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the form field",
                        "example": "resume"
                    },
                    "data": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The data for the form field.",
                        "example": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
                    },
                    "encoding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EncodingEnum"
                            }
                        ],
                        "nullable": true,
                        "default": "RAW",
                        "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                        "example": "BASE64"
                    },
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The file name of the form field, if the field is for a file.",
                        "example": "resume.pdf"
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The MIME type of the file, if the field is for a file.",
                        "example": "application/pdf"
                    }
                },
                "required": [
                    "data",
                    "name"
                ],
                "x-merge-category": "ats"
            },
            "Offer": {
                "type": "object",
                "description": "# The Offer Object\n### Description\nThe `Offer` object is used to represent an offer for a candidate's application specific to a job.\n### Usage Example\nFetch from the `LIST Offers` endpoint and filter by `ID` to show all offers.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "dd85625c-6a59-446f-a317-6de64d83bae7"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "9876"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "application": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application who is receiving the offer.",
                        "example": "2872ba14-4084-492b-be96-e5eee6fc33ef",
                        "x-merge-expands-to": "Application"
                    },
                    "creator": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user who created the offer.",
                        "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's offer was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "closed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the offer was closed.",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the offer was sent.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The employment start date on the offer.",
                        "example": "2021-11-15T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OfferStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The offer's status.\n\n* `DRAFT` - DRAFT\n* `APPROVAL-SENT` - APPROVAL-SENT\n* `APPROVED` - APPROVED\n* `SENT` - SENT\n* `SENT-MANUALLY` - SENT-MANUALLY\n* `OPENED` - OPENED\n* `DENIED` - DENIED\n* `SIGNED` - SIGNED\n* `DEPRECATED` - DEPRECATED",
                        "example": "SENT"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/offers",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"application\": \"Application\", \"creator\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "OfferStatusEnum": {
                "enum": [
                    "DRAFT",
                    "APPROVAL-SENT",
                    "APPROVED",
                    "SENT",
                    "SENT-MANUALLY",
                    "OPENED",
                    "DENIED",
                    "SIGNED",
                    "DEPRECATED"
                ],
                "type": "string",
                "description": "* `DRAFT` - DRAFT\n* `APPROVAL-SENT` - APPROVAL-SENT\n* `APPROVED` - APPROVED\n* `SENT` - SENT\n* `SENT-MANUALLY` - SENT-MANUALLY\n* `OPENED` - OPENED\n* `DENIED` - DENIED\n* `SIGNED` - SIGNED\n* `DEPRECATED` - DEPRECATED",
                "x-merge-category": "ats"
            },
            "Office": {
                "type": "object",
                "description": "# The Office Object\n### Description\nThe `Office` object is used to represent an office within a company. A given `Job` has the `Office` ID in its offices field.\n### Usage Example\nFetch from the `LIST Offices` endpoint and view the offices within a company.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "876556788"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The office's name.",
                        "example": "SF Office"
                    },
                    "location": {
                        "type": "string",
                        "nullable": true,
                        "description": "The office's location.",
                        "example": "Embarcadero Center 2"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/locations",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-sample-json": "{\"id\": \"9871b4a9-f5d2-4f3b-a66b-dfedbed42c46\", \"remote_id\": \"876556788\", \"name\": \"SF Office\", \"location\": \"Embarcadero Center 2\", \"remote_data\": [{\"path\": \"/locations\", \"data\": {\"example\": \"Varies by platform\"}}]}",
                "x-merge-category": "ats"
            },
            "OperatorSchema": {
                "type": "object",
                "properties": {
                    "operator": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operator for which an operator schema is defined."
                    },
                    "is_unique": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the operator can be repeated multiple times."
                    }
                },
                "x-merge-category": "ats"
            },
            "OverallRecommendationEnum": {
                "enum": [
                    "DEFINITELY_NO",
                    "NO",
                    "YES",
                    "STRONG_YES",
                    "NO_DECISION"
                ],
                "type": "string",
                "description": "* `DEFINITELY_NO` - DEFINITELY_NO\n* `NO` - NO\n* `YES` - YES\n* `STRONG_YES` - STRONG_YES\n* `NO_DECISION` - NO_DECISION",
                "x-merge-category": "ats"
            },
            "PaginatedAccountDetailsAndActionsList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountDetailsAndActions"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedActivityList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedApplicationList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Application"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedAttachmentList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedAuditLogEventList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogEvent"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedCandidateList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Candidate"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedConditionSchemaList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionSchema"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedDepartmentList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Department"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedEEOCList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EEOC"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedIssueList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Issue"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedJobInterviewStageList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobInterviewStage"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedJobList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedJobPostingList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobPosting"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedOfferList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Offer"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedOfficeList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Office"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedRejectReasonList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RejectReason"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedRemoteUserList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteUser"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedScheduledInterviewList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScheduledInterview"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedScorecardList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Scorecard"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedScreeningQuestionList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScreeningQuestion"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedSyncStatusList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncStatus"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PaginatedTagList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PatchedCandidateEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/PatchedCandidateRequest"
                    },
                    "remote_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "model",
                    "remote_user_id"
                ],
                "x-merge-category": "ats"
            },
            "PatchedCandidateRequest": {
                "type": "object",
                "description": "# The Candidate Object\n### Description\nThe `Candidate` object is used to represent profile information about a given Candidate. Because it is specific to a Candidate, this information stays constant across applications.\n### Usage Example\nFetch from the `LIST Candidates` endpoint and filter by `ID` to show all candidates.",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's first name.",
                        "example": "Gil"
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's last name.",
                        "example": "Feig"
                    },
                    "company": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's current company.",
                        "example": "Columbia Dining App."
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "The candidate's current title.",
                        "example": "Software Engineer"
                    },
                    "last_interaction_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the most recent interaction with the candidate occurred.",
                        "example": "2021-10-17T00:00:00Z"
                    },
                    "is_private": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the candidate is private.",
                        "example": true
                    },
                    "can_email": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the candidate can be emailed.",
                        "example": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The candidate's locations."
                        },
                        "nullable": true,
                        "description": "The candidate's locations.",
                        "example": [
                            "San Francisco",
                            "New York",
                            "Miami"
                        ]
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PhoneNumberRequest"
                        },
                        "example": [
                            {
                                "value": "+1234567890",
                                "phone_number_type": "MOBILE"
                            }
                        ]
                    },
                    "email_addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailAddressRequest"
                        },
                        "example": [
                            {
                                "value": "hello@merge.dev",
                                "email_address_type": "PERSONAL"
                            }
                        ]
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UrlRequest"
                        },
                        "example": [
                            {
                                "value": "http://alturl.com/p749b",
                                "url_type": "BLOG"
                            }
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The tag's name."
                        },
                        "example": [
                            "High-Priority"
                        ],
                        "description": "Array of `Tag` names as strings."
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "29eb9867-ce2a-403f-b8ce-f2844b89f078",
                            "b4d08e5c-de00-4d64-a29f-66addac9af99",
                            "4ff877d2-fb3e-4a5b-a7a5-168ddf2ffa56"
                        ],
                        "description": "Array of `Application` object IDs."
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "bea08964-32b4-4a20-8bb4-2612ba09de1d"
                        ],
                        "description": "Array of `Attachment` object IDs."
                    },
                    "remote_template_id": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "minLength": 1,
                        "example": "92830948203"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PatchedEditFieldMappingRequest": {
                "type": "object",
                "properties": {
                    "remote_field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "description": "The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.",
                        "example": [
                            "example_remote_field_name"
                        ]
                    },
                    "remote_method": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The method of the remote endpoint where the remote field is coming from.",
                        "example": "GET"
                    },
                    "remote_url_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the remote endpoint where the remote field is coming from.",
                        "example": "/example-url-path"
                    }
                },
                "x-merge-category": "ats"
            },
            "PhoneNumber": {
                "type": "object",
                "description": "# The PhoneNumber Object\n### Description\nThe `PhoneNumber` object is used to represent a candidate's phone number.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their phone numbers.",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phone number.",
                        "example": "+3198675309"
                    },
                    "phone_number_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The type of phone number.\n\n* `HOME` - HOME\n* `WORK` - WORK\n* `MOBILE` - MOBILE\n* `SKYPE` - SKYPE\n* `OTHER` - OTHER",
                        "example": "HOME"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "ats"
            },
            "PhoneNumberRequest": {
                "type": "object",
                "description": "# The PhoneNumber Object\n### Description\nThe `PhoneNumber` object is used to represent a candidate's phone number.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their phone numbers.",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phone number.",
                        "example": "+3198675309"
                    },
                    "phone_number_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhoneNumberTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The type of phone number.\n\n* `HOME` - HOME\n* `WORK` - WORK\n* `MOBILE` - MOBILE\n* `SKYPE` - SKYPE\n* `OTHER` - OTHER",
                        "example": "HOME"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "PhoneNumberTypeEnum": {
                "enum": [
                    "HOME",
                    "WORK",
                    "MOBILE",
                    "SKYPE",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `HOME` - HOME\n* `WORK` - WORK\n* `MOBILE` - MOBILE\n* `SKYPE` - SKYPE\n* `OTHER` - OTHER",
                "x-merge-category": "ats"
            },
            "RaceEnum": {
                "enum": [
                    "AMERICAN_INDIAN_OR_ALASKAN_NATIVE",
                    "ASIAN",
                    "BLACK_OR_AFRICAN_AMERICAN",
                    "HISPANIC_OR_LATINO",
                    "WHITE",
                    "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
                    "TWO_OR_MORE_RACES",
                    "DECLINE_TO_SELF_IDENTIFY"
                ],
                "type": "string",
                "description": "* `AMERICAN_INDIAN_OR_ALASKAN_NATIVE` - AMERICAN_INDIAN_OR_ALASKAN_NATIVE\n* `ASIAN` - ASIAN\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `WHITE` - WHITE\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `DECLINE_TO_SELF_IDENTIFY` - DECLINE_TO_SELF_IDENTIFY",
                "x-merge-category": "ats"
            },
            "ReasonEnum": {
                "enum": [
                    "GENERAL_CUSTOMER_REQUEST",
                    "GDPR",
                    "OTHER"
                ],
                "type": "string",
                "description": "* `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST\n* `GDPR` - GDPR\n* `OTHER` - OTHER",
                "x-merge-category": "ats"
            },
            "RejectReason": {
                "type": "object",
                "description": "# The RejectReason Object\n### Description\nThe `RejectReason` object is used to represent a reason for rejecting an application. These can typically be configured within an ATS system.\n### Usage Example\nFetch from the `LIST RejectReasons` endpoint and filter by `ID` to show all reasons.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "8be99a4a-f8d4-4339-bf1e-30eac970e217"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "876556788"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The rejection reason’s name.",
                        "example": "Not passionate enough about APIs."
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/rejection-reasons",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-category": "ats"
            },
            "RemoteData": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "data": {
                        "readOnly": true
                    }
                },
                "required": [
                    "path"
                ],
                "x-merge-category": "ats"
            },
            "RemoteEndpointInfo": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "url_path": {
                        "type": "string",
                        "example": "/example-url-path"
                    },
                    "field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "example_key_name"
                        ]
                    }
                },
                "required": [
                    "field_traversal_path",
                    "method",
                    "url_path"
                ],
                "x-merge-category": "ats"
            },
            "RemoteFieldAPI": {
                "type": "object",
                "properties": {
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "type": "string"
                        }
                    },
                    "remote_key_name": {
                        "type": "string",
                        "example": "example_remote_key_name"
                    },
                    "remote_endpoint_info": {
                        "$ref": "#/components/schemas/RemoteEndpointInfo",
                        "example": {
                            "method": "GET",
                            "url_path": "/example-url-path",
                            "field_traversal_path": [
                                "example_key_name"
                            ]
                        }
                    },
                    "example_values": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "example"
                        ]
                    },
                    "advanced_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdvancedMetadata"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "advanced_metadata",
                    "example_values",
                    "remote_endpoint_info",
                    "remote_key_name",
                    "schema"
                ],
                "x-merge-category": "ats"
            },
            "RemoteFieldAPIResponse": {
                "type": "object",
                "properties": {
                    "Activity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Application": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Candidate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Department": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "EEOC": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "ScheduledInterview": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Job": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "JobPosting": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "JobInterviewStage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Offer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Office": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "RejectReason": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Scorecard": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "RemoteUser": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "RemoteKey": {
                "type": "object",
                "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Remote Deployment Key 1"
                    },
                    "key": {
                        "type": "string",
                        "example": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    }
                },
                "required": [
                    "key",
                    "name"
                ],
                "x-merge-category": "ats"
            },
            "RemoteKeyForRegenerationRequest": {
                "type": "object",
                "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the remote key",
                        "example": "Remote Deployment Key 1"
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "ats"
            },
            "RemoteResponse": {
                "type": "object",
                "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
                "properties": {
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "/scooters"
                    },
                    "status": {
                        "type": "integer",
                        "example": 200
                    },
                    "response": {
                        "example": {
                            "scooters": [
                                {
                                    "company": "Lime",
                                    "model": "Gen 2.5"
                                },
                                {
                                    "company": "Bird",
                                    "model": "Bird Zero"
                                }
                            ]
                        }
                    },
                    "response_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "X-Page-Token": "value"
                        }
                    },
                    "response_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTypeEnum"
                            }
                        ],
                        "example": "JSON"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "EXTRA-HEADER": "value",
                            "Authorization": "<redacted>"
                        }
                    }
                },
                "required": [
                    "method",
                    "path",
                    "response",
                    "status"
                ],
                "x-merge-category": "ats"
            },
            "RemoteUser": {
                "type": "object",
                "description": "# The RemoteUser Object\n### Description\nThe `RemoteUser` object is used to represent a user with a login to the ATS system.\n### Usage Example\nFetch from the `LIST RemoteUsers` endpoint to show all users for a third party.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "344321"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "first_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The user's first name.",
                        "example": "Shensi"
                    },
                    "last_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The user's last name.",
                        "example": "Ding"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "The user's email.",
                        "maxLength": 254,
                        "example": "hello@merge.dev"
                    },
                    "disabled": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the user's account had been disabled."
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's user was created.",
                        "example": "2020-11-10T00:00:00Z"
                    },
                    "access_role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccessRoleEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The user's role.\n\n* `SUPER_ADMIN` - SUPER_ADMIN\n* `ADMIN` - ADMIN\n* `TEAM_MEMBER` - TEAM_MEMBER\n* `LIMITED_TEAM_MEMBER` - LIMITED_TEAM_MEMBER\n* `INTERVIEWER` - INTERVIEWER",
                        "example": "SUPER_ADMIN"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/users",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-sample-json": "{\"id\": \"b82302de-852e-4e60-b050-edf9da3b7c02\", \"remote_id\": \"344321\", \"first_name\": \"Shensi\", \"last_name\": \"Ding\", \"email\": \"hello@merge.dev\", \"disabled\": false, \"remote_created_at\": \"2020-11-10T00:00:00Z\", \"access_role\": \"SUPER_ADMIN\", \"remote_data\": [{\"path\": \"/users\", \"data\": {\"example\": \"Varies by platform\"}}]}",
                "x-merge-category": "ats"
            },
            "RequestFormatEnum": {
                "enum": [
                    "JSON",
                    "XML",
                    "MULTIPART"
                ],
                "type": "string",
                "description": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
                "x-merge-category": "ats"
            },
            "ResponseTypeEnum": {
                "enum": [
                    "JSON",
                    "BASE64_GZIP"
                ],
                "type": "string",
                "description": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
                "x-merge-category": "ats"
            },
            "RoleEnum": {
                "enum": [
                    "ADMIN",
                    "DEVELOPER",
                    "MEMBER",
                    "API",
                    "SYSTEM",
                    "MERGE_TEAM"
                ],
                "type": "string",
                "description": "* `ADMIN` - ADMIN\n* `DEVELOPER` - DEVELOPER\n* `MEMBER` - MEMBER\n* `API` - API\n* `SYSTEM` - SYSTEM\n* `MERGE_TEAM` - MERGE_TEAM",
                "x-merge-category": "ats"
            },
            "ScheduledInterview": {
                "type": "object",
                "description": "# The ScheduledInterview Object\n### Description\nThe `ScheduledInterview` object is used to represent a scheduled interview for a given candidate’s application to a job. An `Application` can have multiple `ScheduledInterview`s depending on the particular hiring process.\n### Usage Example\nFetch from the `LIST ScheduledInterviews` endpoint and filter by `interviewers` to show all office locations.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b8faf072-98b9-4445-8a9a-6b4950efca19"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "3"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "application": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application being interviewed.",
                        "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1",
                        "x-merge-expands-to": "Application"
                    },
                    "job_interview_stage": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The stage of the interview.",
                        "example": "2f7adb59-3fe6-4b5b-aef6-563f72bd13dc",
                        "x-merge-expands-to": "JobInterviewStage"
                    },
                    "organizer": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user organizing the interview.",
                        "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "interviewers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "f9813dd5-e70b-484c-91d8-00acd6065b07",
                            "89a86fcf-d540-4e6b-ac3d-ce07c4ec9b3c"
                        ],
                        "description": "Array of `RemoteUser` IDs.",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "location": {
                        "type": "string",
                        "nullable": true,
                        "description": "The interview's location.",
                        "example": "Embarcadero Center 2"
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the interview was started.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the interview was ended.",
                        "example": "2021-10-15T02:00:00Z"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's interview was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's interview was updated.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScheduledInterviewStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The interview's status.\n\n* `SCHEDULED` - SCHEDULED\n* `AWAITING_FEEDBACK` - AWAITING_FEEDBACK\n* `COMPLETE` - COMPLETE",
                        "example": "SCHEDULED"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/interviews",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"application\": \"Application\", \"interviewers\": \"RemoteUser\", \"job_interview_stage\": \"JobInterviewStage\", \"organizer\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "ScheduledInterviewEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ScheduledInterviewRequest"
                    },
                    "remote_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "model",
                    "remote_user_id"
                ],
                "x-merge-category": "ats"
            },
            "ScheduledInterviewRequest": {
                "type": "object",
                "description": "# The ScheduledInterview Object\n### Description\nThe `ScheduledInterview` object is used to represent a scheduled interview for a given candidate’s application to a job. An `Application` can have multiple `ScheduledInterview`s depending on the particular hiring process.\n### Usage Example\nFetch from the `LIST ScheduledInterviews` endpoint and filter by `interviewers` to show all office locations.",
                "properties": {
                    "application": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application being interviewed.",
                        "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1",
                        "x-merge-expands-to": "Application"
                    },
                    "job_interview_stage": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The stage of the interview.",
                        "example": "2f7adb59-3fe6-4b5b-aef6-563f72bd13dc",
                        "x-merge-expands-to": "JobInterviewStage"
                    },
                    "organizer": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user organizing the interview.",
                        "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "interviewers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "f9813dd5-e70b-484c-91d8-00acd6065b07",
                            "89a86fcf-d540-4e6b-ac3d-ce07c4ec9b3c"
                        ],
                        "description": "Array of `RemoteUser` IDs.",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "location": {
                        "type": "string",
                        "nullable": true,
                        "description": "The interview's location.",
                        "example": "Embarcadero Center 2"
                    },
                    "start_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the interview was started.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "end_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the interview was ended.",
                        "example": "2021-10-15T02:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScheduledInterviewStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The interview's status.\n\n* `SCHEDULED` - SCHEDULED\n* `AWAITING_FEEDBACK` - AWAITING_FEEDBACK\n* `COMPLETE` - COMPLETE",
                        "example": "SCHEDULED"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"application\": \"Application\", \"interviewers\": \"RemoteUser\", \"job_interview_stage\": \"JobInterviewStage\", \"organizer\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "ScheduledInterviewResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ScheduledInterview"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ats"
            },
            "ScheduledInterviewStatusEnum": {
                "enum": [
                    "SCHEDULED",
                    "AWAITING_FEEDBACK",
                    "COMPLETE"
                ],
                "type": "string",
                "description": "* `SCHEDULED` - SCHEDULED\n* `AWAITING_FEEDBACK` - AWAITING_FEEDBACK\n* `COMPLETE` - COMPLETE",
                "x-merge-category": "ats"
            },
            "Scorecard": {
                "type": "object",
                "description": "# The Scorecard Object\n### Description\nThe `Scorecard` object is used to represent an interviewer's candidate recommendation based on a particular interview.\n### Usage Example\nFetch from the `LIST Scorecards` endpoint and filter by `application` to show all scorecard for an applicant.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3eab2f17-eeb1-450d-97f0-029d8be1e06f"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "22234"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "application": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The application being scored.",
                        "example": "2872ba14-4084-492b-be96-e5eee6fc33ef",
                        "x-merge-expands-to": "Application"
                    },
                    "interview": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The interview being scored.",
                        "example": "52bf9b5e-0beb-4f6f-8a72-cd4dca7ca633",
                        "x-merge-expands-to": "ScheduledInterview"
                    },
                    "interviewer": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The interviewer doing the scoring.",
                        "example": "bbb519a3-246e-4b95-b6b3-dba16107ba6b",
                        "x-merge-expands-to": "RemoteUser"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's scorecard was created.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "submitted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the scorecard was submitted.",
                        "example": "2021-10-15T00:00:00Z"
                    },
                    "overall_recommendation": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OverallRecommendationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The inteviewer's recommendation.\n\n* `DEFINITELY_NO` - DEFINITELY_NO\n* `NO` - NO\n* `YES` - YES\n* `STRONG_YES` - STRONG_YES\n* `NO_DECISION` - NO_DECISION",
                        "example": "STRONG_YES"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/ratings",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"application\": \"Application\", \"interview\": \"ScheduledInterview\", \"interviewer\": \"RemoteUser\"}",
                "x-merge-category": "ats"
            },
            "ScreeningQuestion": {
                "type": "object",
                "description": "# The ScreeningQuestion Object\n### Description\nThe `ScreeningQuestion` object is used to represent questions asked to screen candidates for a job.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0238cbc6-6040-430a-848e-aaiehfhdbadf4ae"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "23729392"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "job": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The job associated with the screening question.",
                        "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1",
                        "x-merge-expands-to": "Job"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of the screening question",
                        "maxLength": 500,
                        "example": "Are you currently authorized to work for any employer in the country outlined for this role?"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "description": "The title of the screening question",
                        "maxLength": 2500,
                        "example": "Work Authorisation"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScreeningQuestionTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The data type for the screening question.\n\n* `DATE` - DATE\n* `FILE` - FILE\n* `SINGLE_SELECT` - SINGLE_SELECT\n* `MULTI_SELECT` - MULTI_SELECT\n* `SINGLE_LINE_TEXT` - SINGLE_LINE_TEXT\n* `MULTI_LINE_TEXT` - MULTI_LINE_TEXT\n* `NUMERIC` - NUMERIC\n* `BOOLEAN` - BOOLEAN",
                        "example": "SINGLE_SELECT"
                    },
                    "required": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the screening question is required.",
                        "example": true
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ScreeningQuestionOption"
                        },
                        "example": [
                            {
                                "remote_id": "19281",
                                "label": "I am currently authorised"
                            },
                            {
                                "remote_id": "38372",
                                "label": "I am currently not eligible"
                            }
                        ],
                        "x-merge-expands-to": "ScreeningQuestionOption"
                    }
                },
                "x-merge-expands": "{\"job\": \"Job\", \"options\": \"ScreeningQuestionOption\"}",
                "x-merge-category": "ats"
            },
            "ScreeningQuestionOption": {
                "type": "object",
                "description": "# The ScreeningQuestionOption Object\n### Description\nThe `ScreeningQuestionOption` object is used to represent options for a `ScreeningQuestion` object\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "label": {
                        "type": "string",
                        "nullable": true,
                        "description": "Available response options",
                        "maxLength": 300,
                        "example": "5+ years experience"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "ats"
            },
            "ScreeningQuestionTypeEnum": {
                "enum": [
                    "DATE",
                    "FILE",
                    "SINGLE_SELECT",
                    "MULTI_SELECT",
                    "SINGLE_LINE_TEXT",
                    "MULTI_LINE_TEXT",
                    "NUMERIC",
                    "BOOLEAN"
                ],
                "type": "string",
                "description": "* `DATE` - DATE\n* `FILE` - FILE\n* `SINGLE_SELECT` - SINGLE_SELECT\n* `MULTI_SELECT` - MULTI_SELECT\n* `SINGLE_LINE_TEXT` - SINGLE_LINE_TEXT\n* `MULTI_LINE_TEXT` - MULTI_LINE_TEXT\n* `NUMERIC` - NUMERIC\n* `BOOLEAN` - BOOLEAN",
                "x-merge-category": "ats"
            },
            "SelectiveSyncConfigurationsUsageEnum": {
                "enum": [
                    "IN_NEXT_SYNC",
                    "IN_LAST_SYNC"
                ],
                "type": "string",
                "description": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
                "x-merge-category": "ats"
            },
            "SyncStatus": {
                "type": "object",
                "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "example": "Candidate"
                    },
                    "model_id": {
                        "type": "string",
                        "example": "ats.Candidate"
                    },
                    "last_sync_start": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-30T19:44:18.695973Z"
                    },
                    "next_sync_start": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-30T20:44:18.662942Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SyncStatusStatusEnum"
                            }
                        ],
                        "example": "SYNCING"
                    },
                    "is_initial_sync": {
                        "type": "boolean",
                        "example": true
                    },
                    "selective_sync_configurations_usage": {
                        "$ref": "#/components/schemas/SelectiveSyncConfigurationsUsageEnum"
                    }
                },
                "required": [
                    "is_initial_sync",
                    "model_id",
                    "model_name",
                    "status"
                ],
                "x-merge-sample-json": "{\"model_name\": \"Candidate\", \"model_id\": \"ats.Candidate\", \"last_sync_start\": \"2021-03-30T19:44:18.695973Z\", \"next_sync_start\": \"2021-03-30T20:44:18.662942Z\", \"status\": \"SYNCING\", \"is_initial_sync\": true}",
                "x-merge-category": "ats"
            },
            "SyncStatusStatusEnum": {
                "enum": [
                    "SYNCING",
                    "DONE",
                    "FAILED",
                    "DISABLED",
                    "PAUSED",
                    "PARTIALLY_SYNCED"
                ],
                "type": "string",
                "description": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
                "x-merge-category": "ats"
            },
            "Tag": {
                "type": "object",
                "description": "# The Tag Object\n### Description\nThe `Tag` object is used to represent a tag for a candidate.\n### Usage Example\nFetch from the `LIST Tags` endpoint and view the tags used within a company.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "4567"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The tag's name.",
                        "example": "High-Priority"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {},
                            "nullable": true,
                            "description": "The full data pulled from the third-party API for an object."
                        },
                        "nullable": true,
                        "example": [
                            {
                                "path": "/tags",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-category": "ats"
            },
            "UpdateApplicationStageRequest": {
                "type": "object",
                "properties": {
                    "job_interview_stage": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The interview stage to move the application to."
                    },
                    "remote_user_id": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "x-merge-category": "ats"
            },
            "Url": {
                "type": "object",
                "description": "# The Url Object\n### Description\nThe `Url` object is used to represent hyperlinks associated with the parent model.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their website urls.",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "value": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The site's url.",
                        "maxLength": 2000,
                        "example": "http://alturl.com/p749b"
                    },
                    "url_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UrlTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The type of site.\n\n* `PERSONAL` - PERSONAL\n* `COMPANY` - COMPANY\n* `PORTFOLIO` - PORTFOLIO\n* `BLOG` - BLOG\n* `SOCIAL_MEDIA` - SOCIAL_MEDIA\n* `OTHER` - OTHER\n* `JOB_POSTING` - JOB_POSTING",
                        "example": "PERSONAL"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "ats"
            },
            "UrlRequest": {
                "type": "object",
                "description": "# The Url Object\n### Description\nThe `Url` object is used to represent hyperlinks associated with the parent model.\n### Usage Example\nFetch from the `GET Candidate` endpoint and view their website urls.",
                "properties": {
                    "value": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The site's url.",
                        "maxLength": 2000,
                        "example": "http://alturl.com/p749b"
                    },
                    "url_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UrlTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The type of site.\n\n* `PERSONAL` - PERSONAL\n* `COMPANY` - COMPANY\n* `PORTFOLIO` - PORTFOLIO\n* `BLOG` - BLOG\n* `SOCIAL_MEDIA` - SOCIAL_MEDIA\n* `OTHER` - OTHER\n* `JOB_POSTING` - JOB_POSTING",
                        "example": "PERSONAL"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "ats"
            },
            "UrlTypeEnum": {
                "enum": [
                    "PERSONAL",
                    "COMPANY",
                    "PORTFOLIO",
                    "BLOG",
                    "SOCIAL_MEDIA",
                    "OTHER",
                    "JOB_POSTING"
                ],
                "type": "string",
                "description": "* `PERSONAL` - PERSONAL\n* `COMPANY` - COMPANY\n* `PORTFOLIO` - PORTFOLIO\n* `BLOG` - BLOG\n* `SOCIAL_MEDIA` - SOCIAL_MEDIA\n* `OTHER` - OTHER\n* `JOB_POSTING` - JOB_POSTING",
                "x-merge-category": "ats"
            },
            "ValidationProblemSource": {
                "type": "object",
                "properties": {
                    "pointer": {
                        "type": "string"
                    }
                },
                "required": [
                    "pointer"
                ],
                "x-merge-category": "ats"
            },
            "VeteranStatusEnum": {
                "enum": [
                    "I_AM_NOT_A_PROTECTED_VETERAN",
                    "I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN",
                    "I_DONT_WISH_TO_ANSWER"
                ],
                "type": "string",
                "description": "* `I_AM_NOT_A_PROTECTED_VETERAN` - I_AM_NOT_A_PROTECTED_VETERAN\n* `I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN` - I_IDENTIFY_AS_ONE_OR_MORE_OF_THE_CLASSIFICATIONS_OF_A_PROTECTED_VETERAN\n* `I_DONT_WISH_TO_ANSWER` - I_DONT_WISH_TO_ANSWER",
                "x-merge-category": "ats"
            },
            "VisibilityEnum": {
                "enum": [
                    "ADMIN_ONLY",
                    "PUBLIC",
                    "PRIVATE"
                ],
                "type": "string",
                "description": "* `ADMIN_ONLY` - ADMIN_ONLY\n* `PUBLIC` - PUBLIC\n* `PRIVATE` - PRIVATE",
                "x-merge-category": "ats"
            },
            "WarningValidationProblem": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/ValidationProblemSource",
                        "example": {
                            "pointer": "/age"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Unrecognized Field"
                    },
                    "detail": {
                        "type": "string",
                        "example": "An unrecognized field, age, was passed in with request data."
                    },
                    "problem_type": {
                        "type": "string",
                        "example": "UNRECOGNIZED_FIELD"
                    }
                },
                "required": [
                    "detail",
                    "problem_type",
                    "title"
                ],
                "x-merge-category": "ats"
            },
            "WebhookReceiver": {
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "required": [
                    "event",
                    "is_active"
                ],
                "x-merge-category": "ats"
            },
            "WebhookReceiverRequest": {
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "event",
                    "is_active"
                ],
                "x-merge-category": "ats"
            }
        },
        "securitySchemes": {
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Bearer\""
            }
        }
    },
    "servers": [
        {
            "url": "https://api.merge.dev/api/ats/v1",
            "description": "Production"
        },
        {
            "url": "https://api-sandbox.merge.dev/api/ats/v1",
            "description": "Sandbox"
        },
        {
            "url": "https://api-eu.merge.dev/api/ats/v1",
            "description": "Production EU"
        }
    ]
}