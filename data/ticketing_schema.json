{
    "openapi": "3.0.3",
    "info": {
        "title": "Merge Ticketing API",
        "version": "1.0",
        "description": "The unified API for building rich integrations with multiple Ticketing platforms.",
        "contact": {
            "name": "Merge Team",
            "url": "https://www.merge.dev/",
            "email": "hello@merge.dev"
        }
    },
    "paths": {
        "/account-details": {
            "get": {
                "operationId": "account_details_retrieve",
                "description": "Get details for a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "account-details"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/account-token/{public_token}": {
            "get": {
                "operationId": "account_token_retrieve",
                "description": "Returns the account token for the end user with the provided public token.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "public_token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "account-token"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountToken"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/accounts": {
            "get": {
                "operationId": "accounts_list",
                "description": "Returns a list of `Account` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/accounts/{id}": {
            "get": {
                "operationId": "accounts_retrieve",
                "description": "Returns an `Account` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/async-passthrough": {
            "post": {
                "operationId": "async_passthrough_create",
                "description": "Asynchronously pull data from an endpoint not currently supported by Merge.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "async-passthrough"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncPassthroughReciept"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/async-passthrough/{async_passthrough_receipt_id}": {
            "get": {
                "operationId": "async_passthrough_retrieve",
                "description": "Retrieves data from earlier async-passthrough POST request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "async_passthrough_receipt_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "async-passthrough"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments": {
            "get": {
                "operationId": "attachments_list",
                "description": "Returns a list of `Attachment` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ticket"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTicket": {
                                "value": "ticket",
                                "summary": "Expand Ticket"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return attachments created in the third party platform after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "ticket_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return comments for this ticket.",
                        "examples": {
                            "TicketId": {
                                "summary": "ticket_id"
                            }
                        }
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAttachmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "attachments_create",
                "description": "Creates an `Attachment` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketingAttachmentEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketingAttachmentEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketingAttachmentEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketingAttachmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/{id}": {
            "get": {
                "operationId": "attachments_retrieve",
                "description": "Returns an `Attachment` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ticket"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTicket": {
                                "value": "ticket",
                                "summary": "Expand Ticket"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/{id}/download": {
            "get": {
                "operationId": "attachments_download_retrieve",
                "description": "Returns an `Attachment` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "mime_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, specifies the export format of the file to be downloaded. For information on supported export formats, please refer to our <a href='https://help.merge.dev/en/articles/8615316-file-export-and-download-specification' target='_blank'>export format help center article</a>."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/meta/post": {
            "get": {
                "operationId": "attachments_meta_post_retrieve",
                "description": "Returns metadata for `TicketingAttachment` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/audit-trail": {
            "get": {
                "operationId": "audit_trail_list",
                "description": "Gets a list of audit trail events.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include audit trail events that occurred before this time"
                    },
                    {
                        "in": "query",
                        "name": "event_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include events with the given event type. Possible values include: `CREATED_REMOTE_PRODUCTION_API_KEY`, `DELETED_REMOTE_PRODUCTION_API_KEY`, `CREATED_TEST_API_KEY`, `DELETED_TEST_API_KEY`, `REGENERATED_PRODUCTION_API_KEY`, `INVITED_USER`, `TWO_FACTOR_AUTH_ENABLED`, `TWO_FACTOR_AUTH_DISABLED`, `DELETED_LINKED_ACCOUNT`, `CREATED_DESTINATION`, `DELETED_DESTINATION`, `CHANGED_DESTINATION`, `CHANGED_SCOPES`, `CHANGED_PERSONAL_INFORMATION`, `CHANGED_ORGANIZATION_SETTINGS`, `ENABLED_INTEGRATION`, `DISABLED_INTEGRATION`, `ENABLED_CATEGORY`, `DISABLED_CATEGORY`, `CHANGED_PASSWORD`, `RESET_PASSWORD`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `CREATED_INTEGRATION_WIDE_FIELD_MAPPING`, `CREATED_LINKED_ACCOUNT_FIELD_MAPPING`, `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING`, `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING`, `DELETED_INTEGRATION_WIDE_FIELD_MAPPING`, `DELETED_LINKED_ACCOUNT_FIELD_MAPPING`, `FORCED_LINKED_ACCOUNT_RESYNC`, `MUTED_ISSUE`, `GENERATED_MAGIC_LINK`"
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include audit trail events that occurred after this time"
                    },
                    {
                        "in": "query",
                        "name": "user_email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, this will return events associated with the specified user email. Please note that the email address reflects the user's email at the time of the event, and may not be their current email."
                    }
                ],
                "tags": [
                    "audit-trail"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAuditLogEventList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/available-actions": {
            "get": {
                "operationId": "available_actions_retrieve",
                "description": "Returns a list of models and actions available for an account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "available-actions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableActions"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/collections": {
            "get": {
                "operationId": "collections_list",
                "description": "Returns a list of `Collection` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "collection_type",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "",
                                "LIST",
                                null,
                                "PROJECT"
                            ]
                        },
                        "description": "If provided, will only return collections of the given type."
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "parent_collection"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandParentCollection": {
                                "value": "parent_collection",
                                "summary": "Expand Parent_collection"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_collection_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return collections whose parent collection matches the given id.",
                        "examples": {
                            "ParentCollectionId": {
                                "summary": "parent_collection_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection_type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesCollectionType": {
                                "value": "collection_type",
                                "summary": "Original Enum Values Collection_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection_type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesCollectionType": {
                                "value": "collection_type",
                                "summary": "Original Enum Values Collection_type"
                            }
                        }
                    }
                ],
                "tags": [
                    "collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/collections/{id}": {
            "get": {
                "operationId": "collections_retrieve",
                "description": "Returns a `Collection` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "parent_collection"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandParentCollection": {
                                "value": "parent_collection",
                                "summary": "Expand Parent_collection"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection_type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesCollectionType": {
                                "value": "collection_type",
                                "summary": "Original Enum Values Collection_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "collection_type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesCollectionType": {
                                "value": "collection_type",
                                "summary": "Original Enum Values Collection_type"
                            }
                        }
                    }
                ],
                "tags": [
                    "collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Collection"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/collections/{parent_id}/users": {
            "get": {
                "operationId": "collections_users_list",
                "description": "Returns a list of `User` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "roles",
                                "teams",
                                "teams,roles"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTeams,Roles": {
                                "value": "teams,roles",
                                "summary": "Expand Teams, Roles"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parent_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "collections"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/comments": {
            "get": {
                "operationId": "comments_list",
                "description": "Returns a list of `Comment` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "contact",
                                "contact,ticket",
                                "ticket",
                                "user",
                                "user,contact",
                                "user,contact,ticket",
                                "user,ticket"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandUser,Contact,Ticket": {
                                "value": "user,contact,ticket",
                                "summary": "Expand User, Contact, Ticket"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return Comments created in the third party platform after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "ticket_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return comments for this ticket.",
                        "examples": {
                            "TicketId": {
                                "summary": "ticket_id"
                            }
                        }
                    }
                ],
                "tags": [
                    "comments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCommentList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "comments_create",
                "description": "Creates a `Comment` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "comments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/comments/{id}": {
            "get": {
                "operationId": "comments_retrieve",
                "description": "Returns a `Comment` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "contact",
                                "contact,ticket",
                                "ticket",
                                "user",
                                "user,contact",
                                "user,contact,ticket",
                                "user,ticket"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandUser,Contact,Ticket": {
                                "value": "user,contact,ticket",
                                "summary": "Expand User, Contact, Ticket"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "comments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/comments/meta/post": {
            "get": {
                "operationId": "comments_meta_post_retrieve",
                "description": "Returns metadata for `Comment` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "comments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/contacts": {
            "get": {
                "operationId": "contacts_list",
                "description": "Returns a list of `Contact` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAccount": {
                                "value": "account",
                                "summary": "Expand Account"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContactList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/contacts/{id}": {
            "get": {
                "operationId": "contacts_retrieve",
                "description": "Returns a `Contact` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAccount": {
                                "value": "account",
                                "summary": "Expand Account"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/default-scopes": {
            "get": {
                "operationId": "default_scopes_retrieve",
                "description": "Get the default permissions for Merge Common Models and fields across all Linked Accounts of a given category. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes).",
                "tags": [
                    "scopes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/delete-account": {
            "post": {
                "operationId": "delete_account_delete",
                "description": "Delete a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "delete-account"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/field-mappings": {
            "get": {
                "operationId": "field_mappings_retrieve",
                "description": "Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingApiInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "field_mappings_create",
                "description": "Create new Field Mappings that will be available after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/field-mappings/{field_mapping_id}": {
            "patch": {
                "operationId": "field_mappings_partial_update",
                "description": "Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "field_mapping_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "delete": {
                "operationId": "field_mappings_destroy",
                "description": "Deletes Field Mappings for a Linked Account. All data related to this Field Mapping will be deleted and these changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "field_mapping_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/generate-key": {
            "post": {
                "operationId": "generate_key_create",
                "description": "Create a remote key.",
                "tags": [
                    "generate-key"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/issues": {
            "get": {
                "operationId": "issues_list",
                "description": "Gets issues.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account_token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include issues whose most recent action occurred before this time"
                    },
                    {
                        "in": "query",
                        "name": "end_user_organization_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_incident_time_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose first incident time was after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "first_incident_time_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose first incident time was before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "include_muted",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If true, will include muted issues"
                    },
                    {
                        "in": "query",
                        "name": "integration_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_incident_time_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose last incident time was after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "last_incident_time_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose last incident time was before this datetime."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include issues whose most recent action occurred after this time"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ONGOING",
                                "RESOLVED"
                            ]
                        },
                        "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED"
                    }
                ],
                "tags": [
                    "issues"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIssueList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/issues/{id}": {
            "get": {
                "operationId": "issues_retrieve",
                "description": "Get a specific issue.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "issues"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/link-token": {
            "post": {
                "operationId": "link_token_create",
                "description": "Creates a link token to be used when linking a new end user.",
                "tags": [
                    "link-token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkToken"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/linked-account-scopes": {
            "get": {
                "operationId": "linked_account_scopes_retrieve",
                "description": "Get all available permissions for Merge Common Models and fields for a single Linked Account. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "scopes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "linked_account_scopes_create",
                "description": "Update permissions for any Common Model or field for a single Linked Account. Any Scopes not set in this POST request will inherit the default Scopes. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes)",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "scopes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/linked-accounts": {
            "get": {
                "operationId": "linked_accounts_list",
                "description": "List linked accounts for your organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "accounting",
                                "ats",
                                "crm",
                                "datawarehouse",
                                "filestorage",
                                "hris",
                                "mktg",
                                "ticketing"
                            ]
                        },
                        "description": "Options: `accounting`, `ats`, `crm`, `filestorage`, `hris`, `mktg`, `ticketing`\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage\n* `datawarehouse` - datawarehouse"
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_user_email_address",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given email address."
                    },
                    {
                        "in": "query",
                        "name": "end_user_organization_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given organization name."
                    },
                    {
                        "in": "query",
                        "name": "end_user_origin_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given origin ID."
                    },
                    {
                        "in": "query",
                        "name": "end_user_origin_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once."
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once."
                    },
                    {
                        "in": "query",
                        "name": "include_duplicates",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account."
                    },
                    {
                        "in": "query",
                        "name": "integration_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given integration name."
                    },
                    {
                        "in": "query",
                        "name": "is_test_account",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`"
                    }
                ],
                "tags": [
                    "linked-accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountDetailsAndActionsList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/passthrough": {
            "post": {
                "operationId": "passthrough_create",
                "description": "Pull data from an endpoint not currently supported by Merge.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "passthrough"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/projects": {
            "get": {
                "operationId": "projects_list",
                "description": "Returns a list of `Project` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProjectList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/projects/{id}": {
            "get": {
                "operationId": "projects_retrieve",
                "description": "Returns a `Project` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/projects/{parent_id}/users": {
            "get": {
                "operationId": "projects_users_list",
                "description": "Returns a list of `User` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "roles",
                                "teams",
                                "teams,roles"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTeams,Roles": {
                                "value": "teams,roles",
                                "summary": "Expand Teams, Roles"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parent_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "projects"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/regenerate-key": {
            "post": {
                "operationId": "regenerate_key_create",
                "description": "Exchange remote keys.",
                "tags": [
                    "regenerate-key"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/remote-fields": {
            "get": {
                "operationId": "remote_fields_retrieve",
                "description": "Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "common_models",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma seperated list of Common Model names. If included, will only return Remote Fields for those Common Models."
                    },
                    {
                        "in": "query",
                        "name": "include_example_values",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If true, will include example values, where available, for remote fields in the 3rd party platform. These examples come from active data from your customers."
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteFieldAPIResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/roles": {
            "get": {
                "operationId": "roles_list",
                "description": "Returns a list of `Role` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRoleList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/roles/{id}": {
            "get": {
                "operationId": "roles_retrieve",
                "description": "Returns a `Role` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "roles"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/selective-sync/configurations": {
            "get": {
                "operationId": "selective_sync_configurations_list",
                "description": "Get a linked account's selective syncs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                                    }
                                },
                                "examples": {
                                    "StartDateConditionExample": {
                                        "value": [
                                            {
                                                "linked_account_conditions": [
                                                    {
                                                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                        "common_model": "hris.Employee",
                                                        "native_name": "Started At",
                                                        "field_name": "start_date",
                                                        "operator": "GREATER_THAN_OR_EQUAL",
                                                        "value": "2022-01-01T00:00:00Z"
                                                    }
                                                ]
                                            }
                                        ],
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "put": {
                "operationId": "selective_sync_configurations_update",
                "description": "Replace a linked account's selective syncs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationListRequest"
                            },
                            "examples": {
                                "StartDateConditionRequestExample": {
                                    "value": {
                                        "linked_account_conditons": [
                                            {
                                                "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                "operator": "GREATER_THAN_OR_EQUAL",
                                                "value": "2022-01-01T00:00:00Z"
                                            }
                                        ]
                                    },
                                    "summary": "Employees that started on or after January 1st, 2022"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                                    }
                                },
                                "examples": {
                                    "StartDateConditionExample": {
                                        "value": [
                                            {
                                                "linked_account_conditions": [
                                                    {
                                                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                        "common_model": "hris.Employee",
                                                        "native_name": "Started At",
                                                        "field_name": "start_date",
                                                        "operator": "GREATER_THAN_OR_EQUAL",
                                                        "value": "2022-01-01T00:00:00Z"
                                                    }
                                                ]
                                            }
                                        ],
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/selective-sync/meta": {
            "get": {
                "operationId": "selective_sync_meta_list",
                "description": "Get metadata for the conditions available to a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "common_model",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedConditionSchemaList"
                                },
                                "examples": {
                                    "PaginatedConditionSchemaListExample": {
                                        "value": {
                                            "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                            "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                                            "results": [
                                                {
                                                    "id": "123e4567-e89b-12d3-a456-426655440000",
                                                    "common_model": "hris.Employee",
                                                    "native_name": "Started At",
                                                    "field_name": "start_date",
                                                    "is_unique": true,
                                                    "condition_type": "DATE_TIME",
                                                    "operators": [
                                                        {
                                                            "operator": "GREATER_THAN_OR_EQUAL",
                                                            "is_unique": true
                                                        },
                                                        {
                                                            "operator": "LESS_THAN_OR_EQUAL",
                                                            "is_unique": true
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/sync-status": {
            "get": {
                "operationId": "sync_status_list",
                "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`. Learn more about sync status in our [Help Center](https://help.merge.dev/en/articles/8184193-merge-sync-statuses).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "sync-status"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSyncStatusList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/sync-status/resync": {
            "post": {
                "operationId": "sync_status_resync_create",
                "description": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Launch, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "force-resync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyncStatus"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tags": {
            "get": {
                "operationId": "tags_list",
                "description": "Returns a list of `Tag` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tags/{id}": {
            "get": {
                "operationId": "tags_retrieve",
                "description": "Returns a `Tag` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "tags"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/target-fields": {
            "get": {
                "operationId": "target_fields_retrieve",
                "description": "Get all organization-wide Target Fields, this will not include any Linked Account specific Target Fields. Organization-wide Target Fields are additional fields appended to the Merge Common Model for all Linked Accounts in a category. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/target-fields/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalTargetFieldAPIResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/teams": {
            "get": {
                "operationId": "teams_list",
                "description": "Returns a list of `Team` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTeamList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/teams/{id}": {
            "get": {
                "operationId": "teams_retrieve",
                "description": "Returns a `Team` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tickets": {
            "get": {
                "operationId": "tickets_list",
                "description": "Returns a list of `Ticket` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "account_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tickets for this account.",
                        "examples": {
                            "AccountId": {
                                "summary": "account_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "assignee_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tickets assigned to the assignee_ids; multiple assignee_ids can be separated by commas."
                    },
                    {
                        "in": "query",
                        "name": "collection_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tickets assigned to the collection_ids; multiple collection_ids can be separated by commas."
                    },
                    {
                        "in": "query",
                        "name": "completed_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets completed after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "completed_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets completed before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "contact_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tickets for this contact.",
                        "examples": {
                            "ContactId": {
                                "summary": "contact_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "due_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets due after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "due_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets due before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,contact",
                                "account,contact,creator",
                                "account,contact,creator,parent_ticket",
                                "account,contact,parent_ticket",
                                "account,creator",
                                "account,creator,parent_ticket",
                                "account,parent_ticket",
                                "assignees",
                                "assignees,account",
                                "assignees,account,contact",
                                "assignees,account,contact,creator",
                                "assignees,account,contact,creator,parent_ticket",
                                "assignees,account,contact,parent_ticket",
                                "assignees,account,creator",
                                "assignees,account,creator,parent_ticket",
                                "assignees,account,parent_ticket",
                                "assignees,collections",
                                "assignees,collections,account",
                                "assignees,collections,account,contact",
                                "assignees,collections,account,contact,creator",
                                "assignees,collections,account,contact,creator,parent_ticket",
                                "assignees,collections,account,contact,parent_ticket",
                                "assignees,collections,account,creator",
                                "assignees,collections,account,creator,parent_ticket",
                                "assignees,collections,account,parent_ticket",
                                "assignees,collections,contact",
                                "assignees,collections,contact,creator",
                                "assignees,collections,contact,creator,parent_ticket",
                                "assignees,collections,contact,parent_ticket",
                                "assignees,collections,creator",
                                "assignees,collections,creator,parent_ticket",
                                "assignees,collections,parent_ticket",
                                "assignees,contact",
                                "assignees,contact,creator",
                                "assignees,contact,creator,parent_ticket",
                                "assignees,contact,parent_ticket",
                                "assignees,creator",
                                "assignees,creator,parent_ticket",
                                "assignees,parent_ticket",
                                "attachments",
                                "attachments,account",
                                "attachments,account,contact",
                                "attachments,account,contact,creator",
                                "attachments,account,contact,creator,parent_ticket",
                                "attachments,account,contact,parent_ticket",
                                "attachments,account,creator",
                                "attachments,account,creator,parent_ticket",
                                "attachments,account,parent_ticket",
                                "attachments,assignees",
                                "attachments,assignees,account",
                                "attachments,assignees,account,contact",
                                "attachments,assignees,account,contact,creator",
                                "attachments,assignees,account,contact,creator,parent_ticket",
                                "attachments,assignees,account,contact,parent_ticket",
                                "attachments,assignees,account,creator",
                                "attachments,assignees,account,creator,parent_ticket",
                                "attachments,assignees,account,parent_ticket",
                                "attachments,assignees,collections",
                                "attachments,assignees,collections,account",
                                "attachments,assignees,collections,account,contact",
                                "attachments,assignees,collections,account,contact,creator",
                                "attachments,assignees,collections,account,contact,creator,parent_ticket",
                                "attachments,assignees,collections,account,contact,parent_ticket",
                                "attachments,assignees,collections,account,creator",
                                "attachments,assignees,collections,account,creator,parent_ticket",
                                "attachments,assignees,collections,account,parent_ticket",
                                "attachments,assignees,collections,contact",
                                "attachments,assignees,collections,contact,creator",
                                "attachments,assignees,collections,contact,creator,parent_ticket",
                                "attachments,assignees,collections,contact,parent_ticket",
                                "attachments,assignees,collections,creator",
                                "attachments,assignees,collections,creator,parent_ticket",
                                "attachments,assignees,collections,parent_ticket",
                                "attachments,assignees,contact",
                                "attachments,assignees,contact,creator",
                                "attachments,assignees,contact,creator,parent_ticket",
                                "attachments,assignees,contact,parent_ticket",
                                "attachments,assignees,creator",
                                "attachments,assignees,creator,parent_ticket",
                                "attachments,assignees,parent_ticket",
                                "attachments,collections",
                                "attachments,collections,account",
                                "attachments,collections,account,contact",
                                "attachments,collections,account,contact,creator",
                                "attachments,collections,account,contact,creator,parent_ticket",
                                "attachments,collections,account,contact,parent_ticket",
                                "attachments,collections,account,creator",
                                "attachments,collections,account,creator,parent_ticket",
                                "attachments,collections,account,parent_ticket",
                                "attachments,collections,contact",
                                "attachments,collections,contact,creator",
                                "attachments,collections,contact,creator,parent_ticket",
                                "attachments,collections,contact,parent_ticket",
                                "attachments,collections,creator",
                                "attachments,collections,creator,parent_ticket",
                                "attachments,collections,parent_ticket",
                                "attachments,contact",
                                "attachments,contact,creator",
                                "attachments,contact,creator,parent_ticket",
                                "attachments,contact,parent_ticket",
                                "attachments,creator",
                                "attachments,creator,parent_ticket",
                                "attachments,parent_ticket",
                                "collections",
                                "collections,account",
                                "collections,account,contact",
                                "collections,account,contact,creator",
                                "collections,account,contact,creator,parent_ticket",
                                "collections,account,contact,parent_ticket",
                                "collections,account,creator",
                                "collections,account,creator,parent_ticket",
                                "collections,account,parent_ticket",
                                "collections,contact",
                                "collections,contact,creator",
                                "collections,contact,creator,parent_ticket",
                                "collections,contact,parent_ticket",
                                "collections,creator",
                                "collections,creator,parent_ticket",
                                "collections,parent_ticket",
                                "contact",
                                "contact,creator",
                                "contact,creator,parent_ticket",
                                "contact,parent_ticket",
                                "creator",
                                "creator,parent_ticket",
                                "parent_ticket"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAttachments,Assignees,Collections,Account,Contact,Creator,ParentTicket": {
                                "value": "attachments,assignees,collections,account,contact,creator,parent_ticket",
                                "summary": "Expand Attachments, Assignees, Collections, Account, Contact, Creator, Parent_ticket"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_fields",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_ticket_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return sub tickets of the parent_ticket_id.",
                        "examples": {
                            "ParentTicketId": {
                                "summary": "parent_ticket_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "priority",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "HIGH",
                                "LOW",
                                "NORMAL",
                                "URGENT"
                            ]
                        },
                        "description": "If provided, will only return tickets of this priority.\n\n* `URGENT` - URGENT\n* `HIGH` - HIGH\n* `NORMAL` - NORMAL\n* `LOW` - LOW"
                    },
                    {
                        "in": "query",
                        "name": "remote_created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets created in the third party platform after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "remote_created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets created in the third party platform before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priority",
                                "priority,status",
                                "priority,status,ticket_type",
                                "priority,ticket_type",
                                "status",
                                "status,ticket_type",
                                "ticket_type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesPriority,Status,TicketType": {
                                "value": "priority,status,ticket_type",
                                "summary": "Original Enum Values Priority, Status, Ticket_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "remote_updated_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets updated in the third party platform after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "remote_updated_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets updated in the third party platform before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priority",
                                "priority,status",
                                "priority,status,ticket_type",
                                "priority,ticket_type",
                                "status",
                                "status,ticket_type",
                                "ticket_type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesPriority,Status,TicketType": {
                                "value": "priority,status,ticket_type",
                                "summary": "Original Enum Values Priority, Status, Ticket_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "CLOSED",
                                "IN_PROGRESS",
                                "ON_HOLD",
                                "OPEN"
                            ]
                        },
                        "description": "If provided, will only return tickets of this status.\n\n* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `IN_PROGRESS` - IN_PROGRESS\n* `ON_HOLD` - ON_HOLD"
                    },
                    {
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tickets matching the tags; multiple tags can be separated by commas."
                    },
                    {
                        "in": "query",
                        "name": "ticket_type",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "If provided, will only return tickets of this type."
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTicketList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "tickets_create",
                "description": "Creates a `Ticket` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tickets/{id}": {
            "get": {
                "operationId": "tickets_retrieve",
                "description": "Returns a `Ticket` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,contact",
                                "account,contact,creator",
                                "account,contact,creator,parent_ticket",
                                "account,contact,parent_ticket",
                                "account,creator",
                                "account,creator,parent_ticket",
                                "account,parent_ticket",
                                "assignees",
                                "assignees,account",
                                "assignees,account,contact",
                                "assignees,account,contact,creator",
                                "assignees,account,contact,creator,parent_ticket",
                                "assignees,account,contact,parent_ticket",
                                "assignees,account,creator",
                                "assignees,account,creator,parent_ticket",
                                "assignees,account,parent_ticket",
                                "assignees,collections",
                                "assignees,collections,account",
                                "assignees,collections,account,contact",
                                "assignees,collections,account,contact,creator",
                                "assignees,collections,account,contact,creator,parent_ticket",
                                "assignees,collections,account,contact,parent_ticket",
                                "assignees,collections,account,creator",
                                "assignees,collections,account,creator,parent_ticket",
                                "assignees,collections,account,parent_ticket",
                                "assignees,collections,contact",
                                "assignees,collections,contact,creator",
                                "assignees,collections,contact,creator,parent_ticket",
                                "assignees,collections,contact,parent_ticket",
                                "assignees,collections,creator",
                                "assignees,collections,creator,parent_ticket",
                                "assignees,collections,parent_ticket",
                                "assignees,contact",
                                "assignees,contact,creator",
                                "assignees,contact,creator,parent_ticket",
                                "assignees,contact,parent_ticket",
                                "assignees,creator",
                                "assignees,creator,parent_ticket",
                                "assignees,parent_ticket",
                                "attachments",
                                "attachments,account",
                                "attachments,account,contact",
                                "attachments,account,contact,creator",
                                "attachments,account,contact,creator,parent_ticket",
                                "attachments,account,contact,parent_ticket",
                                "attachments,account,creator",
                                "attachments,account,creator,parent_ticket",
                                "attachments,account,parent_ticket",
                                "attachments,assignees",
                                "attachments,assignees,account",
                                "attachments,assignees,account,contact",
                                "attachments,assignees,account,contact,creator",
                                "attachments,assignees,account,contact,creator,parent_ticket",
                                "attachments,assignees,account,contact,parent_ticket",
                                "attachments,assignees,account,creator",
                                "attachments,assignees,account,creator,parent_ticket",
                                "attachments,assignees,account,parent_ticket",
                                "attachments,assignees,collections",
                                "attachments,assignees,collections,account",
                                "attachments,assignees,collections,account,contact",
                                "attachments,assignees,collections,account,contact,creator",
                                "attachments,assignees,collections,account,contact,creator,parent_ticket",
                                "attachments,assignees,collections,account,contact,parent_ticket",
                                "attachments,assignees,collections,account,creator",
                                "attachments,assignees,collections,account,creator,parent_ticket",
                                "attachments,assignees,collections,account,parent_ticket",
                                "attachments,assignees,collections,contact",
                                "attachments,assignees,collections,contact,creator",
                                "attachments,assignees,collections,contact,creator,parent_ticket",
                                "attachments,assignees,collections,contact,parent_ticket",
                                "attachments,assignees,collections,creator",
                                "attachments,assignees,collections,creator,parent_ticket",
                                "attachments,assignees,collections,parent_ticket",
                                "attachments,assignees,contact",
                                "attachments,assignees,contact,creator",
                                "attachments,assignees,contact,creator,parent_ticket",
                                "attachments,assignees,contact,parent_ticket",
                                "attachments,assignees,creator",
                                "attachments,assignees,creator,parent_ticket",
                                "attachments,assignees,parent_ticket",
                                "attachments,collections",
                                "attachments,collections,account",
                                "attachments,collections,account,contact",
                                "attachments,collections,account,contact,creator",
                                "attachments,collections,account,contact,creator,parent_ticket",
                                "attachments,collections,account,contact,parent_ticket",
                                "attachments,collections,account,creator",
                                "attachments,collections,account,creator,parent_ticket",
                                "attachments,collections,account,parent_ticket",
                                "attachments,collections,contact",
                                "attachments,collections,contact,creator",
                                "attachments,collections,contact,creator,parent_ticket",
                                "attachments,collections,contact,parent_ticket",
                                "attachments,collections,creator",
                                "attachments,collections,creator,parent_ticket",
                                "attachments,collections,parent_ticket",
                                "attachments,contact",
                                "attachments,contact,creator",
                                "attachments,contact,creator,parent_ticket",
                                "attachments,contact,parent_ticket",
                                "attachments,creator",
                                "attachments,creator,parent_ticket",
                                "attachments,parent_ticket",
                                "collections",
                                "collections,account",
                                "collections,account,contact",
                                "collections,account,contact,creator",
                                "collections,account,contact,creator,parent_ticket",
                                "collections,account,contact,parent_ticket",
                                "collections,account,creator",
                                "collections,account,creator,parent_ticket",
                                "collections,account,parent_ticket",
                                "collections,contact",
                                "collections,contact,creator",
                                "collections,contact,creator,parent_ticket",
                                "collections,contact,parent_ticket",
                                "collections,creator",
                                "collections,creator,parent_ticket",
                                "collections,parent_ticket",
                                "contact",
                                "contact,creator",
                                "contact,creator,parent_ticket",
                                "contact,parent_ticket",
                                "creator",
                                "creator,parent_ticket",
                                "parent_ticket"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAttachments,Assignees,Collections,Account,Contact,Creator,ParentTicket": {
                                "value": "attachments,assignees,collections,account,contact,creator,parent_ticket",
                                "summary": "Expand Attachments, Assignees, Collections, Account, Contact, Creator, Parent_ticket"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_fields",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include all remote fields, including fields that Merge did not map to common models, in a normalized format."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priority",
                                "priority,status",
                                "priority,status,ticket_type",
                                "priority,ticket_type",
                                "status",
                                "status,ticket_type",
                                "ticket_type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesPriority,Status,TicketType": {
                                "value": "priority,status,ticket_type",
                                "summary": "Original Enum Values Priority, Status, Ticket_type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "priority",
                                "priority,status",
                                "priority,status,ticket_type",
                                "priority,ticket_type",
                                "status",
                                "status,ticket_type",
                                "ticket_type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesPriority,Status,TicketType": {
                                "value": "priority,status,ticket_type",
                                "summary": "Original Enum Values Priority, Status, Ticket_type"
                            }
                        }
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "patch": {
                "operationId": "tickets_partial_update",
                "description": "Updates a `Ticket` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTicketEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTicketEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTicketEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tickets/{parent_id}/collaborators": {
            "get": {
                "operationId": "tickets_collaborators_list",
                "description": "Returns a list of `User` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "roles",
                                "teams",
                                "teams,roles"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTeams,Roles": {
                                "value": "teams,roles",
                                "summary": "Expand Teams, Roles"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "parent_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tickets/meta/patch/{id}": {
            "get": {
                "operationId": "tickets_meta_patch_retrieve",
                "description": "Returns metadata for `Ticket` PATCHs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-patch": "META_PATCH",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tickets/meta/post": {
            "get": {
                "operationId": "tickets_meta_post_retrieve",
                "description": "Returns metadata for `Ticket` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tickets/remote-field-classes": {
            "get": {
                "operationId": "tickets_remote_field_classes_list",
                "description": "Returns a list of `RemoteFieldClass` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "tickets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRemoteFieldClassList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_CLOSED_BETA"
            }
        },
        "/users": {
            "get": {
                "operationId": "users_list",
                "description": "Returns a list of `User` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "email_address",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "If provided, will only return users with emails equal to this value (case insensitive)."
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "roles",
                                "teams",
                                "teams,roles"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTeams,Roles": {
                                "value": "teams,roles",
                                "summary": "Expand Teams, Roles"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/users/{id}": {
            "get": {
                "operationId": "users_retrieve",
                "description": "Returns a `User` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "roles",
                                "teams",
                                "teams,roles"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTeams,Roles": {
                                "value": "teams,roles",
                                "summary": "Expand Teams, Roles"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/webhook-receivers": {
            "get": {
                "operationId": "webhook_receivers_list",
                "description": "Returns a list of `WebhookReceiver` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "webhook-receivers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WebhookReceiver"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "webhook_receivers_create",
                "description": "Creates a `WebhookReceiver` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "webhook-receivers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookReceiver"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        }
    },
    "components": {
        "schemas": {
            "AccessLevelEnum": {
                "enum": [
                    "PRIVATE",
                    "COMPANY",
                    "PUBLIC"
                ],
                "type": "string",
                "description": "* `PRIVATE` - PRIVATE\n* `COMPANY` - COMPANY\n* `PUBLIC` - PUBLIC",
                "x-merge-category": "ticketing"
            },
            "Account": {
                "type": "object",
                "description": "# The Account Object\n### Description\nThe `Account` object is used to represent the account that a ticket is associated with.\n\nThe account is a company that may be a customer. This does not represent the company that is receiving the ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's name.",
                        "example": "Waystar Royco"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        },
                        "nullable": true,
                        "description": "The account's domain names.",
                        "example": [
                            "waystar-royco.com",
                            "royco.com"
                        ]
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"owner\": \"User\"}",
                "x-merge-category": "ticketing"
            },
            "AccountDetails": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd"
                    },
                    "integration": {
                        "type": "string",
                        "readOnly": true,
                        "example": "BambooHR"
                    },
                    "integration_slug": {
                        "type": "string",
                        "readOnly": true,
                        "example": "bamboohr"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "hris"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Waystar Royco"
                    },
                    "end_user_email_address": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "example": "kendall.roy@waystar-royco.com"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true,
                        "example": "COMPLETE"
                    },
                    "webhook_listener_url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                    },
                    "is_duplicate": {
                        "type": "boolean",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                        "example": true
                    },
                    "account_type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "PRODUCTION"
                    }
                },
                "x-merge-category": "ticketing"
            },
            "AccountDetailsAndActions": {
                "type": "object",
                "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "e59b1821-f85c-4e28-a6b3-1804156f3563"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "example": "hris"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountDetailsAndActionsStatusEnum"
                            }
                        ],
                        "example": "INCOMPLETE"
                    },
                    "status_detail": {
                        "type": "string",
                        "example": "Invalid login credentials"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "example": "3ac95cde-6c7f-4eef-afec-be710b42308d"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "example": "Foo Bar, LLC"
                    },
                    "end_user_email_address": {
                        "type": "string",
                        "example": "hradmin@foobar.dev"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The tenant or domain the customer has provided access to.",
                        "example": "foobar"
                    },
                    "webhook_listener_url": {
                        "type": "string",
                        "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                    },
                    "is_duplicate": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                        "example": true
                    },
                    "integration": {
                        "$ref": "#/components/schemas/AccountDetailsAndActionsIntegration",
                        "example": {
                            "name": "SAP SuccessFactors",
                            "categories": [
                                "hris",
                                "ats"
                            ],
                            "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                            "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                            "color": "#F6A704",
                            "slug": "sap-successfactors",
                            "passthrough_available": true,
                            "available_model_operations": [
                                {
                                    "model_name": "Candidate",
                                    "available_operations": [
                                        "FETCH",
                                        "CREATE"
                                    ],
                                    "required_post_parameters": [
                                        "remote_user_id"
                                    ],
                                    "supported_fields": [
                                        "first_name",
                                        "last_name",
                                        "company",
                                        "title"
                                    ]
                                }
                            ]
                        }
                    },
                    "account_type": {
                        "type": "string",
                        "example": "PRODUCTION"
                    }
                },
                "required": [
                    "account_type",
                    "end_user_email_address",
                    "end_user_organization_name",
                    "id",
                    "status",
                    "webhook_listener_url"
                ],
                "x-merge-sample-json": "{\"id\": \"e59b1821-f85c-4e28-a6b3-1804156f3563\", \"category\": \"hris\", \"status\": \"INCOMPLETE\", \"status_detail\": \"Invalid login credentials\", \"end_user_origin_id\": \"3ac95cde-6c7f-4eef-afec-be710b42308d\", \"end_user_organization_name\": \"Foo Bar, LLC\", \"end_user_email_address\": \"hradmin@foobar.dev\", \"webhook_listener_url\": \"https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4\", \"is_duplicate\": true, \"integration\": {\"name\": \"SAP SuccessFactors\", \"categories\": [\"hris\", \"ats\"], \"image\": \"https://cdn.merge.dev/SuccessFactors_Logo.png\", \"square_image\": \"https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg\", \"color\": \"#F6A704\", \"slug\": \"sap-successfactors\", \"passthrough_available\": true, \"available_model_operations\": [{\"model_name\": \"Candidate\", \"available_operations\": [\"FETCH\", \"CREATE\"], \"required_post_parameters\": [\"remote_user_id\"], \"supported_fields\": [\"first_name\", \"last_name\", \"company\", \"title\"]}]}}",
                "x-merge-category": "ticketing"
            },
            "AccountDetailsAndActionsIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        }
                    },
                    "image": {
                        "type": "string"
                    },
                    "square_image": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "passthrough_available": {
                        "type": "boolean"
                    },
                    "available_model_operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelOperation"
                        }
                    }
                },
                "required": [
                    "categories",
                    "color",
                    "name",
                    "passthrough_available",
                    "slug"
                ],
                "x-merge-category": "ticketing"
            },
            "AccountDetailsAndActionsStatusEnum": {
                "enum": [
                    "COMPLETE",
                    "INCOMPLETE",
                    "RELINK_NEEDED"
                ],
                "type": "string",
                "description": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
                "x-merge-category": "ticketing"
            },
            "AccountIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Company name."
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        },
                        "description": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>"
                    },
                    "square_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Company logo in square shape. <b>Upload an image with a white background.</b>"
                    },
                    "color": {
                        "type": "string",
                        "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                        "maxLength": 18
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "api_endpoints_to_documentation_urls": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}"
                    },
                    "webhook_setup_guide_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "Setup guide URL for third party webhook creation. Exposed in Merge Docs."
                    },
                    "category_beta_status": {
                        "type": "object",
                        "description": "Category or categories this integration is in beta status for.",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "ticketing"
            },
            "AccountToken": {
                "type": "object",
                "properties": {
                    "account_token": {
                        "type": "string",
                        "example": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB"
                    },
                    "integration": {
                        "$ref": "#/components/schemas/AccountIntegration",
                        "example": {
                            "name": "SAP SuccessFactors",
                            "categories": [
                                "hris",
                                "ats"
                            ],
                            "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                            "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                            "color": "#F6A704",
                            "slug": "sap-successfactors"
                        }
                    }
                },
                "required": [
                    "account_token",
                    "integration"
                ],
                "x-merge-category": "ticketing"
            },
            "AdvancedMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_required": {
                        "type": "boolean"
                    },
                    "is_custom": {
                        "type": "boolean"
                    },
                    "field_choices": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "id"
                ],
                "x-merge-category": "ticketing"
            },
            "AsyncPassthroughReciept": {
                "type": "object",
                "properties": {
                    "async_passthrough_receipt_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "fd29020f-2695-445e-922e-dcd5e81903fd"
                    }
                },
                "required": [
                    "async_passthrough_receipt_id"
                ],
                "x-merge-category": "ticketing"
            },
            "Attachment": {
                "type": "object",
                "description": "# The Attachment Object\n### Description\nThe `Attachment` object is used to represent an attachment for a ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's name. It is required to include the file extension in the attachment's name.",
                        "example": "Screenshot.png"
                    },
                    "ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket associated with the attachment.",
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Ticket"
                    },
                    "file_url": {
                        "type": "string",
                        "nullable": true,
                        "example": "http://alturl.com/p749b",
                        "description": "The attachment's url. It is required to include the file extension in the file's URL."
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's file format.",
                        "example": "jpeg"
                    },
                    "uploaded_by": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user who uploaded the attachment.",
                        "example": "28b54125-287f-494d-965e-3c5b330c9a68"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's attachment was created.",
                        "example": "2022-11-10T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"ticket\": \"Ticket\"}",
                "x-merge-category": "ticketing"
            },
            "AttachmentRequest": {
                "type": "object",
                "description": "# The Attachment Object\n### Description\nThe `Attachment` object is used to represent an attachment for a ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's name. It is required to include the file extension in the attachment's name.",
                        "example": "Screenshot.png"
                    },
                    "ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket associated with the attachment.",
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Ticket"
                    },
                    "file_url": {
                        "type": "string",
                        "nullable": true,
                        "example": "http://alturl.com/p749b",
                        "description": "The attachment's url. It is required to include the file extension in the file's URL."
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's file format.",
                        "example": "jpeg"
                    },
                    "uploaded_by": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user who uploaded the attachment.",
                        "example": "28b54125-287f-494d-965e-3c5b330c9a68"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"ticket\": \"Ticket\"}",
                "x-merge-category": "ticketing"
            },
            "AuditLogEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b5ceea2a-7171-47ce-8090-165cfce5572c"
                    },
                    "user_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The User's full name at the time of this Event occurring.",
                        "maxLength": 200,
                        "example": "Gil Feig"
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "The User's email at the time of this Event occurring.",
                        "maxLength": 254,
                        "example": "hello@merge.dev"
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "Designates the role of the user (or SYSTEM/API if action not taken by a user) at the time of this Event occurring.\n\n* `ADMIN` - ADMIN\n* `DEVELOPER` - DEVELOPER\n* `MEMBER` - MEMBER\n* `API` - API\n* `SYSTEM` - SYSTEM\n* `MERGE_TEAM` - MERGE_TEAM",
                        "example": "ADMIN"
                    },
                    "ip_address": {
                        "type": "string",
                        "maxLength": 45,
                        "example": "192.0.2.123"
                    },
                    "event_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventTypeEnum"
                            }
                        ],
                        "description": "Designates the type of event that occurred.\n\n* `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY\n* `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY\n* `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY\n* `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY\n* `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY\n* `INVITED_USER` - INVITED_USER\n* `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED\n* `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED\n* `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT\n* `CREATED_DESTINATION` - CREATED_DESTINATION\n* `DELETED_DESTINATION` - DELETED_DESTINATION\n* `CHANGED_DESTINATION` - CHANGED_DESTINATION\n* `CHANGED_SCOPES` - CHANGED_SCOPES\n* `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION\n* `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS\n* `ENABLED_INTEGRATION` - ENABLED_INTEGRATION\n* `DISABLED_INTEGRATION` - DISABLED_INTEGRATION\n* `ENABLED_CATEGORY` - ENABLED_CATEGORY\n* `DISABLED_CATEGORY` - DISABLED_CATEGORY\n* `CHANGED_PASSWORD` - CHANGED_PASSWORD\n* `RESET_PASSWORD` - RESET_PASSWORD\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING\n* `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING\n* `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING\n* `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING\n* `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC\n* `MUTED_ISSUE` - MUTED_ISSUE\n* `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK",
                        "example": "CHANGED_SCOPES"
                    },
                    "event_description": {
                        "type": "string",
                        "example": "Organization-wide Scopes for model hris.Employee updated from Read to Read+Write"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "event_description",
                    "event_type",
                    "ip_address",
                    "role"
                ],
                "x-merge-category": "ticketing"
            },
            "AvailableActions": {
                "type": "object",
                "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
                "properties": {
                    "integration": {
                        "$ref": "#/components/schemas/AccountIntegration",
                        "example": {
                            "name": "Lever",
                            "categories": [
                                "ats"
                            ],
                            "image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png",
                            "square_image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png",
                            "color": "#262A34",
                            "is_in_beta": "true",
                            "api_endpoints_to_documentation_urls": "{'GET': [('/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve')], 'POST': []}"
                        }
                    },
                    "passthrough_available": {
                        "type": "boolean",
                        "example": true
                    },
                    "available_model_operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelOperation"
                        },
                        "example": [
                            {
                                "model_name": "Candidate",
                                "available_operations": [
                                    "FETCH",
                                    "CREATE"
                                ],
                                "required_post_parameters": [
                                    "remote_user_id"
                                ],
                                "supported_fields": [
                                    "first_name",
                                    "last_name",
                                    "company",
                                    "title"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "integration",
                    "passthrough_available"
                ],
                "x-merge-category": "ticketing"
            },
            "CategoriesEnum": {
                "enum": [
                    "hris",
                    "ats",
                    "accounting",
                    "ticketing",
                    "crm",
                    "mktg",
                    "filestorage"
                ],
                "type": "string",
                "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
                "x-merge-category": "ticketing"
            },
            "CategoryEnum": {
                "enum": [
                    "hris",
                    "ats",
                    "accounting",
                    "ticketing",
                    "crm",
                    "mktg",
                    "filestorage"
                ],
                "type": "string",
                "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
                "x-merge-category": "ticketing"
            },
            "Collection": {
                "type": "object",
                "description": "# The Collection Object\n### Description\nThe `Collection` object is used to represent collections of tickets. Collections may include other collections as\nsub collections.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The collection's name.",
                        "example": "Q1 Platform"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The collection's description.",
                        "example": "For tracking all tasks related to Platform for Q1"
                    },
                    "collection_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The collection's type.\n\n* `LIST` - LIST\n* `PROJECT` - PROJECT",
                        "example": "LIST"
                    },
                    "parent_collection": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The parent collection for this collection.",
                        "example": "25782302-5be1-4d78-8f46-2a5db72204ef",
                        "x-merge-expands-to": "Collection"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "access_level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccessLevelEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The level of access a User has to the Collection and its sub-objects.\n\n* `PRIVATE` - PRIVATE\n* `COMPANY` - COMPANY\n* `PUBLIC` - PUBLIC",
                        "example": "PUBLIC"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"parent_collection\": \"Collection\"}",
                "x-merge-category": "ticketing"
            },
            "CollectionTypeEnum": {
                "enum": [
                    "LIST",
                    "PROJECT"
                ],
                "type": "string",
                "description": "* `LIST` - LIST\n* `PROJECT` - PROJECT",
                "x-merge-category": "ticketing"
            },
            "Comment": {
                "type": "object",
                "description": "# The Comment Object\n### Description\nThe `Comment` object is used to represent a comment on a ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "user": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The author of the Comment, if the author is a User.",
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68",
                        "x-merge-expands-to": "User"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The author of the Comment, if the author is a Contact.",
                        "example": "dde3fb16-b8eb-483d-81c4-b78100816f15",
                        "x-merge-expands-to": "Contact"
                    },
                    "body": {
                        "type": "string",
                        "nullable": true,
                        "description": "The comment's text body.",
                        "example": "When will these integrations be done? You all should use Merge."
                    },
                    "html_body": {
                        "type": "string",
                        "nullable": true,
                        "description": "The comment's text body formatted as html.",
                        "example": "When will these integrations be done? You all should use <b>Merge<b>."
                    },
                    "ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket associated with the comment. ",
                        "example": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                        "x-merge-expands-to": "Ticket"
                    },
                    "is_private": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the comment is internal."
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's comment was created.",
                        "example": "1990-11-10T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"contact\": \"Contact\", \"ticket\": \"Ticket\", \"user\": \"User\"}",
                "x-merge-category": "ticketing"
            },
            "CommentEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/CommentRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "ticketing"
            },
            "CommentRequest": {
                "type": "object",
                "description": "# The Comment Object\n### Description\nThe `Comment` object is used to represent a comment on a ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "user": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The author of the Comment, if the author is a User.",
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68",
                        "x-merge-expands-to": "User"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The author of the Comment, if the author is a Contact.",
                        "example": "dde3fb16-b8eb-483d-81c4-b78100816f15",
                        "x-merge-expands-to": "Contact"
                    },
                    "body": {
                        "type": "string",
                        "nullable": true,
                        "description": "The comment's text body.",
                        "example": "When will these integrations be done? You all should use Merge."
                    },
                    "html_body": {
                        "type": "string",
                        "nullable": true,
                        "description": "The comment's text body formatted as html.",
                        "example": "When will these integrations be done? You all should use <b>Merge<b>."
                    },
                    "ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket associated with the comment. ",
                        "example": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                        "x-merge-expands-to": "Ticket"
                    },
                    "is_private": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the comment is internal."
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"contact\": \"Contact\", \"ticket\": \"Ticket\", \"user\": \"User\"}",
                "x-merge-category": "ticketing"
            },
            "CommentResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Comment"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ticketing"
            },
            "CommonModelScopeAPI": {
                "type": "object",
                "properties": {
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializer"
                        },
                        "description": "The common models you want to update the scopes for",
                        "example": [
                            {
                                "model_name": "Employee",
                                "model_permissions": {
                                    "READ": {
                                        "is_enabled": true
                                    },
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                },
                                "field_permissions": {
                                    "enabled_fields": [
                                        "avatar",
                                        "created_at",
                                        "custom_fields",
                                        "date_of_birth",
                                        "first_name",
                                        "gender",
                                        "remote_created_at",
                                        "remote_data"
                                    ],
                                    "disabled_fields": [
                                        "company",
                                        "employments",
                                        "groups",
                                        "home_location",
                                        "manager",
                                        "work_location"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "common_models"
                ],
                "x-merge-category": "ticketing"
            },
            "CommonModelScopesBodyRequest": {
                "type": "object",
                "properties": {
                    "model_id": {
                        "type": "string",
                        "minLength": 1,
                        "example": "hris.Employee"
                    },
                    "enabled_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnabledActionsEnum"
                        },
                        "example": [
                            "READ",
                            "WRITE"
                        ]
                    },
                    "disabled_fields": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "example": [
                            "first_name"
                        ]
                    }
                },
                "required": [
                    "disabled_fields",
                    "enabled_actions",
                    "model_id"
                ],
                "x-merge-category": "ticketing"
            },
            "ConditionSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account."
                    },
                    "common_model": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The common model for which a condition schema is defined."
                    },
                    "native_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "field_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_unique": {
                        "type": "boolean",
                        "description": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times."
                    },
                    "condition_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS"
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperatorSchema"
                        },
                        "description": "The schemas for the operators that can be used on a condition."
                    }
                },
                "required": [
                    "condition_type",
                    "field_name",
                    "id",
                    "native_name",
                    "operators"
                ],
                "x-merge-category": "ticketing"
            },
            "ConditionTypeEnum": {
                "enum": [
                    "BOOLEAN",
                    "DATE",
                    "DATE_TIME",
                    "INTEGER",
                    "FLOAT",
                    "STRING",
                    "LIST_OF_STRINGS"
                ],
                "type": "string",
                "description": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
                "x-merge-category": "ticketing"
            },
            "Contact": {
                "type": "object",
                "description": "# The Contact Object\n### Description\nThe `Contact` object is used to represent the customer, lead, or external user that a ticket is associated with.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's name.",
                        "example": "Cousin Greg"
                    },
                    "email_address": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's email address.",
                        "example": "greg@waystar-royco.com"
                    },
                    "phone_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's phone number.",
                        "example": "5108890293"
                    },
                    "details": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's details.",
                        "example": "Executive Assistant to Tom Wambsgans"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact's account.",
                        "example": "28b54125-287f-494d-965e-3c5b330c9a68",
                        "x-merge-expands-to": "Account"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\"}",
                "x-merge-category": "ticketing"
            },
            "CreateFieldMappingRequest": {
                "type": "object",
                "properties": {
                    "target_field_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the target field you want this remote field to map to.",
                        "example": "example_target_field_name"
                    },
                    "target_field_description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The description of the target field you want this remote field to map to.",
                        "example": "this is a example description of the target field"
                    },
                    "remote_field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "description": "The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.",
                        "example": [
                            "example_remote_field"
                        ]
                    },
                    "remote_method": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The method of the remote endpoint where the remote field is coming from.",
                        "example": "GET"
                    },
                    "remote_url_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the remote endpoint where the remote field is coming from.",
                        "example": "/example-url-path"
                    },
                    "common_model_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the Common Model that the remote field corresponds to in a given category.",
                        "example": "ExampleCommonModel"
                    }
                },
                "required": [
                    "common_model_name",
                    "remote_field_traversal_path",
                    "remote_method",
                    "remote_url_path",
                    "target_field_description",
                    "target_field_name"
                ],
                "x-merge-category": "ticketing"
            },
            "DataPassthroughRequest": {
                "type": "object",
                "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
                "properties": {
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "example": "POST"
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the request in the third party's platform.",
                        "example": "/scooters"
                    },
                    "base_url_override": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional override of the third party's base url for the request.",
                        "example": "https://api.example.com"
                    },
                    "data": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The data with the request. You must include a `request_format` parameter matching the data's format",
                        "example": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
                    },
                    "multipart_form_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipartFormFieldRequest"
                        },
                        "nullable": true,
                        "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`."
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                        "example": {
                            "EXTRA-HEADER": "value"
                        }
                    },
                    "request_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestFormatEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "JSON"
                    },
                    "normalize_response": {
                        "type": "boolean",
                        "description": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`."
                    }
                },
                "required": [
                    "method",
                    "path"
                ],
                "x-merge-category": "ticketing"
            },
            "DebugModeLog": {
                "type": "object",
                "properties": {
                    "log_id": {
                        "type": "string",
                        "example": "99433219-8017-4acd-bb3c-ceb23d663832"
                    },
                    "dashboard_view": {
                        "type": "string",
                        "example": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832"
                    },
                    "log_summary": {
                        "$ref": "#/components/schemas/DebugModelLogSummary",
                        "example": {
                            "url": "www.exampleintegration.com/api/v1/exampleapi",
                            "method": "POST",
                            "status_code": 200
                        }
                    }
                },
                "required": [
                    "dashboard_view",
                    "log_id",
                    "log_summary"
                ],
                "x-merge-sample-json": "{\"log_id\": \"99433219-8017-4acd-bb3c-ceb23d663832\", \"dashboard_view\": \"https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832\", \"log_summary\": {\"url\": \"www.exampleintegration.com/api/v1/exampleapi\", \"method\": \"POST\", \"status_code\": 200}}",
                "x-merge-category": "ticketing"
            },
            "DebugModelLogSummary": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "www.exampleintegration.com/api/v1/exampleapi"
                    },
                    "method": {
                        "type": "string",
                        "example": "POST"
                    },
                    "status_code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "required": [
                    "method",
                    "status_code",
                    "url"
                ],
                "x-merge-sample-json": "{\"url\": \"www.exampleintegration.com/api/v1/exampleapi\", \"method\": \"POST\", \"status_code\": 200}",
                "x-merge-category": "ticketing"
            },
            "EnabledActionsEnum": {
                "enum": [
                    "READ",
                    "WRITE"
                ],
                "type": "string",
                "description": "* `READ` - READ\n* `WRITE` - WRITE",
                "x-merge-category": "ticketing"
            },
            "EncodingEnum": {
                "enum": [
                    "RAW",
                    "BASE64",
                    "GZIP_BASE64"
                ],
                "type": "string",
                "description": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                "x-merge-category": "ticketing"
            },
            "EndUserDetailsRequest": {
                "type": "object",
                "properties": {
                    "end_user_email_address": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
                        "maxLength": 100,
                        "example": "example@gmail.com"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Your end user's organization.",
                        "maxLength": 100,
                        "example": "Test Organization"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
                        "maxLength": 100,
                        "example": "12345"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        },
                        "description": "The integration categories to show in Merge Link.",
                        "example": [
                            "hris",
                            "ats"
                        ]
                    },
                    "integration": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://docs.merge.dev/guides/merge-link/single-integration/.",
                        "example": "bamboohr"
                    },
                    "link_expiry_mins": {
                        "type": "integer",
                        "maximum": 10080,
                        "minimum": 30,
                        "default": 30,
                        "description": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30."
                    },
                    "should_create_magic_link_url": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false,
                        "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link."
                    },
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonModelScopesBodyRequest"
                        },
                        "nullable": true,
                        "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account."
                    },
                    "category_common_model_scopes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializerRequest"
                            }
                        },
                        "nullable": true,
                        "description": "When creating a Link Token, you can set permissions for Common Models that will apply to the account that is going to be linked. Any model or field not specified in link token payload will default to existing settings.",
                        "example": {
                            "hris": [
                                {
                                    "model_name": "Employee",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "first_name",
                                            "last_name",
                                            "personal_email"
                                        ],
                                        "disabled": [
                                            "preferred_name"
                                        ]
                                    }
                                },
                                {
                                    "model_name": "Employment",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": false
                                        },
                                        "WRITE": {
                                            "is_enabled": false
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "effective_date"
                                        ]
                                    }
                                }
                            ],
                            "ats": [
                                {
                                    "model_name": "Job",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "name"
                                        ],
                                        "disabled": [
                                            "description"
                                        ]
                                    }
                                },
                                {
                                    "model_name": "Department",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "language": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The language code for the language to localize Merge Link to.",
                        "maxLength": 2
                    }
                },
                "required": [
                    "categories",
                    "end_user_email_address",
                    "end_user_organization_name",
                    "end_user_origin_id"
                ],
                "x-merge-category": "ticketing"
            },
            "ErrorValidationProblem": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/ValidationProblemSource",
                        "example": {
                            "pointer": "/model/custom_fields"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Missing Required Field"
                    },
                    "detail": {
                        "type": "string",
                        "example": "custom_fields is a required field on model."
                    },
                    "problem_type": {
                        "type": "string",
                        "example": "MISSING_REQUIRED_FIELD"
                    }
                },
                "required": [
                    "detail",
                    "problem_type",
                    "title"
                ],
                "x-merge-category": "ticketing"
            },
            "EventTypeEnum": {
                "enum": [
                    "CREATED_REMOTE_PRODUCTION_API_KEY",
                    "DELETED_REMOTE_PRODUCTION_API_KEY",
                    "CREATED_TEST_API_KEY",
                    "DELETED_TEST_API_KEY",
                    "REGENERATED_PRODUCTION_API_KEY",
                    "INVITED_USER",
                    "TWO_FACTOR_AUTH_ENABLED",
                    "TWO_FACTOR_AUTH_DISABLED",
                    "DELETED_LINKED_ACCOUNT",
                    "CREATED_DESTINATION",
                    "DELETED_DESTINATION",
                    "CHANGED_DESTINATION",
                    "CHANGED_SCOPES",
                    "CHANGED_PERSONAL_INFORMATION",
                    "CHANGED_ORGANIZATION_SETTINGS",
                    "ENABLED_INTEGRATION",
                    "DISABLED_INTEGRATION",
                    "ENABLED_CATEGORY",
                    "DISABLED_CATEGORY",
                    "CHANGED_PASSWORD",
                    "RESET_PASSWORD",
                    "ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION",
                    "ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT",
                    "DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION",
                    "DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT",
                    "CREATED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "CREATED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "CHANGED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "CHANGED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "DELETED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "DELETED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "FORCED_LINKED_ACCOUNT_RESYNC",
                    "MUTED_ISSUE",
                    "GENERATED_MAGIC_LINK"
                ],
                "type": "string",
                "description": "* `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY\n* `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY\n* `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY\n* `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY\n* `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY\n* `INVITED_USER` - INVITED_USER\n* `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED\n* `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED\n* `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT\n* `CREATED_DESTINATION` - CREATED_DESTINATION\n* `DELETED_DESTINATION` - DELETED_DESTINATION\n* `CHANGED_DESTINATION` - CHANGED_DESTINATION\n* `CHANGED_SCOPES` - CHANGED_SCOPES\n* `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION\n* `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS\n* `ENABLED_INTEGRATION` - ENABLED_INTEGRATION\n* `DISABLED_INTEGRATION` - DISABLED_INTEGRATION\n* `ENABLED_CATEGORY` - ENABLED_CATEGORY\n* `DISABLED_CATEGORY` - DISABLED_CATEGORY\n* `CHANGED_PASSWORD` - CHANGED_PASSWORD\n* `RESET_PASSWORD` - RESET_PASSWORD\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING\n* `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING\n* `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING\n* `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING\n* `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC\n* `MUTED_ISSUE` - MUTED_ISSUE\n* `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK",
                "x-merge-category": "ticketing"
            },
            "ExternalTargetFieldAPI": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": "example_target_field_name"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": "this is a example description of a target field"
                    },
                    "is_mapped": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": true
                    }
                },
                "x-merge-category": "ticketing"
            },
            "ExternalTargetFieldAPIResponse": {
                "type": "object",
                "properties": {
                    "Ticket": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Comment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Project": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Collection": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "User": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Role": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Team": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "FieldFormatEnum": {
                "enum": [
                    "string",
                    "number",
                    "date",
                    "datetime",
                    "bool",
                    "list"
                ],
                "type": "string",
                "description": "* `string` - string\n* `number` - number\n* `date` - date\n* `datetime` - datetime\n* `bool` - bool\n* `list` - list",
                "x-merge-category": "ticketing"
            },
            "FieldMappingApiInstance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "is_integration_wide": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "target_field": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "is_organization_wide": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "description",
                            "is_organization_wide",
                            "name"
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "example": {
                            "name": "example_target_field_name",
                            "description": "this is a example description of a target field",
                            "is_organization_wide": true
                        }
                    },
                    "remote_field": {
                        "type": "object",
                        "properties": {
                            "remote_key_name": {
                                "type": "string"
                            },
                            "schema": {
                                "type": "object",
                                "additionalProperties": {}
                            },
                            "remote_endpoint_info": {
                                "type": "object",
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "url_path": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "field_traversal_path": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "field_traversal_path",
                                    "method",
                                    "url_path"
                                ]
                            }
                        },
                        "required": [
                            "remote_endpoint_info",
                            "remote_key_name",
                            "schema"
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "example": {
                            "remote_key_name": "example_remote_field_key",
                            "schema": {
                                "type": "string"
                            },
                            "remote_endpoint_info": {
                                "method": "GET",
                                "url_path": "/example-url-path",
                                "field_traversal_path": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "FieldMappingApiInstanceResponse": {
                "type": "object",
                "properties": {
                    "Ticket": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Comment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Project": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Collection": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "User": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Role": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Team": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "FieldMappingInstanceResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/FieldMappingApiInstance"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ticketing"
            },
            "FieldPermissionDeserializer": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "array",
                        "items": {}
                    },
                    "disabled": {
                        "type": "array",
                        "items": {}
                    }
                },
                "x-merge-category": "ticketing"
            },
            "FieldPermissionDeserializerRequest": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "array",
                        "items": {}
                    },
                    "disabled": {
                        "type": "array",
                        "items": {}
                    }
                },
                "x-merge-category": "ticketing"
            },
            "FieldTypeEnum": {
                "enum": [
                    "string",
                    "number",
                    "date",
                    "datetime",
                    "bool",
                    "list"
                ],
                "type": "string",
                "description": "* `string` - string\n* `number` - number\n* `date` - date\n* `datetime` - datetime\n* `bool` - bool\n* `list` - list",
                "x-merge-category": "ticketing"
            },
            "GenerateRemoteKeyRequest": {
                "type": "object",
                "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the remote key",
                        "example": "Remote Deployment Key 1"
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "ticketing"
            },
            "IndividualCommonModelScopeDeserializer": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "type": "string"
                    },
                    "model_permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ModelPermissionDeserializer"
                        }
                    },
                    "field_permissions": {
                        "$ref": "#/components/schemas/FieldPermissionDeserializer"
                    }
                },
                "required": [
                    "model_name"
                ],
                "x-merge-category": "ticketing"
            },
            "IndividualCommonModelScopeDeserializerRequest": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "model_permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ModelPermissionDeserializerRequest"
                        }
                    },
                    "field_permissions": {
                        "$ref": "#/components/schemas/FieldPermissionDeserializerRequest"
                    }
                },
                "required": [
                    "model_name"
                ],
                "x-merge-category": "ticketing"
            },
            "Issue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IssueStatusEnum"
                            }
                        ],
                        "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                        "example": "ONGOING"
                    },
                    "error_description": {
                        "type": "string",
                        "example": "Missing Permissions"
                    },
                    "end_user": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
                    },
                    "first_incident_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-12-05T16:19:15.161Z"
                    },
                    "last_incident_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-12-05T16:19:15.161Z"
                    },
                    "is_muted": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "error_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "example": [
                            "Missing employee permissions.",
                            "Missing time off permissions."
                        ]
                    }
                },
                "required": [
                    "error_description"
                ],
                "x-merge-category": "ticketing"
            },
            "IssueStatusEnum": {
                "enum": [
                    "ONGOING",
                    "RESOLVED"
                ],
                "type": "string",
                "description": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                "x-merge-category": "ticketing"
            },
            "ItemFormatEnum": {
                "enum": [
                    "string",
                    "number",
                    "date",
                    "datetime",
                    "bool",
                    "list"
                ],
                "type": "string",
                "description": "* `string` - uuid\n* `number` - url\n* `date` - email\n* `datetime` - phone\n* `bool` - currency\n* `list` - decimal",
                "x-merge-category": "ticketing"
            },
            "ItemSchema": {
                "type": "object",
                "properties": {
                    "item_type": {
                        "$ref": "#/components/schemas/ItemTypeEnum"
                    },
                    "item_format": {
                        "$ref": "#/components/schemas/ItemFormatEnum"
                    },
                    "item_choices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "ItemTypeEnum": {
                "enum": [
                    "string",
                    "number",
                    "date",
                    "datetime",
                    "bool",
                    "list"
                ],
                "type": "string",
                "description": "* `string` - string\n* `number` - number\n* `date` - date\n* `datetime` - datetime\n* `bool` - bool\n* `list` - list",
                "x-merge-category": "ticketing"
            },
            "LinkToken": {
                "type": "object",
                "properties": {
                    "link_token": {
                        "type": "string",
                        "example": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
                    },
                    "integration_name": {
                        "type": "string",
                        "example": "Lever"
                    },
                    "magic_link_url": {
                        "type": "string",
                        "example": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                    }
                },
                "required": [
                    "link_token"
                ],
                "x-merge-category": "ticketing"
            },
            "LinkedAccountCommonModelScopeDeserializerRequest": {
                "type": "object",
                "properties": {
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializerRequest"
                        },
                        "description": "The common models you want to update the scopes for",
                        "example": [
                            {
                                "model_name": "Employee",
                                "model_permissions": {
                                    "READ": {
                                        "is_enabled": true
                                    },
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                },
                                "field_permissions": {
                                    "enabled_fields": [
                                        "avatar",
                                        "home_location"
                                    ],
                                    "disabled_fields": [
                                        "work_location"
                                    ]
                                }
                            },
                            {
                                "model_name": "Benefit",
                                "model_permissions": {
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "common_models"
                ],
                "x-merge-category": "ticketing"
            },
            "LinkedAccountCondition": {
                "type": "object",
                "properties": {
                    "condition_schema_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID indicating which condition schema to use for a specific condition."
                    },
                    "common_model": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The common model for a specific condition."
                    },
                    "native_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "description": "The operator for a specific condition."
                    },
                    "value": {
                        "readOnly": true,
                        "description": "The value for a condition."
                    },
                    "field_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "condition_schema_id",
                    "field_name",
                    "native_name",
                    "operator"
                ],
                "x-merge-category": "ticketing"
            },
            "LinkedAccountConditionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ID indicating which Linked Account Condition this is."
                    },
                    "condition_schema_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID indicating which condition schema to use for a specific condition."
                    },
                    "operator": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The operator for a specific condition."
                    },
                    "value": {
                        "description": "The value for a specific condition."
                    }
                },
                "required": [
                    "condition_schema_id",
                    "operator",
                    "value"
                ],
                "x-merge-category": "ticketing"
            },
            "LinkedAccountSelectiveSyncConfiguration": {
                "type": "object",
                "properties": {
                    "linked_account_conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountCondition"
                        },
                        "readOnly": true,
                        "description": "The conditions belonging to a selective sync."
                    }
                },
                "x-merge-category": "ticketing"
            },
            "LinkedAccountSelectiveSyncConfigurationListRequest": {
                "type": "object",
                "properties": {
                    "sync_configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationRequest"
                        },
                        "description": "The selective syncs associated with a linked account."
                    }
                },
                "required": [
                    "sync_configurations"
                ],
                "x-merge-category": "ticketing"
            },
            "LinkedAccountSelectiveSyncConfigurationRequest": {
                "type": "object",
                "properties": {
                    "linked_account_conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountConditionRequest"
                        },
                        "description": "The conditions belonging to a selective sync."
                    }
                },
                "required": [
                    "linked_account_conditions"
                ],
                "x-merge-category": "ticketing"
            },
            "LinkedAccountStatus": {
                "type": "object",
                "properties": {
                    "linked_account_status": {
                        "type": "string"
                    },
                    "can_make_request": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "can_make_request",
                    "linked_account_status"
                ],
                "x-merge-category": "ticketing"
            },
            "MetaResponse": {
                "type": "object",
                "properties": {
                    "request_schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "type": "object",
                            "properties": {
                                "model": {
                                    "type": "object",
                                    "required": [
                                        "last_name",
                                        "first_name",
                                        "merge_categories",
                                        "new_york_city_neighborhood",
                                        "favorite_tv_shows",
                                        "favorite_watch"
                                    ],
                                    "properties": {
                                        "email_addresses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "email_address_type": {
                                                        "type": "string",
                                                        "title": "email_address_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "email_addresses",
                                            "description": "Array of email_addresses objects"
                                        },
                                        "urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "url_type": {
                                                        "type": "string",
                                                        "title": "url_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "urls",
                                            "description": "Array of urls objects"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "title": "first_name",
                                            "description": "The first name."
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "title": "last_name",
                                            "description": "The last name."
                                        },
                                        "phone_numbers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "phone_number_type": {
                                                        "type": "string",
                                                        "title": "phone_number_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "phone_numbers",
                                            "description": "Array of phone_numbers objects"
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": "tags",
                                            "description": "Array of tags names"
                                        },
                                        "attachments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "title": "id"
                                                    },
                                                    "file_url": {
                                                        "type": "string",
                                                        "title": "file_url"
                                                    },
                                                    "file_name": {
                                                        "type": "string",
                                                        "title": "file_name"
                                                    },
                                                    "attachment_type": {
                                                        "type": "string",
                                                        "title": "attachment_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "attachments",
                                            "description": "Array of attachments objects "
                                        },
                                        "merge_categories": {
                                            "type": "array",
                                            "categories": {
                                                "type": "string",
                                                "enum": [
                                                    "HRIS",
                                                    "ATS",
                                                    "Accounting",
                                                    "Ticketing",
                                                    "File Storage",
                                                    "CRM",
                                                    "Marketing Automation"
                                                ],
                                                "enum_information": [
                                                    {
                                                        "value": "HRIS",
                                                        "description": "Merge HRIS Category"
                                                    },
                                                    {
                                                        "value": "ATS",
                                                        "description": "Merge ATS Category"
                                                    },
                                                    {
                                                        "value": "Accounting",
                                                        "description": "Merge Accounting Category"
                                                    },
                                                    {
                                                        "value": "Ticketing",
                                                        "description": "Merge Ticketing Category"
                                                    },
                                                    {
                                                        "value": "File Storage",
                                                        "description": "Merge File Storage Category"
                                                    },
                                                    {
                                                        "value": "CRM",
                                                        "description": "Merge CRM Category"
                                                    },
                                                    {
                                                        "value": "Marketing Automation",
                                                        "description": "Merge Marketing Automation Category"
                                                    }
                                                ]
                                            },
                                            "title": "Merge Categories",
                                            "description": "Array of Merge's Unified API Categories"
                                        },
                                        "new_york_city_neighborhood": {
                                            "type": "string",
                                            "title": "Borough",
                                            "description": "One of the 5 Boroughs of New York City"
                                        },
                                        "favorite_tv_shows": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": "Favorite TV Shows",
                                            "description": "Array of TV Show objects on merge.tv_shows"
                                        },
                                        "favorite_watch": {
                                            "type": "string",
                                            "title": "Favorite Watch",
                                            "description": "Favorite watch of all time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "remote_field_classes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "status": {
                        "$ref": "#/components/schemas/LinkedAccountStatus",
                        "example": {
                            "linked_account_status": "COMPLETE",
                            "can_make_request": true
                        }
                    },
                    "has_conditional_params": {
                        "type": "boolean"
                    },
                    "has_required_linked_account_params": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "has_conditional_params",
                    "has_required_linked_account_params",
                    "request_schema"
                ],
                "x-merge-category": "ticketing"
            },
            "MethodEnum": {
                "enum": [
                    "GET",
                    "OPTIONS",
                    "HEAD",
                    "POST",
                    "PUT",
                    "PATCH",
                    "DELETE"
                ],
                "type": "string",
                "description": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
                "x-merge-category": "ticketing"
            },
            "ModelOperation": {
                "type": "object",
                "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "example": "Candidate"
                    },
                    "available_operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "FETCH",
                            "CREATE"
                        ]
                    },
                    "required_post_parameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "remote_user_id"
                        ]
                    },
                    "supported_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "first_name",
                            "last_name",
                            "company",
                            "title"
                        ]
                    }
                },
                "required": [
                    "available_operations",
                    "model_name",
                    "required_post_parameters",
                    "supported_fields"
                ],
                "x-merge-category": "ticketing"
            },
            "ModelPermissionDeserializer": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "x-merge-category": "ticketing"
            },
            "ModelPermissionDeserializerRequest": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "x-merge-category": "ticketing"
            },
            "MultipartFormFieldRequest": {
                "type": "object",
                "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the form field",
                        "example": "resume"
                    },
                    "data": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The data for the form field.",
                        "example": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
                    },
                    "encoding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EncodingEnum"
                            }
                        ],
                        "nullable": true,
                        "default": "RAW",
                        "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                        "example": "BASE64"
                    },
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The file name of the form field, if the field is for a file.",
                        "example": "resume.pdf"
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The MIME type of the file, if the field is for a file.",
                        "example": "application/pdf"
                    }
                },
                "required": [
                    "data",
                    "name"
                ],
                "x-merge-category": "ticketing"
            },
            "OperatorSchema": {
                "type": "object",
                "properties": {
                    "operator": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operator for which an operator schema is defined."
                    },
                    "is_unique": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the operator can be repeated multiple times."
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedAccountDetailsAndActionsList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountDetailsAndActions"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedAccountList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedAttachmentList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedAuditLogEventList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogEvent"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedCollectionList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Collection"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedCommentList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedConditionSchemaList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionSchema"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedContactList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedIssueList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Issue"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedProjectList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedRemoteFieldClassList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldClass"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedRoleList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedSyncStatusList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncStatus"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedTagList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedTeamList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Team"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedTicketList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ticket"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PaginatedUserList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PatchedEditFieldMappingRequest": {
                "type": "object",
                "properties": {
                    "remote_field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "description": "The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.",
                        "example": [
                            "example_remote_field_name"
                        ]
                    },
                    "remote_method": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The method of the remote endpoint where the remote field is coming from.",
                        "example": "GET"
                    },
                    "remote_url_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the remote endpoint where the remote field is coming from.",
                        "example": "/example-url-path"
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PatchedTicketEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/PatchedTicketRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "ticketing"
            },
            "PatchedTicketRequest": {
                "type": "object",
                "description": "# The Ticket Object\n### Description\nThe `Ticket` object is used to represent a ticket or a task within a system.\n\n### Usage Example\nTODO",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket's name.",
                        "example": "Please add more integrations"
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                        ]
                    },
                    "creator": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user who created this ticket."
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The ticket's due date.",
                        "example": "2022-10-11T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TicketStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The current status of the ticket.\n\n* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `IN_PROGRESS` - IN_PROGRESS\n* `ON_HOLD` - ON_HOLD",
                        "example": "OPEN"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket’s description. HTML version of description is mapped if supported by the third-party platform.",
                        "example": "Can you please add more integrations? It'll make syncing data much easier!"
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
                        ]
                    },
                    "ticket_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket's type.",
                        "example": "incident"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The account associated with the ticket.",
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact associated with the ticket.",
                        "example": "65c345ba-6870-4974-87ba-dd31509c367a"
                    },
                    "parent_ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket's parent ticket.",
                        "example": "75b33d04-30d2-4f3e-be45-27838bc94342"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The tag's name."
                        },
                        "example": [
                            "enterprise",
                            "other-tag"
                        ]
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the ticket was completed.",
                        "example": "2021-12-09T00:00:00Z"
                    },
                    "ticket_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The 3rd party url of the Ticket.",
                        "maxLength": 2000,
                        "example": "https://thirdpartysoftware.com/project/3/issue/1"
                    },
                    "priority": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriorityEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The priority or urgency of the Ticket.\n\n* `URGENT` - URGENT\n* `HIGH` - HIGH\n* `NORMAL` - NORMAL\n* `LOW` - LOW",
                        "example": "HIGH"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    },
                    "remote_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldRequest"
                        },
                        "writeOnly": true
                    }
                },
                "x-merge-category": "ticketing"
            },
            "PriorityEnum": {
                "enum": [
                    "URGENT",
                    "HIGH",
                    "NORMAL",
                    "LOW"
                ],
                "type": "string",
                "description": "* `URGENT` - URGENT\n* `HIGH` - HIGH\n* `NORMAL` - NORMAL\n* `LOW` - LOW",
                "x-merge-category": "ticketing"
            },
            "Project": {
                "type": "object",
                "description": "# The Project Object\n### Description\nPlease use the `Collection` model. This model will be fully deprecated on 3/30/2024.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project's name. ",
                        "example": "Q1 Platform"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The project's description.",
                        "example": "For tracking all tasks related to Platform for Q1"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-category": "ticketing"
            },
            "RemoteData": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "data": {
                        "readOnly": true
                    }
                },
                "required": [
                    "path"
                ],
                "x-merge-category": "ticketing"
            },
            "RemoteEndpointInfo": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "url_path": {
                        "type": "string",
                        "example": "/example-url-path"
                    },
                    "field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "example_key_name"
                        ]
                    }
                },
                "required": [
                    "field_traversal_path",
                    "method",
                    "url_path"
                ],
                "x-merge-category": "ticketing"
            },
            "RemoteField": {
                "type": "object",
                "properties": {
                    "remote_field_class": {
                        "$ref": "#/components/schemas/RemoteFieldClass",
                        "x-merge-expands-to": "RemoteFieldClass"
                    },
                    "value": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": "string"
                    }
                },
                "required": [
                    "remote_field_class"
                ],
                "x-merge-expands": "{\"remote_field_class\": \"RemoteFieldClass\"}",
                "x-merge-category": "ticketing"
            },
            "RemoteFieldAPI": {
                "type": "object",
                "properties": {
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "type": "string"
                        }
                    },
                    "remote_key_name": {
                        "type": "string",
                        "example": "example_remote_key_name"
                    },
                    "remote_endpoint_info": {
                        "$ref": "#/components/schemas/RemoteEndpointInfo",
                        "example": {
                            "method": "GET",
                            "url_path": "/example-url-path",
                            "field_traversal_path": [
                                "example_key_name"
                            ]
                        }
                    },
                    "example_values": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "example"
                        ]
                    },
                    "advanced_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdvancedMetadata"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "advanced_metadata",
                    "example_values",
                    "remote_endpoint_info",
                    "remote_key_name",
                    "schema"
                ],
                "x-merge-category": "ticketing"
            },
            "RemoteFieldAPIResponse": {
                "type": "object",
                "properties": {
                    "Ticket": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Comment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Project": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Collection": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "User": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Role": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Team": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Attachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Tag": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    }
                },
                "x-merge-category": "ticketing"
            },
            "RemoteFieldClass": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "remote_key_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_custom": {
                        "type": "boolean"
                    },
                    "is_required": {
                        "type": "boolean"
                    },
                    "field_type": {
                        "$ref": "#/components/schemas/FieldTypeEnum"
                    },
                    "field_format": {
                        "$ref": "#/components/schemas/FieldFormatEnum"
                    },
                    "field_choices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "item_schema": {
                        "$ref": "#/components/schemas/ItemSchema"
                    }
                },
                "x-merge-category": "ticketing"
            },
            "RemoteFieldRequest": {
                "type": "object",
                "properties": {
                    "remote_field_class": {
                        "type": "string",
                        "format": "uuid",
                        "example": "b057d1d2-c204-4da8-a74c-c91d1a260614",
                        "x-merge-expands-to": "RemoteFieldClass"
                    },
                    "value": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": "string"
                    }
                },
                "required": [
                    "remote_field_class"
                ],
                "x-merge-expands": "{\"remote_field_class\": \"RemoteFieldClass\"}",
                "x-merge-category": "ticketing"
            },
            "RemoteKey": {
                "type": "object",
                "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Remote Deployment Key 1"
                    },
                    "key": {
                        "type": "string",
                        "example": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    }
                },
                "required": [
                    "key",
                    "name"
                ],
                "x-merge-category": "ticketing"
            },
            "RemoteKeyForRegenerationRequest": {
                "type": "object",
                "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the remote key",
                        "example": "Remote Deployment Key 1"
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "ticketing"
            },
            "RemoteResponse": {
                "type": "object",
                "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
                "properties": {
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "/scooters"
                    },
                    "status": {
                        "type": "integer",
                        "example": 200
                    },
                    "response": {
                        "example": {
                            "scooters": [
                                {
                                    "company": "Lime",
                                    "model": "Gen 2.5"
                                },
                                {
                                    "company": "Bird",
                                    "model": "Bird Zero"
                                }
                            ]
                        }
                    },
                    "response_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "X-Page-Token": "value"
                        }
                    },
                    "response_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTypeEnum"
                            }
                        ],
                        "example": "JSON"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "EXTRA-HEADER": "value",
                            "Authorization": "<redacted>"
                        }
                    }
                },
                "required": [
                    "method",
                    "path",
                    "response",
                    "status"
                ],
                "x-merge-category": "ticketing"
            },
            "RequestFormatEnum": {
                "enum": [
                    "JSON",
                    "XML",
                    "MULTIPART"
                ],
                "type": "string",
                "description": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
                "x-merge-category": "ticketing"
            },
            "ResponseTypeEnum": {
                "enum": [
                    "JSON",
                    "BASE64_GZIP"
                ],
                "type": "string",
                "description": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
                "x-merge-category": "ticketing"
            },
            "Role": {
                "type": "object",
                "description": "# The Role Object\n### Description\nThe `Role` object is used to represent the set of actions & access that a user with this role is allowed to perform.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "23454124-387f-494d-265e-345b330c9123"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "123"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The name of the Role.",
                        "example": "Member"
                    },
                    "ticket_actions": {
                        "type": "array",
                        "items": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/TicketActionsEnum"
                                }
                            ],
                            "nullable": true
                        },
                        "nullable": true,
                        "description": "The set of actions that a User with this Role can perform. Possible enum values include: `VIEW`, `CREATE`, `EDIT`, `DELETE`, `CLOSE`, and `ASSIGN`.",
                        "example": [
                            "VIEW",
                            "EDIT",
                            "CREATE"
                        ]
                    },
                    "ticket_access": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TicketAccessEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The level of Ticket access that a User with this Role can perform.\n\n* `ALL` - ALL\n* `ASSIGNED_ONLY` - ASSIGNED_ONLY\n* `TEAM_ONLY` - TEAM_ONLY",
                        "example": "ASSIGNED_ONLY"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-category": "ticketing"
            },
            "RoleEnum": {
                "enum": [
                    "ADMIN",
                    "DEVELOPER",
                    "MEMBER",
                    "API",
                    "SYSTEM",
                    "MERGE_TEAM"
                ],
                "type": "string",
                "description": "* `ADMIN` - ADMIN\n* `DEVELOPER` - DEVELOPER\n* `MEMBER` - MEMBER\n* `API` - API\n* `SYSTEM` - SYSTEM\n* `MERGE_TEAM` - MERGE_TEAM",
                "x-merge-category": "ticketing"
            },
            "SelectiveSyncConfigurationsUsageEnum": {
                "enum": [
                    "IN_NEXT_SYNC",
                    "IN_LAST_SYNC"
                ],
                "type": "string",
                "description": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
                "x-merge-category": "ticketing"
            },
            "SyncStatus": {
                "type": "object",
                "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "example": "Ticket"
                    },
                    "model_id": {
                        "type": "string",
                        "example": "ticketing.Ticket"
                    },
                    "last_sync_start": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-30T19:44:18.695973Z"
                    },
                    "next_sync_start": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-30T20:44:18.662942Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SyncStatusStatusEnum"
                            }
                        ],
                        "example": "SYNCING"
                    },
                    "is_initial_sync": {
                        "type": "boolean",
                        "example": true
                    },
                    "selective_sync_configurations_usage": {
                        "$ref": "#/components/schemas/SelectiveSyncConfigurationsUsageEnum"
                    }
                },
                "required": [
                    "is_initial_sync",
                    "model_id",
                    "model_name",
                    "status"
                ],
                "x-merge-sample-json": "{\"model_name\": \"Candidate\", \"model_id\": \"ats.Candidate\", \"last_sync_start\": \"2021-03-30T19:44:18.695973Z\", \"next_sync_start\": \"2021-03-30T20:44:18.662942Z\", \"status\": \"SYNCING\", \"is_initial_sync\": true}",
                "x-merge-category": "ticketing"
            },
            "SyncStatusStatusEnum": {
                "enum": [
                    "SYNCING",
                    "DONE",
                    "FAILED",
                    "DISABLED",
                    "PAUSED",
                    "PARTIALLY_SYNCED"
                ],
                "type": "string",
                "description": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
                "x-merge-category": "ticketing"
            },
            "Tag": {
                "type": "object",
                "description": "# The Tag Object\n### Description\nThe `Tag` object is used to represent a tag or label for a ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The tag's name.",
                        "example": "Ticketing API"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-category": "ticketing"
            },
            "Team": {
                "type": "object",
                "description": "# The Team Object\n### Description\nThe `Team` object is used to represent a team within the company receiving the ticket.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The team's name.",
                        "example": "Platform"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The team's description.",
                        "example": "Platform and Integrations Team"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"parent_team\": \"Team\"}",
                "x-merge-category": "ticketing"
            },
            "Ticket": {
                "type": "object",
                "description": "# The Ticket Object\n### Description\nThe `Ticket` object is used to represent a ticket or a task within a system.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket's name.",
                        "example": "Please add more integrations"
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                        ],
                        "x-merge-expands-to": "User"
                    },
                    "creator": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user who created this ticket.",
                        "x-merge-expands-to": "User"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The ticket's due date.",
                        "example": "2022-10-11T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TicketStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The current status of the ticket.\n\n* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `IN_PROGRESS` - IN_PROGRESS\n* `ON_HOLD` - ON_HOLD",
                        "example": "OPEN"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket’s description. HTML version of description is mapped if supported by the third-party platform.",
                        "example": "Can you please add more integrations? It'll make syncing data much easier!"
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
                        ],
                        "x-merge-expands-to": "Collection"
                    },
                    "ticket_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket's type.",
                        "example": "incident"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The account associated with the ticket.",
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact associated with the ticket.",
                        "example": "65c345ba-6870-4974-87ba-dd31509c367a",
                        "x-merge-expands-to": "Contact"
                    },
                    "parent_ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket's parent ticket.",
                        "example": "75b33d04-30d2-4f3e-be45-27838bc94342",
                        "x-merge-expands-to": "Ticket"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "42747df1-95e7-46e2-93cc-66f1191edca5",
                            "92f972d0-2526-434b-9409-4c3b468e08f0"
                        ],
                        "x-merge-expands-to": "Attachment"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The tag's name."
                        },
                        "example": [
                            "enterprise",
                            "other-tag"
                        ]
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's ticket was created.",
                        "example": "2021-11-10T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's ticket was updated.",
                        "example": "2021-12-09T00:00:00Z"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the ticket was completed.",
                        "example": "2021-12-09T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "ticket_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The 3rd party url of the Ticket.",
                        "maxLength": 2000,
                        "example": "https://thirdpartysoftware.com/project/3/issue/1"
                    },
                    "priority": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriorityEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The priority or urgency of the Ticket.\n\n* `URGENT` - URGENT\n* `HIGH` - HIGH\n* `NORMAL` - NORMAL\n* `LOW` - LOW",
                        "example": "HIGH"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    },
                    "remote_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteField"
                        },
                        "readOnly": true
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"assignees\": \"User\", \"attachments\": \"Attachment\", \"collections\": \"Collection\", \"contact\": \"Contact\", \"creator\": \"User\", \"parent_ticket\": \"Ticket\"}",
                "x-merge-category": "ticketing"
            },
            "TicketAccessEnum": {
                "enum": [
                    "ALL",
                    "ASSIGNED_ONLY",
                    "TEAM_ONLY"
                ],
                "type": "string",
                "description": "* `ALL` - ALL\n* `ASSIGNED_ONLY` - ASSIGNED_ONLY\n* `TEAM_ONLY` - TEAM_ONLY",
                "x-merge-category": "ticketing"
            },
            "TicketActionsEnum": {
                "enum": [
                    "VIEW",
                    "CREATE",
                    "EDIT",
                    "DELETE",
                    "CLOSE",
                    "ASSIGN"
                ],
                "type": "string",
                "description": "* `VIEW` - VIEW\n* `CREATE` - CREATE\n* `EDIT` - EDIT\n* `DELETE` - DELETE\n* `CLOSE` - CLOSE\n* `ASSIGN` - ASSIGN",
                "x-merge-category": "ticketing"
            },
            "TicketEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/TicketRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "ticketing"
            },
            "TicketRequest": {
                "type": "object",
                "description": "# The Ticket Object\n### Description\nThe `Ticket` object is used to represent a ticket or a task within a system.\n\n### Usage Example\nTODO",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket's name.",
                        "example": "Please add more integrations"
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                        ],
                        "x-merge-expands-to": "User"
                    },
                    "creator": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The user who created this ticket.",
                        "x-merge-expands-to": "User"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The ticket's due date.",
                        "example": "2022-10-11T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TicketStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The current status of the ticket.\n\n* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `IN_PROGRESS` - IN_PROGRESS\n* `ON_HOLD` - ON_HOLD",
                        "example": "OPEN"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket’s description. HTML version of description is mapped if supported by the third-party platform.",
                        "example": "Can you please add more integrations? It'll make syncing data much easier!"
                    },
                    "collections": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
                        ],
                        "x-merge-expands-to": "Collection"
                    },
                    "ticket_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The ticket's type.",
                        "example": "incident"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The account associated with the ticket.",
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact associated with the ticket.",
                        "example": "65c345ba-6870-4974-87ba-dd31509c367a",
                        "x-merge-expands-to": "Contact"
                    },
                    "parent_ticket": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ticket's parent ticket.",
                        "example": "75b33d04-30d2-4f3e-be45-27838bc94342",
                        "x-merge-expands-to": "Ticket"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "42747df1-95e7-46e2-93cc-66f1191edca5",
                            "92f972d0-2526-434b-9409-4c3b468e08f0"
                        ],
                        "x-merge-expands-to": "Attachment"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The tag's name."
                        },
                        "example": [
                            "enterprise",
                            "other-tag"
                        ]
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the ticket was completed.",
                        "example": "2021-12-09T00:00:00Z"
                    },
                    "ticket_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The 3rd party url of the Ticket.",
                        "maxLength": 2000,
                        "example": "https://thirdpartysoftware.com/project/3/issue/1"
                    },
                    "priority": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriorityEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The priority or urgency of the Ticket.\n\n* `URGENT` - URGENT\n* `HIGH` - HIGH\n* `NORMAL` - NORMAL\n* `LOW` - LOW",
                        "example": "HIGH"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    },
                    "remote_fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldRequest"
                        },
                        "writeOnly": true
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"assignees\": \"User\", \"attachments\": \"Attachment\", \"collections\": \"Collection\", \"contact\": \"Contact\", \"creator\": \"User\", \"parent_ticket\": \"Ticket\"}",
                "x-merge-category": "ticketing"
            },
            "TicketResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Ticket"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ticketing"
            },
            "TicketStatusEnum": {
                "enum": [
                    "OPEN",
                    "CLOSED",
                    "IN_PROGRESS",
                    "ON_HOLD"
                ],
                "type": "string",
                "description": "* `OPEN` - OPEN\n* `CLOSED` - CLOSED\n* `IN_PROGRESS` - IN_PROGRESS\n* `ON_HOLD` - ON_HOLD",
                "x-merge-category": "ticketing"
            },
            "TicketingAttachmentEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/AttachmentRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "ticketing"
            },
            "TicketingAttachmentResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Attachment"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "ticketing"
            },
            "User": {
                "type": "object",
                "description": "# The User Object\n### Description\nThe `User` object is used to represent an employee within a company.\n\n### Usage Example\nTODO",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "17a54124-287f-494d-965e-3c5b330c9a68"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The user's name.",
                        "example": "Gil Feig"
                    },
                    "email_address": {
                        "type": "string",
                        "nullable": true,
                        "description": "The user's email address.",
                        "example": "help@merge.dev"
                    },
                    "is_active": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether or not the user is active.",
                        "example": true
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "28b54125-287f-494d-965e-3c5b330c9a68",
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                        ],
                        "x-merge-expands-to": "Team"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "23454124-387f-494d-265e-345b330c9123"
                        ],
                        "x-merge-expands-to": "Role"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true,
                        "description": "The user's avatar picture.",
                        "example": "https://merge.dev/user_profile_pic.png"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"roles\": \"Role\", \"teams\": \"Team\"}",
                "x-merge-category": "ticketing"
            },
            "ValidationProblemSource": {
                "type": "object",
                "properties": {
                    "pointer": {
                        "type": "string"
                    }
                },
                "required": [
                    "pointer"
                ],
                "x-merge-category": "ticketing"
            },
            "WarningValidationProblem": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/ValidationProblemSource",
                        "example": {
                            "pointer": "/age"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Unrecognized Field"
                    },
                    "detail": {
                        "type": "string",
                        "example": "An unrecognized field, age, was passed in with request data."
                    },
                    "problem_type": {
                        "type": "string",
                        "example": "UNRECOGNIZED_FIELD"
                    }
                },
                "required": [
                    "detail",
                    "problem_type",
                    "title"
                ],
                "x-merge-category": "ticketing"
            },
            "WebhookReceiver": {
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "required": [
                    "event",
                    "is_active"
                ],
                "x-merge-category": "ticketing"
            },
            "WebhookReceiverRequest": {
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "event",
                    "is_active"
                ],
                "x-merge-category": "ticketing"
            }
        },
        "securitySchemes": {
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Bearer\""
            }
        }
    },
    "servers": [
        {
            "url": "https://api.merge.dev/api/ticketing/v1",
            "description": "Production"
        },
        {
            "url": "https://api-sandbox.merge.dev/api/ticketing/v1",
            "description": "Sandbox"
        },
        {
            "url": "https://api-eu.merge.dev/api/ticketing/v1",
            "description": "Production EU"
        }
    ]
}