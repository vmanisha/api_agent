{
    "openapi": "3.0.3",
    "info": {
        "title": "Merge Accounting API",
        "version": "1.0",
        "description": "The unified API for building rich integrations with multiple Accounting & Finance platforms.",
        "contact": {
            "name": "Merge Team",
            "url": "https://www.merge.dev/",
            "email": "hello@merge.dev"
        }
    },
    "paths": {
        "/account-details": {
            "get": {
                "operationId": "account_details_retrieve",
                "description": "Get details for a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "account-details"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/account-token/{public_token}": {
            "get": {
                "operationId": "account_token_retrieve",
                "description": "Returns the account token for the end user with the provided public token.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "public_token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "account-token"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountToken"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/accounting-periods": {
            "get": {
                "operationId": "accounting_periods_list",
                "description": "Returns a list of `AccountingPeriod` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "accounting-periods"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountingPeriodList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/accounting-periods/{id}": {
            "get": {
                "operationId": "accounting_periods_retrieve",
                "description": "Returns an `AccountingPeriod` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "accounting-periods"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingPeriod"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/accounts": {
            "get": {
                "operationId": "accounts_list",
                "description": "Returns a list of `Account` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return accounts for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "classification",
                                "classification,status",
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesClassification,Status": {
                                "value": "classification,status",
                                "summary": "Original Enum Values Classification, Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "classification",
                                "classification,status",
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesClassification,Status": {
                                "value": "classification,status",
                                "summary": "Original Enum Values Classification, Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "accounts_create",
                "description": "Creates an `Account` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/accounts/{id}": {
            "get": {
                "operationId": "accounts_retrieve",
                "description": "Returns an `Account` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "classification",
                                "classification,status",
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesClassification,Status": {
                                "value": "classification,status",
                                "summary": "Original Enum Values Classification, Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "classification",
                                "classification,status",
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesClassification,Status": {
                                "value": "classification,status",
                                "summary": "Original Enum Values Classification, Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/accounts/meta/post": {
            "get": {
                "operationId": "accounts_meta_post_retrieve",
                "description": "Returns metadata for `Account` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/addresses/{id}": {
            "get": {
                "operationId": "addresses_retrieve",
                "description": "Returns an `Address` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesType": {
                                "value": "type",
                                "summary": "Original Enum Values Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesType": {
                                "value": "type",
                                "summary": "Original Enum Values Type"
                            }
                        }
                    }
                ],
                "tags": [
                    "addresses"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Address"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/async-passthrough": {
            "post": {
                "operationId": "async_passthrough_create",
                "description": "Asynchronously pull data from an endpoint not currently supported by Merge.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "async-passthrough"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncPassthroughReciept"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/async-passthrough/{async_passthrough_receipt_id}": {
            "get": {
                "operationId": "async_passthrough_retrieve",
                "description": "Retrieves data from earlier async-passthrough POST request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "async_passthrough_receipt_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "async-passthrough"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments": {
            "get": {
                "operationId": "attachments_list",
                "description": "Returns a list of `AccountingAttachment` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return accounting attachments for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountingAttachmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "attachments_create",
                "description": "Creates an `AccountingAttachment` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingAttachmentEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingAttachmentEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountingAttachmentEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingAttachmentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/{id}": {
            "get": {
                "operationId": "attachments_retrieve",
                "description": "Returns an `AccountingAttachment` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/attachments/meta/post": {
            "get": {
                "operationId": "attachments_meta_post_retrieve",
                "description": "Returns metadata for `AccountingAttachment` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "attachments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/audit-trail": {
            "get": {
                "operationId": "audit_trail_list",
                "description": "Gets a list of audit trail events.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include audit trail events that occurred before this time"
                    },
                    {
                        "in": "query",
                        "name": "event_type",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include events with the given event type. Possible values include: `CREATED_REMOTE_PRODUCTION_API_KEY`, `DELETED_REMOTE_PRODUCTION_API_KEY`, `CREATED_TEST_API_KEY`, `DELETED_TEST_API_KEY`, `REGENERATED_PRODUCTION_API_KEY`, `INVITED_USER`, `TWO_FACTOR_AUTH_ENABLED`, `TWO_FACTOR_AUTH_DISABLED`, `DELETED_LINKED_ACCOUNT`, `CREATED_DESTINATION`, `DELETED_DESTINATION`, `CHANGED_DESTINATION`, `CHANGED_SCOPES`, `CHANGED_PERSONAL_INFORMATION`, `CHANGED_ORGANIZATION_SETTINGS`, `ENABLED_INTEGRATION`, `DISABLED_INTEGRATION`, `ENABLED_CATEGORY`, `DISABLED_CATEGORY`, `CHANGED_PASSWORD`, `RESET_PASSWORD`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION`, `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT`, `CREATED_INTEGRATION_WIDE_FIELD_MAPPING`, `CREATED_LINKED_ACCOUNT_FIELD_MAPPING`, `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING`, `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING`, `DELETED_INTEGRATION_WIDE_FIELD_MAPPING`, `DELETED_LINKED_ACCOUNT_FIELD_MAPPING`, `FORCED_LINKED_ACCOUNT_RESYNC`, `MUTED_ISSUE`, `GENERATED_MAGIC_LINK`"
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include audit trail events that occurred after this time"
                    },
                    {
                        "in": "query",
                        "name": "user_email",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, this will return events associated with the specified user email. Please note that the email address reflects the user's email at the time of the event, and may not be their current email."
                    }
                ],
                "tags": [
                    "audit-trail"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAuditLogEventList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/available-actions": {
            "get": {
                "operationId": "available_actions_retrieve",
                "description": "Returns a list of models and actions available for an account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "available-actions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableActions"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/balance-sheets": {
            "get": {
                "operationId": "balance_sheets_list",
                "description": "Returns a list of `BalanceSheet` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return balance sheets for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "balance-sheets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBalanceSheetList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/balance-sheets/{id}": {
            "get": {
                "operationId": "balance_sheets_retrieve",
                "description": "Returns a `BalanceSheet` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "balance-sheets"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BalanceSheet"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/cash-flow-statements": {
            "get": {
                "operationId": "cash_flow_statements_list",
                "description": "Returns a list of `CashFlowStatement` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return cash flow statements for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCashFlowStatementList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/cash-flow-statements/{id}": {
            "get": {
                "operationId": "cash_flow_statements_retrieve",
                "description": "Returns a `CashFlowStatement` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "cash-flow-statements"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CashFlowStatement"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/company-info": {
            "get": {
                "operationId": "company_info_list",
                "description": "Returns a list of `CompanyInfo` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "addresses",
                                "addresses,phone_numbers",
                                "phone_numbers"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAddresses,PhoneNumbers": {
                                "value": "addresses,phone_numbers",
                                "summary": "Expand Addresses, Phone_numbers"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "company-info"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyInfoList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/company-info/{id}": {
            "get": {
                "operationId": "company_info_retrieve",
                "description": "Returns a `CompanyInfo` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "addresses",
                                "addresses,phone_numbers",
                                "phone_numbers"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAddresses,PhoneNumbers": {
                                "value": "addresses,phone_numbers",
                                "summary": "Expand Addresses, Phone_numbers"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "company-info"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyInfo"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/contacts": {
            "get": {
                "operationId": "contacts_list",
                "description": "Returns a list of `Contact` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return contacts for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "addresses",
                                "addresses,company",
                                "addresses,phone_numbers",
                                "addresses,phone_numbers,company",
                                "company",
                                "phone_numbers",
                                "phone_numbers,company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAddresses,PhoneNumbers,Company": {
                                "value": "addresses,phone_numbers,company",
                                "summary": "Expand Addresses, Phone_numbers, Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "is_customer",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return Contacts that are denoted as customers."
                    },
                    {
                        "in": "query",
                        "name": "is_supplier",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return Contacts that are denoted as suppliers."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContactList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "contacts_create",
                "description": "Creates a `Contact` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContactEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/contacts/{id}": {
            "get": {
                "operationId": "contacts_retrieve",
                "description": "Returns a `Contact` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "addresses",
                                "addresses,company",
                                "addresses,phone_numbers",
                                "addresses,phone_numbers,company",
                                "company",
                                "phone_numbers",
                                "phone_numbers,company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandAddresses,PhoneNumbers,Company": {
                                "value": "addresses,phone_numbers,company",
                                "summary": "Expand Addresses, Phone_numbers, Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contact"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/contacts/meta/post": {
            "get": {
                "operationId": "contacts_meta_post_retrieve",
                "description": "Returns metadata for `Contact` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "contacts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/credit-notes": {
            "get": {
                "operationId": "credit_notes_list",
                "description": "Returns a list of `CreditNote` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return credit notes for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "applied_payments",
                                "applied_payments,accounting_period",
                                "applied_payments,company",
                                "applied_payments,company,accounting_period",
                                "applied_payments,contact",
                                "applied_payments,contact,accounting_period",
                                "applied_payments,contact,company",
                                "applied_payments,contact,company,accounting_period",
                                "applied_payments,line_items",
                                "applied_payments,line_items,accounting_period",
                                "applied_payments,line_items,company",
                                "applied_payments,line_items,company,accounting_period",
                                "applied_payments,line_items,contact",
                                "applied_payments,line_items,contact,accounting_period",
                                "applied_payments,line_items,contact,company",
                                "applied_payments,line_items,contact,company,accounting_period",
                                "applied_payments,line_items,tracking_categories",
                                "applied_payments,line_items,tracking_categories,accounting_period",
                                "applied_payments,line_items,tracking_categories,company",
                                "applied_payments,line_items,tracking_categories,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact",
                                "applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact,company",
                                "applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "applied_payments,tracking_categories",
                                "applied_payments,tracking_categories,accounting_period",
                                "applied_payments,tracking_categories,company",
                                "applied_payments,tracking_categories,company,accounting_period",
                                "applied_payments,tracking_categories,contact",
                                "applied_payments,tracking_categories,contact,accounting_period",
                                "applied_payments,tracking_categories,contact,company",
                                "applied_payments,tracking_categories,contact,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "line_items",
                                "line_items,accounting_period",
                                "line_items,company",
                                "line_items,company,accounting_period",
                                "line_items,contact",
                                "line_items,contact,accounting_period",
                                "line_items,contact,company",
                                "line_items,contact,company,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,company",
                                "line_items,tracking_categories,company,accounting_period",
                                "line_items,tracking_categories,contact",
                                "line_items,tracking_categories,contact,accounting_period",
                                "line_items,tracking_categories,contact,company",
                                "line_items,tracking_categories,contact,company,accounting_period",
                                "payments",
                                "payments,accounting_period",
                                "payments,applied_payments",
                                "payments,applied_payments,accounting_period",
                                "payments,applied_payments,company",
                                "payments,applied_payments,company,accounting_period",
                                "payments,applied_payments,contact",
                                "payments,applied_payments,contact,accounting_period",
                                "payments,applied_payments,contact,company",
                                "payments,applied_payments,contact,company,accounting_period",
                                "payments,applied_payments,line_items",
                                "payments,applied_payments,line_items,accounting_period",
                                "payments,applied_payments,line_items,company",
                                "payments,applied_payments,line_items,company,accounting_period",
                                "payments,applied_payments,line_items,contact",
                                "payments,applied_payments,line_items,contact,accounting_period",
                                "payments,applied_payments,line_items,contact,company",
                                "payments,applied_payments,line_items,contact,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories",
                                "payments,applied_payments,line_items,tracking_categories,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,company",
                                "payments,applied_payments,line_items,tracking_categories,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact",
                                "payments,applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact,company",
                                "payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,applied_payments,tracking_categories",
                                "payments,applied_payments,tracking_categories,accounting_period",
                                "payments,applied_payments,tracking_categories,company",
                                "payments,applied_payments,tracking_categories,company,accounting_period",
                                "payments,applied_payments,tracking_categories,contact",
                                "payments,applied_payments,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,tracking_categories,contact,company",
                                "payments,applied_payments,tracking_categories,contact,company,accounting_period",
                                "payments,company",
                                "payments,company,accounting_period",
                                "payments,contact",
                                "payments,contact,accounting_period",
                                "payments,contact,company",
                                "payments,contact,company,accounting_period",
                                "payments,line_items",
                                "payments,line_items,accounting_period",
                                "payments,line_items,company",
                                "payments,line_items,company,accounting_period",
                                "payments,line_items,contact",
                                "payments,line_items,contact,accounting_period",
                                "payments,line_items,contact,company",
                                "payments,line_items,contact,company,accounting_period",
                                "payments,line_items,tracking_categories",
                                "payments,line_items,tracking_categories,accounting_period",
                                "payments,line_items,tracking_categories,company",
                                "payments,line_items,tracking_categories,company,accounting_period",
                                "payments,line_items,tracking_categories,contact",
                                "payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,line_items,tracking_categories,contact,company",
                                "payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,tracking_categories",
                                "payments,tracking_categories,accounting_period",
                                "payments,tracking_categories,company",
                                "payments,tracking_categories,company,accounting_period",
                                "payments,tracking_categories,contact",
                                "payments,tracking_categories,contact,accounting_period",
                                "payments,tracking_categories,contact,company",
                                "payments,tracking_categories,contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandPayments,AppliedPayments,LineItems,TrackingCategories,Contact,Company,AccountingPeriod": {
                                "value": "payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "summary": "Expand Payments, Applied_payments, Line_items, Tracking_categories, Contact, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "status,type",
                                "type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus,Type": {
                                "value": "status,type",
                                "summary": "Original Enum Values Status, Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "status,type",
                                "type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus,Type": {
                                "value": "status,type",
                                "summary": "Original Enum Values Status, Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    }
                ],
                "tags": [
                    "credit-notes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCreditNoteList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/credit-notes/{id}": {
            "get": {
                "operationId": "credit_notes_retrieve",
                "description": "Returns a `CreditNote` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "applied_payments",
                                "applied_payments,accounting_period",
                                "applied_payments,company",
                                "applied_payments,company,accounting_period",
                                "applied_payments,contact",
                                "applied_payments,contact,accounting_period",
                                "applied_payments,contact,company",
                                "applied_payments,contact,company,accounting_period",
                                "applied_payments,line_items",
                                "applied_payments,line_items,accounting_period",
                                "applied_payments,line_items,company",
                                "applied_payments,line_items,company,accounting_period",
                                "applied_payments,line_items,contact",
                                "applied_payments,line_items,contact,accounting_period",
                                "applied_payments,line_items,contact,company",
                                "applied_payments,line_items,contact,company,accounting_period",
                                "applied_payments,line_items,tracking_categories",
                                "applied_payments,line_items,tracking_categories,accounting_period",
                                "applied_payments,line_items,tracking_categories,company",
                                "applied_payments,line_items,tracking_categories,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact",
                                "applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact,company",
                                "applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "applied_payments,tracking_categories",
                                "applied_payments,tracking_categories,accounting_period",
                                "applied_payments,tracking_categories,company",
                                "applied_payments,tracking_categories,company,accounting_period",
                                "applied_payments,tracking_categories,contact",
                                "applied_payments,tracking_categories,contact,accounting_period",
                                "applied_payments,tracking_categories,contact,company",
                                "applied_payments,tracking_categories,contact,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "line_items",
                                "line_items,accounting_period",
                                "line_items,company",
                                "line_items,company,accounting_period",
                                "line_items,contact",
                                "line_items,contact,accounting_period",
                                "line_items,contact,company",
                                "line_items,contact,company,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,company",
                                "line_items,tracking_categories,company,accounting_period",
                                "line_items,tracking_categories,contact",
                                "line_items,tracking_categories,contact,accounting_period",
                                "line_items,tracking_categories,contact,company",
                                "line_items,tracking_categories,contact,company,accounting_period",
                                "payments",
                                "payments,accounting_period",
                                "payments,applied_payments",
                                "payments,applied_payments,accounting_period",
                                "payments,applied_payments,company",
                                "payments,applied_payments,company,accounting_period",
                                "payments,applied_payments,contact",
                                "payments,applied_payments,contact,accounting_period",
                                "payments,applied_payments,contact,company",
                                "payments,applied_payments,contact,company,accounting_period",
                                "payments,applied_payments,line_items",
                                "payments,applied_payments,line_items,accounting_period",
                                "payments,applied_payments,line_items,company",
                                "payments,applied_payments,line_items,company,accounting_period",
                                "payments,applied_payments,line_items,contact",
                                "payments,applied_payments,line_items,contact,accounting_period",
                                "payments,applied_payments,line_items,contact,company",
                                "payments,applied_payments,line_items,contact,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories",
                                "payments,applied_payments,line_items,tracking_categories,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,company",
                                "payments,applied_payments,line_items,tracking_categories,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact",
                                "payments,applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact,company",
                                "payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,applied_payments,tracking_categories",
                                "payments,applied_payments,tracking_categories,accounting_period",
                                "payments,applied_payments,tracking_categories,company",
                                "payments,applied_payments,tracking_categories,company,accounting_period",
                                "payments,applied_payments,tracking_categories,contact",
                                "payments,applied_payments,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,tracking_categories,contact,company",
                                "payments,applied_payments,tracking_categories,contact,company,accounting_period",
                                "payments,company",
                                "payments,company,accounting_period",
                                "payments,contact",
                                "payments,contact,accounting_period",
                                "payments,contact,company",
                                "payments,contact,company,accounting_period",
                                "payments,line_items",
                                "payments,line_items,accounting_period",
                                "payments,line_items,company",
                                "payments,line_items,company,accounting_period",
                                "payments,line_items,contact",
                                "payments,line_items,contact,accounting_period",
                                "payments,line_items,contact,company",
                                "payments,line_items,contact,company,accounting_period",
                                "payments,line_items,tracking_categories",
                                "payments,line_items,tracking_categories,accounting_period",
                                "payments,line_items,tracking_categories,company",
                                "payments,line_items,tracking_categories,company,accounting_period",
                                "payments,line_items,tracking_categories,contact",
                                "payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,line_items,tracking_categories,contact,company",
                                "payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,tracking_categories",
                                "payments,tracking_categories,accounting_period",
                                "payments,tracking_categories,company",
                                "payments,tracking_categories,company,accounting_period",
                                "payments,tracking_categories,contact",
                                "payments,tracking_categories,contact,accounting_period",
                                "payments,tracking_categories,contact,company",
                                "payments,tracking_categories,contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandPayments,AppliedPayments,LineItems,TrackingCategories,Contact,Company,AccountingPeriod": {
                                "value": "payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "summary": "Expand Payments, Applied_payments, Line_items, Tracking_categories, Contact, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "status,type",
                                "type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus,Type": {
                                "value": "status,type",
                                "summary": "Original Enum Values Status, Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "status,type",
                                "type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus,Type": {
                                "value": "status,type",
                                "summary": "Original Enum Values Status, Type"
                            }
                        }
                    }
                ],
                "tags": [
                    "credit-notes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditNote"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/default-scopes": {
            "get": {
                "operationId": "default_scopes_retrieve",
                "description": "Get the default permissions for Merge Common Models and fields across all Linked Accounts of a given category. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes).",
                "tags": [
                    "scopes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/delete-account": {
            "post": {
                "operationId": "delete_account_delete",
                "description": "Delete a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "delete-account"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/expenses": {
            "get": {
                "operationId": "expenses_list",
                "description": "Returns a list of `Expense` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return expenses for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,accounting_period",
                                "account,company",
                                "account,company,accounting_period",
                                "account,contact",
                                "account,contact,accounting_period",
                                "account,contact,company",
                                "account,contact,company,accounting_period",
                                "accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,account",
                                "tracking_categories,account,accounting_period",
                                "tracking_categories,account,company",
                                "tracking_categories,account,company,accounting_period",
                                "tracking_categories,account,contact",
                                "tracking_categories,account,contact,accounting_period",
                                "tracking_categories,account,contact,company",
                                "tracking_categories,account,contact,company,accounting_period",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTrackingCategories,Account,Contact,Company,AccountingPeriod": {
                                "value": "tracking_categories,account,contact,company,accounting_period",
                                "summary": "Expand Tracking_categories, Account, Contact, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    }
                ],
                "tags": [
                    "expenses"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedExpenseList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "expenses_create",
                "description": "Creates an `Expense` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "expenses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ExpenseEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExpenseResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/expenses/{id}": {
            "get": {
                "operationId": "expenses_retrieve",
                "description": "Returns an `Expense` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,accounting_period",
                                "account,company",
                                "account,company,accounting_period",
                                "account,contact",
                                "account,contact,accounting_period",
                                "account,contact,company",
                                "account,contact,company,accounting_period",
                                "accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,account",
                                "tracking_categories,account,accounting_period",
                                "tracking_categories,account,company",
                                "tracking_categories,account,company,accounting_period",
                                "tracking_categories,account,contact",
                                "tracking_categories,account,contact,accounting_period",
                                "tracking_categories,account,contact,company",
                                "tracking_categories,account,contact,company,accounting_period",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTrackingCategories,Account,Contact,Company,AccountingPeriod": {
                                "value": "tracking_categories,account,contact,company,accounting_period",
                                "summary": "Expand Tracking_categories, Account, Contact, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "expenses"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Expense"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/expenses/meta/post": {
            "get": {
                "operationId": "expenses_meta_post_retrieve",
                "description": "Returns metadata for `Expense` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "expenses"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/field-mappings": {
            "get": {
                "operationId": "field_mappings_retrieve",
                "description": "Get all Field Mappings for this Linked Account. Field Mappings are mappings between third-party Remote Fields and user defined Merge fields. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingApiInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "field_mappings_create",
                "description": "Create new Field Mappings that will be available after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateFieldMappingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/field-mappings/{field_mapping_id}": {
            "patch": {
                "operationId": "field_mappings_partial_update",
                "description": "Create or update existing Field Mappings for a Linked Account. Changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "field_mapping_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEditFieldMappingRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "delete": {
                "operationId": "field_mappings_destroy",
                "description": "Deletes Field Mappings for a Linked Account. All data related to this Field Mapping will be deleted and these changes will be reflected after the next scheduled sync. This will cause the next sync for this Linked Account to sync **ALL** data from start.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "field_mapping_id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FieldMappingInstanceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/generate-key": {
            "post": {
                "operationId": "generate_key_create",
                "description": "Create a remote key.",
                "tags": [
                    "generate-key"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateRemoteKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/income-statements": {
            "get": {
                "operationId": "income_statements_list",
                "description": "Returns a list of `IncomeStatement` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return income statements for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "income-statements"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIncomeStatementList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/income-statements/{id}": {
            "get": {
                "operationId": "income_statements_retrieve",
                "description": "Returns an `IncomeStatement` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "income-statements"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncomeStatement"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/invoices": {
            "get": {
                "operationId": "invoices_list",
                "description": "Returns a list of `Invoice` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return invoices for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "contact_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return invoices for this contact.",
                        "examples": {
                            "ContactId": {
                                "summary": "contact_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "applied_payments",
                                "applied_payments,accounting_period",
                                "applied_payments,company",
                                "applied_payments,company,accounting_period",
                                "applied_payments,contact",
                                "applied_payments,contact,accounting_period",
                                "applied_payments,contact,company",
                                "applied_payments,contact,company,accounting_period",
                                "applied_payments,line_items",
                                "applied_payments,line_items,accounting_period",
                                "applied_payments,line_items,company",
                                "applied_payments,line_items,company,accounting_period",
                                "applied_payments,line_items,contact",
                                "applied_payments,line_items,contact,accounting_period",
                                "applied_payments,line_items,contact,company",
                                "applied_payments,line_items,contact,company,accounting_period",
                                "applied_payments,line_items,purchase_orders",
                                "applied_payments,line_items,purchase_orders,accounting_period",
                                "applied_payments,line_items,purchase_orders,company",
                                "applied_payments,line_items,purchase_orders,company,accounting_period",
                                "applied_payments,line_items,purchase_orders,contact",
                                "applied_payments,line_items,purchase_orders,contact,accounting_period",
                                "applied_payments,line_items,purchase_orders,contact,company",
                                "applied_payments,line_items,purchase_orders,contact,company,accounting_period",
                                "applied_payments,line_items,tracking_categories",
                                "applied_payments,line_items,tracking_categories,accounting_period",
                                "applied_payments,line_items,tracking_categories,company",
                                "applied_payments,line_items,tracking_categories,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact",
                                "applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact,company",
                                "applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders",
                                "applied_payments,line_items,tracking_categories,purchase_orders,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders,company",
                                "applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact,company",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "applied_payments,purchase_orders",
                                "applied_payments,purchase_orders,accounting_period",
                                "applied_payments,purchase_orders,company",
                                "applied_payments,purchase_orders,company,accounting_period",
                                "applied_payments,purchase_orders,contact",
                                "applied_payments,purchase_orders,contact,accounting_period",
                                "applied_payments,purchase_orders,contact,company",
                                "applied_payments,purchase_orders,contact,company,accounting_period",
                                "applied_payments,tracking_categories",
                                "applied_payments,tracking_categories,accounting_period",
                                "applied_payments,tracking_categories,company",
                                "applied_payments,tracking_categories,company,accounting_period",
                                "applied_payments,tracking_categories,contact",
                                "applied_payments,tracking_categories,contact,accounting_period",
                                "applied_payments,tracking_categories,contact,company",
                                "applied_payments,tracking_categories,contact,company,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders",
                                "applied_payments,tracking_categories,purchase_orders,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders,company",
                                "applied_payments,tracking_categories,purchase_orders,company,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders,contact",
                                "applied_payments,tracking_categories,purchase_orders,contact,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders,contact,company",
                                "applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "line_items",
                                "line_items,accounting_period",
                                "line_items,company",
                                "line_items,company,accounting_period",
                                "line_items,contact",
                                "line_items,contact,accounting_period",
                                "line_items,contact,company",
                                "line_items,contact,company,accounting_period",
                                "line_items,purchase_orders",
                                "line_items,purchase_orders,accounting_period",
                                "line_items,purchase_orders,company",
                                "line_items,purchase_orders,company,accounting_period",
                                "line_items,purchase_orders,contact",
                                "line_items,purchase_orders,contact,accounting_period",
                                "line_items,purchase_orders,contact,company",
                                "line_items,purchase_orders,contact,company,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,company",
                                "line_items,tracking_categories,company,accounting_period",
                                "line_items,tracking_categories,contact",
                                "line_items,tracking_categories,contact,accounting_period",
                                "line_items,tracking_categories,contact,company",
                                "line_items,tracking_categories,contact,company,accounting_period",
                                "line_items,tracking_categories,purchase_orders",
                                "line_items,tracking_categories,purchase_orders,accounting_period",
                                "line_items,tracking_categories,purchase_orders,company",
                                "line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "line_items,tracking_categories,purchase_orders,contact",
                                "line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "line_items,tracking_categories,purchase_orders,contact,company",
                                "line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments",
                                "payments,accounting_period",
                                "payments,applied_payments",
                                "payments,applied_payments,accounting_period",
                                "payments,applied_payments,company",
                                "payments,applied_payments,company,accounting_period",
                                "payments,applied_payments,contact",
                                "payments,applied_payments,contact,accounting_period",
                                "payments,applied_payments,contact,company",
                                "payments,applied_payments,contact,company,accounting_period",
                                "payments,applied_payments,line_items",
                                "payments,applied_payments,line_items,accounting_period",
                                "payments,applied_payments,line_items,company",
                                "payments,applied_payments,line_items,company,accounting_period",
                                "payments,applied_payments,line_items,contact",
                                "payments,applied_payments,line_items,contact,accounting_period",
                                "payments,applied_payments,line_items,contact,company",
                                "payments,applied_payments,line_items,contact,company,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders",
                                "payments,applied_payments,line_items,purchase_orders,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders,company",
                                "payments,applied_payments,line_items,purchase_orders,company,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders,contact",
                                "payments,applied_payments,line_items,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders,contact,company",
                                "payments,applied_payments,line_items,purchase_orders,contact,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories",
                                "payments,applied_payments,line_items,tracking_categories,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,company",
                                "payments,applied_payments,line_items,tracking_categories,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact",
                                "payments,applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact,company",
                                "payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,company",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments,applied_payments,purchase_orders",
                                "payments,applied_payments,purchase_orders,accounting_period",
                                "payments,applied_payments,purchase_orders,company",
                                "payments,applied_payments,purchase_orders,company,accounting_period",
                                "payments,applied_payments,purchase_orders,contact",
                                "payments,applied_payments,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,purchase_orders,contact,company",
                                "payments,applied_payments,purchase_orders,contact,company,accounting_period",
                                "payments,applied_payments,tracking_categories",
                                "payments,applied_payments,tracking_categories,accounting_period",
                                "payments,applied_payments,tracking_categories,company",
                                "payments,applied_payments,tracking_categories,company,accounting_period",
                                "payments,applied_payments,tracking_categories,contact",
                                "payments,applied_payments,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,tracking_categories,contact,company",
                                "payments,applied_payments,tracking_categories,contact,company,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders",
                                "payments,applied_payments,tracking_categories,purchase_orders,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders,company",
                                "payments,applied_payments,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact,company",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments,company",
                                "payments,company,accounting_period",
                                "payments,contact",
                                "payments,contact,accounting_period",
                                "payments,contact,company",
                                "payments,contact,company,accounting_period",
                                "payments,line_items",
                                "payments,line_items,accounting_period",
                                "payments,line_items,company",
                                "payments,line_items,company,accounting_period",
                                "payments,line_items,contact",
                                "payments,line_items,contact,accounting_period",
                                "payments,line_items,contact,company",
                                "payments,line_items,contact,company,accounting_period",
                                "payments,line_items,purchase_orders",
                                "payments,line_items,purchase_orders,accounting_period",
                                "payments,line_items,purchase_orders,company",
                                "payments,line_items,purchase_orders,company,accounting_period",
                                "payments,line_items,purchase_orders,contact",
                                "payments,line_items,purchase_orders,contact,accounting_period",
                                "payments,line_items,purchase_orders,contact,company",
                                "payments,line_items,purchase_orders,contact,company,accounting_period",
                                "payments,line_items,tracking_categories",
                                "payments,line_items,tracking_categories,accounting_period",
                                "payments,line_items,tracking_categories,company",
                                "payments,line_items,tracking_categories,company,accounting_period",
                                "payments,line_items,tracking_categories,contact",
                                "payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,line_items,tracking_categories,contact,company",
                                "payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders",
                                "payments,line_items,tracking_categories,purchase_orders,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders,company",
                                "payments,line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders,contact",
                                "payments,line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders,contact,company",
                                "payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments,purchase_orders",
                                "payments,purchase_orders,accounting_period",
                                "payments,purchase_orders,company",
                                "payments,purchase_orders,company,accounting_period",
                                "payments,purchase_orders,contact",
                                "payments,purchase_orders,contact,accounting_period",
                                "payments,purchase_orders,contact,company",
                                "payments,purchase_orders,contact,company,accounting_period",
                                "payments,tracking_categories",
                                "payments,tracking_categories,accounting_period",
                                "payments,tracking_categories,company",
                                "payments,tracking_categories,company,accounting_period",
                                "payments,tracking_categories,contact",
                                "payments,tracking_categories,contact,accounting_period",
                                "payments,tracking_categories,contact,company",
                                "payments,tracking_categories,contact,company,accounting_period",
                                "payments,tracking_categories,purchase_orders",
                                "payments,tracking_categories,purchase_orders,accounting_period",
                                "payments,tracking_categories,purchase_orders,company",
                                "payments,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,tracking_categories,purchase_orders,contact",
                                "payments,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,tracking_categories,purchase_orders,contact,company",
                                "payments,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "purchase_orders",
                                "purchase_orders,accounting_period",
                                "purchase_orders,company",
                                "purchase_orders,company,accounting_period",
                                "purchase_orders,contact",
                                "purchase_orders,contact,accounting_period",
                                "purchase_orders,contact,company",
                                "purchase_orders,contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period",
                                "tracking_categories,purchase_orders",
                                "tracking_categories,purchase_orders,accounting_period",
                                "tracking_categories,purchase_orders,company",
                                "tracking_categories,purchase_orders,company,accounting_period",
                                "tracking_categories,purchase_orders,contact",
                                "tracking_categories,purchase_orders,contact,accounting_period",
                                "tracking_categories,purchase_orders,contact,company",
                                "tracking_categories,purchase_orders,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandPayments,AppliedPayments,LineItems,TrackingCategories,PurchaseOrders,Contact,Company,AccountingPeriod": {
                                "value": "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "summary": "Expand Payments, Applied_payments, Line_items, Tracking_categories, Purchase_orders, Contact, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "issue_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "issue_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesType": {
                                "value": "type",
                                "summary": "Original Enum Values Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesType": {
                                "value": "type",
                                "summary": "Original Enum Values Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "ACCOUNTS_PAYABLE",
                                "ACCOUNTS_RECEIVABLE"
                            ]
                        },
                        "description": "If provided, will only return Invoices with this type\n\n* `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE\n* `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE"
                    }
                ],
                "tags": [
                    "invoices"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedInvoiceList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "invoices_create",
                "description": "Creates an `Invoice` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "invoices"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InvoiceEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvoiceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC_BETA"
            }
        },
        "/invoices/{id}": {
            "get": {
                "operationId": "invoices_retrieve",
                "description": "Returns an `Invoice` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "applied_payments",
                                "applied_payments,accounting_period",
                                "applied_payments,company",
                                "applied_payments,company,accounting_period",
                                "applied_payments,contact",
                                "applied_payments,contact,accounting_period",
                                "applied_payments,contact,company",
                                "applied_payments,contact,company,accounting_period",
                                "applied_payments,line_items",
                                "applied_payments,line_items,accounting_period",
                                "applied_payments,line_items,company",
                                "applied_payments,line_items,company,accounting_period",
                                "applied_payments,line_items,contact",
                                "applied_payments,line_items,contact,accounting_period",
                                "applied_payments,line_items,contact,company",
                                "applied_payments,line_items,contact,company,accounting_period",
                                "applied_payments,line_items,purchase_orders",
                                "applied_payments,line_items,purchase_orders,accounting_period",
                                "applied_payments,line_items,purchase_orders,company",
                                "applied_payments,line_items,purchase_orders,company,accounting_period",
                                "applied_payments,line_items,purchase_orders,contact",
                                "applied_payments,line_items,purchase_orders,contact,accounting_period",
                                "applied_payments,line_items,purchase_orders,contact,company",
                                "applied_payments,line_items,purchase_orders,contact,company,accounting_period",
                                "applied_payments,line_items,tracking_categories",
                                "applied_payments,line_items,tracking_categories,accounting_period",
                                "applied_payments,line_items,tracking_categories,company",
                                "applied_payments,line_items,tracking_categories,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact",
                                "applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "applied_payments,line_items,tracking_categories,contact,company",
                                "applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders",
                                "applied_payments,line_items,tracking_categories,purchase_orders,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders,company",
                                "applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact,company",
                                "applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "applied_payments,purchase_orders",
                                "applied_payments,purchase_orders,accounting_period",
                                "applied_payments,purchase_orders,company",
                                "applied_payments,purchase_orders,company,accounting_period",
                                "applied_payments,purchase_orders,contact",
                                "applied_payments,purchase_orders,contact,accounting_period",
                                "applied_payments,purchase_orders,contact,company",
                                "applied_payments,purchase_orders,contact,company,accounting_period",
                                "applied_payments,tracking_categories",
                                "applied_payments,tracking_categories,accounting_period",
                                "applied_payments,tracking_categories,company",
                                "applied_payments,tracking_categories,company,accounting_period",
                                "applied_payments,tracking_categories,contact",
                                "applied_payments,tracking_categories,contact,accounting_period",
                                "applied_payments,tracking_categories,contact,company",
                                "applied_payments,tracking_categories,contact,company,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders",
                                "applied_payments,tracking_categories,purchase_orders,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders,company",
                                "applied_payments,tracking_categories,purchase_orders,company,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders,contact",
                                "applied_payments,tracking_categories,purchase_orders,contact,accounting_period",
                                "applied_payments,tracking_categories,purchase_orders,contact,company",
                                "applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "line_items",
                                "line_items,accounting_period",
                                "line_items,company",
                                "line_items,company,accounting_period",
                                "line_items,contact",
                                "line_items,contact,accounting_period",
                                "line_items,contact,company",
                                "line_items,contact,company,accounting_period",
                                "line_items,purchase_orders",
                                "line_items,purchase_orders,accounting_period",
                                "line_items,purchase_orders,company",
                                "line_items,purchase_orders,company,accounting_period",
                                "line_items,purchase_orders,contact",
                                "line_items,purchase_orders,contact,accounting_period",
                                "line_items,purchase_orders,contact,company",
                                "line_items,purchase_orders,contact,company,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,company",
                                "line_items,tracking_categories,company,accounting_period",
                                "line_items,tracking_categories,contact",
                                "line_items,tracking_categories,contact,accounting_period",
                                "line_items,tracking_categories,contact,company",
                                "line_items,tracking_categories,contact,company,accounting_period",
                                "line_items,tracking_categories,purchase_orders",
                                "line_items,tracking_categories,purchase_orders,accounting_period",
                                "line_items,tracking_categories,purchase_orders,company",
                                "line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "line_items,tracking_categories,purchase_orders,contact",
                                "line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "line_items,tracking_categories,purchase_orders,contact,company",
                                "line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments",
                                "payments,accounting_period",
                                "payments,applied_payments",
                                "payments,applied_payments,accounting_period",
                                "payments,applied_payments,company",
                                "payments,applied_payments,company,accounting_period",
                                "payments,applied_payments,contact",
                                "payments,applied_payments,contact,accounting_period",
                                "payments,applied_payments,contact,company",
                                "payments,applied_payments,contact,company,accounting_period",
                                "payments,applied_payments,line_items",
                                "payments,applied_payments,line_items,accounting_period",
                                "payments,applied_payments,line_items,company",
                                "payments,applied_payments,line_items,company,accounting_period",
                                "payments,applied_payments,line_items,contact",
                                "payments,applied_payments,line_items,contact,accounting_period",
                                "payments,applied_payments,line_items,contact,company",
                                "payments,applied_payments,line_items,contact,company,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders",
                                "payments,applied_payments,line_items,purchase_orders,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders,company",
                                "payments,applied_payments,line_items,purchase_orders,company,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders,contact",
                                "payments,applied_payments,line_items,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,line_items,purchase_orders,contact,company",
                                "payments,applied_payments,line_items,purchase_orders,contact,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories",
                                "payments,applied_payments,line_items,tracking_categories,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,company",
                                "payments,applied_payments,line_items,tracking_categories,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact",
                                "payments,applied_payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,contact,company",
                                "payments,applied_payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,company",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company",
                                "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments,applied_payments,purchase_orders",
                                "payments,applied_payments,purchase_orders,accounting_period",
                                "payments,applied_payments,purchase_orders,company",
                                "payments,applied_payments,purchase_orders,company,accounting_period",
                                "payments,applied_payments,purchase_orders,contact",
                                "payments,applied_payments,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,purchase_orders,contact,company",
                                "payments,applied_payments,purchase_orders,contact,company,accounting_period",
                                "payments,applied_payments,tracking_categories",
                                "payments,applied_payments,tracking_categories,accounting_period",
                                "payments,applied_payments,tracking_categories,company",
                                "payments,applied_payments,tracking_categories,company,accounting_period",
                                "payments,applied_payments,tracking_categories,contact",
                                "payments,applied_payments,tracking_categories,contact,accounting_period",
                                "payments,applied_payments,tracking_categories,contact,company",
                                "payments,applied_payments,tracking_categories,contact,company,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders",
                                "payments,applied_payments,tracking_categories,purchase_orders,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders,company",
                                "payments,applied_payments,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact,company",
                                "payments,applied_payments,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments,company",
                                "payments,company,accounting_period",
                                "payments,contact",
                                "payments,contact,accounting_period",
                                "payments,contact,company",
                                "payments,contact,company,accounting_period",
                                "payments,line_items",
                                "payments,line_items,accounting_period",
                                "payments,line_items,company",
                                "payments,line_items,company,accounting_period",
                                "payments,line_items,contact",
                                "payments,line_items,contact,accounting_period",
                                "payments,line_items,contact,company",
                                "payments,line_items,contact,company,accounting_period",
                                "payments,line_items,purchase_orders",
                                "payments,line_items,purchase_orders,accounting_period",
                                "payments,line_items,purchase_orders,company",
                                "payments,line_items,purchase_orders,company,accounting_period",
                                "payments,line_items,purchase_orders,contact",
                                "payments,line_items,purchase_orders,contact,accounting_period",
                                "payments,line_items,purchase_orders,contact,company",
                                "payments,line_items,purchase_orders,contact,company,accounting_period",
                                "payments,line_items,tracking_categories",
                                "payments,line_items,tracking_categories,accounting_period",
                                "payments,line_items,tracking_categories,company",
                                "payments,line_items,tracking_categories,company,accounting_period",
                                "payments,line_items,tracking_categories,contact",
                                "payments,line_items,tracking_categories,contact,accounting_period",
                                "payments,line_items,tracking_categories,contact,company",
                                "payments,line_items,tracking_categories,contact,company,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders",
                                "payments,line_items,tracking_categories,purchase_orders,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders,company",
                                "payments,line_items,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders,contact",
                                "payments,line_items,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,line_items,tracking_categories,purchase_orders,contact,company",
                                "payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "payments,purchase_orders",
                                "payments,purchase_orders,accounting_period",
                                "payments,purchase_orders,company",
                                "payments,purchase_orders,company,accounting_period",
                                "payments,purchase_orders,contact",
                                "payments,purchase_orders,contact,accounting_period",
                                "payments,purchase_orders,contact,company",
                                "payments,purchase_orders,contact,company,accounting_period",
                                "payments,tracking_categories",
                                "payments,tracking_categories,accounting_period",
                                "payments,tracking_categories,company",
                                "payments,tracking_categories,company,accounting_period",
                                "payments,tracking_categories,contact",
                                "payments,tracking_categories,contact,accounting_period",
                                "payments,tracking_categories,contact,company",
                                "payments,tracking_categories,contact,company,accounting_period",
                                "payments,tracking_categories,purchase_orders",
                                "payments,tracking_categories,purchase_orders,accounting_period",
                                "payments,tracking_categories,purchase_orders,company",
                                "payments,tracking_categories,purchase_orders,company,accounting_period",
                                "payments,tracking_categories,purchase_orders,contact",
                                "payments,tracking_categories,purchase_orders,contact,accounting_period",
                                "payments,tracking_categories,purchase_orders,contact,company",
                                "payments,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "purchase_orders",
                                "purchase_orders,accounting_period",
                                "purchase_orders,company",
                                "purchase_orders,company,accounting_period",
                                "purchase_orders,contact",
                                "purchase_orders,contact,accounting_period",
                                "purchase_orders,contact,company",
                                "purchase_orders,contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period",
                                "tracking_categories,purchase_orders",
                                "tracking_categories,purchase_orders,accounting_period",
                                "tracking_categories,purchase_orders,company",
                                "tracking_categories,purchase_orders,company,accounting_period",
                                "tracking_categories,purchase_orders,contact",
                                "tracking_categories,purchase_orders,contact,accounting_period",
                                "tracking_categories,purchase_orders,contact,company",
                                "tracking_categories,purchase_orders,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandPayments,AppliedPayments,LineItems,TrackingCategories,PurchaseOrders,Contact,Company,AccountingPeriod": {
                                "value": "payments,applied_payments,line_items,tracking_categories,purchase_orders,contact,company,accounting_period",
                                "summary": "Expand Payments, Applied_payments, Line_items, Tracking_categories, Purchase_orders, Contact, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "type"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesType": {
                                "value": "type",
                                "summary": "Original Enum Values Type"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "type"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesType": {
                                "value": "type",
                                "summary": "Original Enum Values Type"
                            }
                        }
                    }
                ],
                "tags": [
                    "invoices"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invoice"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/invoices/meta/post": {
            "get": {
                "operationId": "invoices_meta_post_retrieve",
                "description": "Returns metadata for `Invoice` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "invoices"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/issues": {
            "get": {
                "operationId": "issues_list",
                "description": "Gets issues.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account_token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include issues whose most recent action occurred before this time"
                    },
                    {
                        "in": "query",
                        "name": "end_user_organization_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "first_incident_time_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose first incident time was after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "first_incident_time_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose first incident time was before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "include_muted",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If true, will include muted issues"
                    },
                    {
                        "in": "query",
                        "name": "integration_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "last_incident_time_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose last incident time was after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "last_incident_time_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return issues whose last incident time was before this datetime."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include issues whose most recent action occurred after this time"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ONGOING",
                                "RESOLVED"
                            ]
                        },
                        "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED"
                    }
                ],
                "tags": [
                    "issues"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIssueList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/issues/{id}": {
            "get": {
                "operationId": "issues_retrieve",
                "description": "Get a specific issue.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "issues"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/items": {
            "get": {
                "operationId": "items_list",
                "description": "Returns a list of `Item` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return items for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company",
                                "purchase_account",
                                "purchase_account,company",
                                "purchase_account,sales_account",
                                "purchase_account,sales_account,company",
                                "sales_account",
                                "sales_account,company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandPurchaseAccount,SalesAccount,Company": {
                                "value": "purchase_account,sales_account,company",
                                "summary": "Expand Purchase_account, Sales_account, Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "items"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedItemList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/items/{id}": {
            "get": {
                "operationId": "items_retrieve",
                "description": "Returns an `Item` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company",
                                "purchase_account",
                                "purchase_account,company",
                                "purchase_account,sales_account",
                                "purchase_account,sales_account,company",
                                "sales_account",
                                "sales_account,company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandPurchaseAccount,SalesAccount,Company": {
                                "value": "purchase_account,sales_account,company",
                                "summary": "Expand Purchase_account, Sales_account, Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "items"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Item"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/journal-entries": {
            "get": {
                "operationId": "journal_entries_list",
                "description": "Returns a list of `JournalEntry` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return journal entries for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "applied_payments",
                                "applied_payments,accounting_period",
                                "applied_payments,company",
                                "applied_payments,company,accounting_period",
                                "applied_payments,tracking_categories",
                                "applied_payments,tracking_categories,accounting_period",
                                "applied_payments,tracking_categories,company",
                                "applied_payments,tracking_categories,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "lines",
                                "lines,accounting_period",
                                "lines,applied_payments",
                                "lines,applied_payments,accounting_period",
                                "lines,applied_payments,company",
                                "lines,applied_payments,company,accounting_period",
                                "lines,applied_payments,tracking_categories",
                                "lines,applied_payments,tracking_categories,accounting_period",
                                "lines,applied_payments,tracking_categories,company",
                                "lines,applied_payments,tracking_categories,company,accounting_period",
                                "lines,company",
                                "lines,company,accounting_period",
                                "lines,payments",
                                "lines,payments,accounting_period",
                                "lines,payments,applied_payments",
                                "lines,payments,applied_payments,accounting_period",
                                "lines,payments,applied_payments,company",
                                "lines,payments,applied_payments,company,accounting_period",
                                "lines,payments,applied_payments,tracking_categories",
                                "lines,payments,applied_payments,tracking_categories,accounting_period",
                                "lines,payments,applied_payments,tracking_categories,company",
                                "lines,payments,applied_payments,tracking_categories,company,accounting_period",
                                "lines,payments,company",
                                "lines,payments,company,accounting_period",
                                "lines,payments,tracking_categories",
                                "lines,payments,tracking_categories,accounting_period",
                                "lines,payments,tracking_categories,company",
                                "lines,payments,tracking_categories,company,accounting_period",
                                "lines,tracking_categories",
                                "lines,tracking_categories,accounting_period",
                                "lines,tracking_categories,company",
                                "lines,tracking_categories,company,accounting_period",
                                "payments",
                                "payments,accounting_period",
                                "payments,applied_payments",
                                "payments,applied_payments,accounting_period",
                                "payments,applied_payments,company",
                                "payments,applied_payments,company,accounting_period",
                                "payments,applied_payments,tracking_categories",
                                "payments,applied_payments,tracking_categories,accounting_period",
                                "payments,applied_payments,tracking_categories,company",
                                "payments,applied_payments,tracking_categories,company,accounting_period",
                                "payments,company",
                                "payments,company,accounting_period",
                                "payments,tracking_categories",
                                "payments,tracking_categories,accounting_period",
                                "payments,tracking_categories,company",
                                "payments,tracking_categories,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLines,Payments,AppliedPayments,TrackingCategories,Company,AccountingPeriod": {
                                "value": "lines,payments,applied_payments,tracking_categories,company,accounting_period",
                                "summary": "Expand Lines, Payments, Applied_payments, Tracking_categories, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    }
                ],
                "tags": [
                    "journal-entries"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJournalEntryList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "journal_entries_create",
                "description": "Creates a `JournalEntry` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "journal-entries"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JournalEntryEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JournalEntryEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JournalEntryEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JournalEntryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/journal-entries/{id}": {
            "get": {
                "operationId": "journal_entries_retrieve",
                "description": "Returns a `JournalEntry` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "applied_payments",
                                "applied_payments,accounting_period",
                                "applied_payments,company",
                                "applied_payments,company,accounting_period",
                                "applied_payments,tracking_categories",
                                "applied_payments,tracking_categories,accounting_period",
                                "applied_payments,tracking_categories,company",
                                "applied_payments,tracking_categories,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "lines",
                                "lines,accounting_period",
                                "lines,applied_payments",
                                "lines,applied_payments,accounting_period",
                                "lines,applied_payments,company",
                                "lines,applied_payments,company,accounting_period",
                                "lines,applied_payments,tracking_categories",
                                "lines,applied_payments,tracking_categories,accounting_period",
                                "lines,applied_payments,tracking_categories,company",
                                "lines,applied_payments,tracking_categories,company,accounting_period",
                                "lines,company",
                                "lines,company,accounting_period",
                                "lines,payments",
                                "lines,payments,accounting_period",
                                "lines,payments,applied_payments",
                                "lines,payments,applied_payments,accounting_period",
                                "lines,payments,applied_payments,company",
                                "lines,payments,applied_payments,company,accounting_period",
                                "lines,payments,applied_payments,tracking_categories",
                                "lines,payments,applied_payments,tracking_categories,accounting_period",
                                "lines,payments,applied_payments,tracking_categories,company",
                                "lines,payments,applied_payments,tracking_categories,company,accounting_period",
                                "lines,payments,company",
                                "lines,payments,company,accounting_period",
                                "lines,payments,tracking_categories",
                                "lines,payments,tracking_categories,accounting_period",
                                "lines,payments,tracking_categories,company",
                                "lines,payments,tracking_categories,company,accounting_period",
                                "lines,tracking_categories",
                                "lines,tracking_categories,accounting_period",
                                "lines,tracking_categories,company",
                                "lines,tracking_categories,company,accounting_period",
                                "payments",
                                "payments,accounting_period",
                                "payments,applied_payments",
                                "payments,applied_payments,accounting_period",
                                "payments,applied_payments,company",
                                "payments,applied_payments,company,accounting_period",
                                "payments,applied_payments,tracking_categories",
                                "payments,applied_payments,tracking_categories,accounting_period",
                                "payments,applied_payments,tracking_categories,company",
                                "payments,applied_payments,tracking_categories,company,accounting_period",
                                "payments,company",
                                "payments,company,accounting_period",
                                "payments,tracking_categories",
                                "payments,tracking_categories,accounting_period",
                                "payments,tracking_categories,company",
                                "payments,tracking_categories,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLines,Payments,AppliedPayments,TrackingCategories,Company,AccountingPeriod": {
                                "value": "lines,payments,applied_payments,tracking_categories,company,accounting_period",
                                "summary": "Expand Lines, Payments, Applied_payments, Tracking_categories, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "journal-entries"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JournalEntry"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/journal-entries/meta/post": {
            "get": {
                "operationId": "journal_entries_meta_post_retrieve",
                "description": "Returns metadata for `JournalEntry` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "journal-entries"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/link-token": {
            "post": {
                "operationId": "link_token_create",
                "description": "Creates a link token to be used when linking a new end user.",
                "tags": [
                    "link-token"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EndUserDetailsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkToken"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/linked-account-scopes": {
            "get": {
                "operationId": "linked_account_scopes_retrieve",
                "description": "Get all available permissions for Merge Common Models and fields for a single Linked Account. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "scopes"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "linked_account_scopes_create",
                "description": "Update permissions for any Common Model or field for a single Linked Account. Any Scopes not set in this POST request will inherit the default Scopes. [Learn more](https://help.merge.dev/en/articles/8828211-common-model-and-field-scopes)",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "scopes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountCommonModelScopeDeserializerRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommonModelScopeAPI"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/linked-accounts": {
            "get": {
                "operationId": "linked_accounts_list",
                "description": "List linked accounts for your organization.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                                "accounting",
                                "ats",
                                "crm",
                                "datawarehouse",
                                "filestorage",
                                "hris",
                                "mktg",
                                "ticketing"
                            ]
                        },
                        "description": "Options: `accounting`, `ats`, `crm`, `filestorage`, `hris`, `mktg`, `ticketing`\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage\n* `datawarehouse` - datawarehouse"
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_user_email_address",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given email address."
                    },
                    {
                        "in": "query",
                        "name": "end_user_organization_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given organization name."
                    },
                    {
                        "in": "query",
                        "name": "end_user_origin_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given origin ID."
                    },
                    {
                        "in": "query",
                        "name": "end_user_origin_ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once."
                    },
                    {
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once."
                    },
                    {
                        "in": "query",
                        "name": "include_duplicates",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account."
                    },
                    {
                        "in": "query",
                        "name": "integration_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return linked accounts associated with the given integration name."
                    },
                    {
                        "in": "query",
                        "name": "is_test_account",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`"
                    }
                ],
                "tags": [
                    "linked-accounts"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountDetailsAndActionsList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/passthrough": {
            "post": {
                "operationId": "passthrough_create",
                "description": "Pull data from an endpoint not currently supported by Merge.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "passthrough"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DataPassthroughRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/payments": {
            "get": {
                "operationId": "payments_list",
                "description": "Returns a list of `Payment` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "account_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return payments for this account.",
                        "examples": {
                            "AccountId": {
                                "summary": "account_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return payments for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "contact_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return payments for this contact.",
                        "examples": {
                            "ContactId": {
                                "summary": "contact_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,accounting_period",
                                "account,company",
                                "account,company,accounting_period",
                                "accounting_period",
                                "applied_to_lines",
                                "applied_to_lines,account",
                                "applied_to_lines,account,accounting_period",
                                "applied_to_lines,account,company",
                                "applied_to_lines,account,company,accounting_period",
                                "applied_to_lines,accounting_period",
                                "applied_to_lines,company",
                                "applied_to_lines,company,accounting_period",
                                "applied_to_lines,contact",
                                "applied_to_lines,contact,account",
                                "applied_to_lines,contact,account,accounting_period",
                                "applied_to_lines,contact,account,company",
                                "applied_to_lines,contact,account,company,accounting_period",
                                "applied_to_lines,contact,accounting_period",
                                "applied_to_lines,contact,company",
                                "applied_to_lines,contact,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,account",
                                "contact,account,accounting_period",
                                "contact,account,company",
                                "contact,account,company,accounting_period",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,account",
                                "tracking_categories,account,accounting_period",
                                "tracking_categories,account,company",
                                "tracking_categories,account,company,accounting_period",
                                "tracking_categories,accounting_period",
                                "tracking_categories,applied_to_lines",
                                "tracking_categories,applied_to_lines,account",
                                "tracking_categories,applied_to_lines,account,accounting_period",
                                "tracking_categories,applied_to_lines,account,company",
                                "tracking_categories,applied_to_lines,account,company,accounting_period",
                                "tracking_categories,applied_to_lines,accounting_period",
                                "tracking_categories,applied_to_lines,company",
                                "tracking_categories,applied_to_lines,company,accounting_period",
                                "tracking_categories,applied_to_lines,contact",
                                "tracking_categories,applied_to_lines,contact,account",
                                "tracking_categories,applied_to_lines,contact,account,accounting_period",
                                "tracking_categories,applied_to_lines,contact,account,company",
                                "tracking_categories,applied_to_lines,contact,account,company,accounting_period",
                                "tracking_categories,applied_to_lines,contact,accounting_period",
                                "tracking_categories,applied_to_lines,contact,company",
                                "tracking_categories,applied_to_lines,contact,company,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,account",
                                "tracking_categories,contact,account,accounting_period",
                                "tracking_categories,contact,account,company",
                                "tracking_categories,contact,account,company,accounting_period",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTrackingCategories,AppliedToLines,Contact,Account,Company,AccountingPeriod": {
                                "value": "tracking_categories,applied_to_lines,contact,account,company,accounting_period",
                                "summary": "Expand Tracking_categories, Applied_to_lines, Contact, Account, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    }
                ],
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPaymentList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "payments_create",
                "description": "Creates a `Payment` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "payments"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/payments/{id}": {
            "get": {
                "operationId": "payments_retrieve",
                "description": "Returns a `Payment` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,accounting_period",
                                "account,company",
                                "account,company,accounting_period",
                                "accounting_period",
                                "applied_to_lines",
                                "applied_to_lines,account",
                                "applied_to_lines,account,accounting_period",
                                "applied_to_lines,account,company",
                                "applied_to_lines,account,company,accounting_period",
                                "applied_to_lines,accounting_period",
                                "applied_to_lines,company",
                                "applied_to_lines,company,accounting_period",
                                "applied_to_lines,contact",
                                "applied_to_lines,contact,account",
                                "applied_to_lines,contact,account,accounting_period",
                                "applied_to_lines,contact,account,company",
                                "applied_to_lines,contact,account,company,accounting_period",
                                "applied_to_lines,contact,accounting_period",
                                "applied_to_lines,contact,company",
                                "applied_to_lines,contact,company,accounting_period",
                                "company",
                                "company,accounting_period",
                                "contact",
                                "contact,account",
                                "contact,account,accounting_period",
                                "contact,account,company",
                                "contact,account,company,accounting_period",
                                "contact,accounting_period",
                                "contact,company",
                                "contact,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,account",
                                "tracking_categories,account,accounting_period",
                                "tracking_categories,account,company",
                                "tracking_categories,account,company,accounting_period",
                                "tracking_categories,accounting_period",
                                "tracking_categories,applied_to_lines",
                                "tracking_categories,applied_to_lines,account",
                                "tracking_categories,applied_to_lines,account,accounting_period",
                                "tracking_categories,applied_to_lines,account,company",
                                "tracking_categories,applied_to_lines,account,company,accounting_period",
                                "tracking_categories,applied_to_lines,accounting_period",
                                "tracking_categories,applied_to_lines,company",
                                "tracking_categories,applied_to_lines,company,accounting_period",
                                "tracking_categories,applied_to_lines,contact",
                                "tracking_categories,applied_to_lines,contact,account",
                                "tracking_categories,applied_to_lines,contact,account,accounting_period",
                                "tracking_categories,applied_to_lines,contact,account,company",
                                "tracking_categories,applied_to_lines,contact,account,company,accounting_period",
                                "tracking_categories,applied_to_lines,contact,accounting_period",
                                "tracking_categories,applied_to_lines,contact,company",
                                "tracking_categories,applied_to_lines,contact,company,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,account",
                                "tracking_categories,contact,account,accounting_period",
                                "tracking_categories,contact,account,company",
                                "tracking_categories,contact,account,company,accounting_period",
                                "tracking_categories,contact,accounting_period",
                                "tracking_categories,contact,company",
                                "tracking_categories,contact,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandTrackingCategories,AppliedToLines,Contact,Account,Company,AccountingPeriod": {
                                "value": "tracking_categories,applied_to_lines,contact,account,company,accounting_period",
                                "summary": "Expand Tracking_categories, Applied_to_lines, Contact, Account, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/payments/meta/post": {
            "get": {
                "operationId": "payments_meta_post_retrieve",
                "description": "Returns metadata for `Payment` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "payments"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/phone-numbers/{id}": {
            "get": {
                "operationId": "phone_numbers_retrieve",
                "description": "Returns an `AccountingPhoneNumber` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "phone-numbers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountingPhoneNumber"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/purchase-orders": {
            "get": {
                "operationId": "purchase_orders_list",
                "description": "Returns a list of `PurchaseOrder` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return purchase orders for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "company",
                                "company,accounting_period",
                                "delivery_address",
                                "delivery_address,accounting_period",
                                "delivery_address,company",
                                "delivery_address,company,accounting_period",
                                "delivery_address,vendor",
                                "delivery_address,vendor,accounting_period",
                                "delivery_address,vendor,company",
                                "delivery_address,vendor,company,accounting_period",
                                "line_items",
                                "line_items,accounting_period",
                                "line_items,company",
                                "line_items,company,accounting_period",
                                "line_items,delivery_address",
                                "line_items,delivery_address,accounting_period",
                                "line_items,delivery_address,company",
                                "line_items,delivery_address,company,accounting_period",
                                "line_items,delivery_address,vendor",
                                "line_items,delivery_address,vendor,accounting_period",
                                "line_items,delivery_address,vendor,company",
                                "line_items,delivery_address,vendor,company,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,company",
                                "line_items,tracking_categories,company,accounting_period",
                                "line_items,tracking_categories,delivery_address",
                                "line_items,tracking_categories,delivery_address,accounting_period",
                                "line_items,tracking_categories,delivery_address,company",
                                "line_items,tracking_categories,delivery_address,company,accounting_period",
                                "line_items,tracking_categories,delivery_address,vendor",
                                "line_items,tracking_categories,delivery_address,vendor,accounting_period",
                                "line_items,tracking_categories,delivery_address,vendor,company",
                                "line_items,tracking_categories,delivery_address,vendor,company,accounting_period",
                                "line_items,tracking_categories,vendor",
                                "line_items,tracking_categories,vendor,accounting_period",
                                "line_items,tracking_categories,vendor,company",
                                "line_items,tracking_categories,vendor,company,accounting_period",
                                "line_items,vendor",
                                "line_items,vendor,accounting_period",
                                "line_items,vendor,company",
                                "line_items,vendor,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,delivery_address",
                                "tracking_categories,delivery_address,accounting_period",
                                "tracking_categories,delivery_address,company",
                                "tracking_categories,delivery_address,company,accounting_period",
                                "tracking_categories,delivery_address,vendor",
                                "tracking_categories,delivery_address,vendor,accounting_period",
                                "tracking_categories,delivery_address,vendor,company",
                                "tracking_categories,delivery_address,vendor,company,accounting_period",
                                "tracking_categories,vendor",
                                "tracking_categories,vendor,accounting_period",
                                "tracking_categories,vendor,company",
                                "tracking_categories,vendor,company,accounting_period",
                                "vendor",
                                "vendor,accounting_period",
                                "vendor,company",
                                "vendor,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLineItems,TrackingCategories,DeliveryAddress,Vendor,Company,AccountingPeriod": {
                                "value": "line_items,tracking_categories,delivery_address,vendor,company,accounting_period",
                                "summary": "Expand Line_items, Tracking_categories, Delivery_address, Vendor, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "issue_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "issue_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "purchase-orders"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPurchaseOrderList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "purchase_orders_create",
                "description": "Creates a `PurchaseOrder` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "is_debug_mode",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include debug fields (such as log file links) in the response."
                    },
                    {
                        "in": "query",
                        "name": "run_async",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether or not third-party updates should be run asynchronously."
                    }
                ],
                "tags": [
                    "purchase-orders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseOrderEndpointRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseOrderEndpointRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseOrderEndpointRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOrderResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/purchase-orders/{id}": {
            "get": {
                "operationId": "purchase_orders_retrieve",
                "description": "Returns a `PurchaseOrder` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "company",
                                "company,accounting_period",
                                "delivery_address",
                                "delivery_address,accounting_period",
                                "delivery_address,company",
                                "delivery_address,company,accounting_period",
                                "delivery_address,vendor",
                                "delivery_address,vendor,accounting_period",
                                "delivery_address,vendor,company",
                                "delivery_address,vendor,company,accounting_period",
                                "line_items",
                                "line_items,accounting_period",
                                "line_items,company",
                                "line_items,company,accounting_period",
                                "line_items,delivery_address",
                                "line_items,delivery_address,accounting_period",
                                "line_items,delivery_address,company",
                                "line_items,delivery_address,company,accounting_period",
                                "line_items,delivery_address,vendor",
                                "line_items,delivery_address,vendor,accounting_period",
                                "line_items,delivery_address,vendor,company",
                                "line_items,delivery_address,vendor,company,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,company",
                                "line_items,tracking_categories,company,accounting_period",
                                "line_items,tracking_categories,delivery_address",
                                "line_items,tracking_categories,delivery_address,accounting_period",
                                "line_items,tracking_categories,delivery_address,company",
                                "line_items,tracking_categories,delivery_address,company,accounting_period",
                                "line_items,tracking_categories,delivery_address,vendor",
                                "line_items,tracking_categories,delivery_address,vendor,accounting_period",
                                "line_items,tracking_categories,delivery_address,vendor,company",
                                "line_items,tracking_categories,delivery_address,vendor,company,accounting_period",
                                "line_items,tracking_categories,vendor",
                                "line_items,tracking_categories,vendor,accounting_period",
                                "line_items,tracking_categories,vendor,company",
                                "line_items,tracking_categories,vendor,company,accounting_period",
                                "line_items,vendor",
                                "line_items,vendor,accounting_period",
                                "line_items,vendor,company",
                                "line_items,vendor,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,delivery_address",
                                "tracking_categories,delivery_address,accounting_period",
                                "tracking_categories,delivery_address,company",
                                "tracking_categories,delivery_address,company,accounting_period",
                                "tracking_categories,delivery_address,vendor",
                                "tracking_categories,delivery_address,vendor,accounting_period",
                                "tracking_categories,delivery_address,vendor,company",
                                "tracking_categories,delivery_address,vendor,company,accounting_period",
                                "tracking_categories,vendor",
                                "tracking_categories,vendor,accounting_period",
                                "tracking_categories,vendor,company",
                                "tracking_categories,vendor,company,accounting_period",
                                "vendor",
                                "vendor,accounting_period",
                                "vendor,company",
                                "vendor,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLineItems,TrackingCategories,DeliveryAddress,Vendor,Company,AccountingPeriod": {
                                "value": "line_items,tracking_categories,delivery_address,vendor,company,accounting_period",
                                "summary": "Expand Line_items, Tracking_categories, Delivery_address, Vendor, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "purchase-orders"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOrder"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/purchase-orders/meta/post": {
            "get": {
                "operationId": "purchase_orders_meta_post_retrieve",
                "description": "Returns metadata for `PurchaseOrder` POSTs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "purchase-orders"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MetaResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-merge-meta-post": "META_POST",
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/regenerate-key": {
            "post": {
                "operationId": "regenerate_key_create",
                "description": "Exchange remote keys.",
                "tags": [
                    "regenerate-key"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoteKeyForRegenerationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteKey"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/remote-fields": {
            "get": {
                "operationId": "remote_fields_retrieve",
                "description": "Get all remote fields for a Linked Account. Remote fields are third-party fields that are accessible after initial sync if remote_data is enabled. You can use remote fields to override existing Merge fields or map a new Merge field. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/overview/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "common_models",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A comma seperated list of Common Model names. If included, will only return Remote Fields for those Common Models."
                    },
                    {
                        "in": "query",
                        "name": "include_example_values",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If true, will include example values, where available, for remote fields in the 3rd party platform. These examples come from active data from your customers."
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoteFieldAPIResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/selective-sync/configurations": {
            "get": {
                "operationId": "selective_sync_configurations_list",
                "description": "Get a linked account's selective syncs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                                    }
                                },
                                "examples": {
                                    "StartDateConditionExample": {
                                        "value": [
                                            {
                                                "linked_account_conditions": [
                                                    {
                                                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                        "common_model": "hris.Employee",
                                                        "native_name": "Started At",
                                                        "field_name": "start_date",
                                                        "operator": "GREATER_THAN_OR_EQUAL",
                                                        "value": "2022-01-01T00:00:00Z"
                                                    }
                                                ]
                                            }
                                        ],
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "put": {
                "operationId": "selective_sync_configurations_update",
                "description": "Replace a linked account's selective syncs.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationListRequest"
                            },
                            "examples": {
                                "StartDateConditionRequestExample": {
                                    "value": {
                                        "linked_account_conditons": [
                                            {
                                                "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                "operator": "GREATER_THAN_OR_EQUAL",
                                                "value": "2022-01-01T00:00:00Z"
                                            }
                                        ]
                                    },
                                    "summary": "Employees that started on or after January 1st, 2022"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfiguration"
                                    }
                                },
                                "examples": {
                                    "StartDateConditionExample": {
                                        "value": [
                                            {
                                                "linked_account_conditions": [
                                                    {
                                                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                                        "common_model": "hris.Employee",
                                                        "native_name": "Started At",
                                                        "field_name": "start_date",
                                                        "operator": "GREATER_THAN_OR_EQUAL",
                                                        "value": "2022-01-01T00:00:00Z"
                                                    }
                                                ]
                                            }
                                        ],
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/selective-sync/meta": {
            "get": {
                "operationId": "selective_sync_meta_list",
                "description": "Get metadata for the conditions available to a linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "common_model",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "selective-sync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedConditionSchemaList"
                                },
                                "examples": {
                                    "PaginatedConditionSchemaListExample": {
                                        "value": {
                                            "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                            "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                                            "results": [
                                                {
                                                    "id": "123e4567-e89b-12d3-a456-426655440000",
                                                    "common_model": "hris.Employee",
                                                    "native_name": "Started At",
                                                    "field_name": "start_date",
                                                    "is_unique": true,
                                                    "condition_type": "DATE_TIME",
                                                    "operators": [
                                                        {
                                                            "operator": "GREATER_THAN_OR_EQUAL",
                                                            "is_unique": true
                                                        },
                                                        {
                                                            "operator": "LESS_THAN_OR_EQUAL",
                                                            "is_unique": true
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        "summary": "Employees that started on or after January 1st, 2022"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/sync-status": {
            "get": {
                "operationId": "sync_status_list",
                "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`. Learn more about sync status in our [Help Center](https://help.merge.dev/en/articles/8184193-merge-sync-statuses).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "sync-status"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSyncStatusList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/sync-status/resync": {
            "post": {
                "operationId": "sync_status_resync_create",
                "description": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Launch, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "force-resync"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SyncStatus"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/target-fields": {
            "get": {
                "operationId": "target_fields_retrieve",
                "description": "Get all organization-wide Target Fields, this will not include any Linked Account specific Target Fields. Organization-wide Target Fields are additional fields appended to the Merge Common Model for all Linked Accounts in a category. [Learn more](https://docs.merge.dev/supplemental-data/field-mappings/target-fields/).",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "field-mapping"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalTargetFieldAPIResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tax-rates": {
            "get": {
                "operationId": "tax_rates_list",
                "description": "Returns a list of `TaxRate` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tax rates for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    }
                ],
                "tags": [
                    "tax-rates"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaxRateList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tax-rates/{id}": {
            "get": {
                "operationId": "tax_rates_retrieve",
                "description": "Returns a `TaxRate` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "tax-rates"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxRate"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tracking-categories": {
            "get": {
                "operationId": "tracking_categories_list",
                "description": "Returns a list of `TrackingCategory` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return tracking categories for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "tracking-categories"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTrackingCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/tracking-categories/{id}": {
            "get": {
                "operationId": "tracking_categories_retrieve",
                "description": "Returns a `TrackingCategory` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "company"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandCompany": {
                                "value": "company",
                                "summary": "Expand Company"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "remote_fields",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "Deprecated. Use show_enum_origins.",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "show_enum_origins",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status"
                            ]
                        },
                        "description": "A comma separated list of enum field names for which you'd like the original values to be returned, instead of Merge's normalized enum values. [Learn more](https://help.merge.dev/en/articles/8950958-show_enum_origins-query-parameter)",
                        "examples": {
                            "OriginalEnumValuesStatus": {
                                "value": "status",
                                "summary": "Original Enum Values Status"
                            }
                        }
                    }
                ],
                "tags": [
                    "tracking-categories"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrackingCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/transactions": {
            "get": {
                "operationId": "transactions_list",
                "description": "Returns a list of `Transaction` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return accounting transactions for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,accounting_period",
                                "accounting_period",
                                "contact",
                                "contact,account",
                                "contact,account,accounting_period",
                                "contact,accounting_period",
                                "line_items",
                                "line_items,account",
                                "line_items,account,accounting_period",
                                "line_items,accounting_period",
                                "line_items,contact",
                                "line_items,contact,account",
                                "line_items,contact,account,accounting_period",
                                "line_items,contact,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,account",
                                "line_items,tracking_categories,account,accounting_period",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,contact",
                                "line_items,tracking_categories,contact,account",
                                "line_items,tracking_categories,contact,account,accounting_period",
                                "line_items,tracking_categories,contact,accounting_period",
                                "tracking_categories",
                                "tracking_categories,account",
                                "tracking_categories,account,accounting_period",
                                "tracking_categories,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,account",
                                "tracking_categories,contact,account,accounting_period",
                                "tracking_categories,contact,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLineItems,TrackingCategories,Contact,Account,AccountingPeriod": {
                                "value": "line_items,tracking_categories,contact,account,accounting_period",
                                "summary": "Expand Line_items, Tracking_categories, Contact, Account, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    }
                ],
                "tags": [
                    "transactions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransactionList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/transactions/{id}": {
            "get": {
                "operationId": "transactions_retrieve",
                "description": "Returns a `Transaction` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "account",
                                "account,accounting_period",
                                "accounting_period",
                                "contact",
                                "contact,account",
                                "contact,account,accounting_period",
                                "contact,accounting_period",
                                "line_items",
                                "line_items,account",
                                "line_items,account,accounting_period",
                                "line_items,accounting_period",
                                "line_items,contact",
                                "line_items,contact,account",
                                "line_items,contact,account,accounting_period",
                                "line_items,contact,accounting_period",
                                "line_items,tracking_categories",
                                "line_items,tracking_categories,account",
                                "line_items,tracking_categories,account,accounting_period",
                                "line_items,tracking_categories,accounting_period",
                                "line_items,tracking_categories,contact",
                                "line_items,tracking_categories,contact,account",
                                "line_items,tracking_categories,contact,account,accounting_period",
                                "line_items,tracking_categories,contact,accounting_period",
                                "tracking_categories",
                                "tracking_categories,account",
                                "tracking_categories,account,accounting_period",
                                "tracking_categories,accounting_period",
                                "tracking_categories,contact",
                                "tracking_categories,contact,account",
                                "tracking_categories,contact,account,accounting_period",
                                "tracking_categories,contact,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLineItems,TrackingCategories,Contact,Account,AccountingPeriod": {
                                "value": "line_items,tracking_categories,contact,account,accounting_period",
                                "summary": "Expand Line_items, Tracking_categories, Contact, Account, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "transactions"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/vendor-credits": {
            "get": {
                "operationId": "vendor_credits_list",
                "description": "Returns a list of `VendorCredit` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "If provided, will only return vendor credits for this company.",
                        "examples": {
                            "CompanyId": {
                                "summary": "company_id"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    },
                    {
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The pagination cursor value.",
                        "examples": {
                            "CursorExample": {
                                "value": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                                "summary": "Cursor Example"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "company",
                                "company,accounting_period",
                                "lines",
                                "lines,accounting_period",
                                "lines,company",
                                "lines,company,accounting_period",
                                "lines,tracking_categories",
                                "lines,tracking_categories,accounting_period",
                                "lines,tracking_categories,company",
                                "lines,tracking_categories,company,accounting_period",
                                "lines,tracking_categories,vendor",
                                "lines,tracking_categories,vendor,accounting_period",
                                "lines,tracking_categories,vendor,company",
                                "lines,tracking_categories,vendor,company,accounting_period",
                                "lines,vendor",
                                "lines,vendor,accounting_period",
                                "lines,vendor,company",
                                "lines,vendor,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,vendor",
                                "tracking_categories,vendor,accounting_period",
                                "tracking_categories,vendor,company",
                                "tracking_categories,vendor,company,accounting_period",
                                "vendor",
                                "vendor,accounting_period",
                                "vendor,company",
                                "vendor,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLines,TrackingCategories,Vendor,Company,AccountingPeriod": {
                                "value": "lines,tracking_categories,vendor,company,accounting_period",
                                "summary": "Expand Lines, Tracking_categories, Vendor, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "query",
                        "name": "include_deleted_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include data that was marked as deleted by third party webhooks."
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    },
                    {
                        "in": "query",
                        "name": "modified_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge after this date time will be returned."
                    },
                    {
                        "in": "query",
                        "name": "modified_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": "If provided, only objects synced by Merge before this date time will be returned."
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "remote_id",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "description": "The API provider's ID for the given object."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created after this datetime."
                    },
                    {
                        "in": "query",
                        "name": "transaction_date_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                        },
                        "description": "If provided, will only return objects created before this datetime."
                    }
                ],
                "tags": [
                    "vendor-credits"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVendorCreditList"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/vendor-credits/{id}": {
            "get": {
                "operationId": "vendor_credits_retrieve",
                "description": "Returns a `VendorCredit` object with the given `id`.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "accounting_period",
                                "company",
                                "company,accounting_period",
                                "lines",
                                "lines,accounting_period",
                                "lines,company",
                                "lines,company,accounting_period",
                                "lines,tracking_categories",
                                "lines,tracking_categories,accounting_period",
                                "lines,tracking_categories,company",
                                "lines,tracking_categories,company,accounting_period",
                                "lines,tracking_categories,vendor",
                                "lines,tracking_categories,vendor,accounting_period",
                                "lines,tracking_categories,vendor,company",
                                "lines,tracking_categories,vendor,company,accounting_period",
                                "lines,vendor",
                                "lines,vendor,accounting_period",
                                "lines,vendor,company",
                                "lines,vendor,company,accounting_period",
                                "tracking_categories",
                                "tracking_categories,accounting_period",
                                "tracking_categories,company",
                                "tracking_categories,company,accounting_period",
                                "tracking_categories,vendor",
                                "tracking_categories,vendor,accounting_period",
                                "tracking_categories,vendor,company",
                                "tracking_categories,vendor,company,accounting_period",
                                "vendor",
                                "vendor,accounting_period",
                                "vendor,company",
                                "vendor,company,accounting_period"
                            ]
                        },
                        "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
                        "examples": {
                            "ExpandLines,TrackingCategories,Vendor,Company,AccountingPeriod": {
                                "value": "lines,tracking_categories,vendor,company,accounting_period",
                                "summary": "Expand Lines, Tracking_categories, Vendor, Company, Accounting_period"
                            }
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "include_remote_data",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include the original data Merge fetched from the third-party to produce these models."
                    }
                ],
                "tags": [
                    "vendor-credits"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VendorCredit"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        },
        "/webhook-receivers": {
            "get": {
                "operationId": "webhook_receivers_list",
                "description": "Returns a list of `WebhookReceiver` objects.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "webhook-receivers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/WebhookReceiver"
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            },
            "post": {
                "operationId": "webhook_receivers_create",
                "description": "Creates a `WebhookReceiver` object with the given values.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-Account-Token",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Token identifying the end user.",
                        "required": true
                    }
                ],
                "tags": [
                    "webhook-receivers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookReceiverRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookReceiver"
                                }
                            }
                        },
                        "description": ""
                    }
                },
                "x-endpoint-availability": "ENDPOINT_AVAILABILITY_PUBLIC"
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "description": "# The Account Object\n### Description\nAn `Account` represents a category in a company’s ledger in which a financial transaction is recorded against. The aggregation of each `Account` object is often referred to as the **Chart of Accounts**.\n\nAn `Account` can be classified into one of the following categories, determined through the `classification` field:\n* __Asset:__ Accounts Receivable and Bank Accounts\n* __Liability:__ Accounts Payable and Credit Card Accounts\n* __Equity:__ Treasury Accounts and Retained Earnings\n* __Revenue:__ Income and Other Income\n* __Expense:__ Cost of Goods Sold and Office Expenses\n\n### Usage Example\nFetch from the `LIST Accounts` endpoint and view a company's accounts.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "21"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's name.",
                        "example": "Cash"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's description.",
                        "example": "Cash"
                    },
                    "classification": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClassificationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The account's broadest grouping.\n\n* `ASSET` - ASSET\n* `EQUITY` - EQUITY\n* `EXPENSE` - EXPENSE\n* `LIABILITY` - LIABILITY\n* `REVENUE` - REVENUE",
                        "example": "ASSET"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's type is a narrower and more specific grouping within the account's classification.",
                        "example": "Asset"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The account's status.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
                        "example": "ACTIVE"
                    },
                    "current_balance": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The account's current balance."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The account's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "account_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's number.",
                        "example": "X12Y9AB"
                    },
                    "parent_account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "ID of the parent account.",
                        "example": "22d92d6c-22f9-11ed-861d-0242ac120002"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the account belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-model-tooltip": {
                    "title": "Looking for __Bank Accounts__?",
                    "content": "Bank Accounts are represented as an __Account__ with a `classification` of __ASSET__."
                },
                "x-merge-expands": "{\"owner\": \"User\"}",
                "x-merge-category": "accounting"
            },
            "AccountDetails": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd"
                    },
                    "integration": {
                        "type": "string",
                        "readOnly": true,
                        "example": "BambooHR"
                    },
                    "integration_slug": {
                        "type": "string",
                        "readOnly": true,
                        "example": "bamboohr"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "hris"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Waystar Royco"
                    },
                    "end_user_email_address": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "example": "kendall.roy@waystar-royco.com"
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true,
                        "example": "COMPLETE"
                    },
                    "webhook_listener_url": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                    },
                    "is_duplicate": {
                        "type": "boolean",
                        "nullable": true,
                        "readOnly": true,
                        "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                        "example": true
                    },
                    "account_type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "PRODUCTION"
                    }
                },
                "x-merge-category": "accounting"
            },
            "AccountDetailsAndActions": {
                "type": "object",
                "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "e59b1821-f85c-4e28-a6b3-1804156f3563"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryEnum"
                            }
                        ],
                        "example": "hris"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountDetailsAndActionsStatusEnum"
                            }
                        ],
                        "example": "INCOMPLETE"
                    },
                    "status_detail": {
                        "type": "string",
                        "example": "Invalid login credentials"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "example": "3ac95cde-6c7f-4eef-afec-be710b42308d"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "example": "Foo Bar, LLC"
                    },
                    "end_user_email_address": {
                        "type": "string",
                        "example": "hradmin@foobar.dev"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The tenant or domain the customer has provided access to.",
                        "example": "foobar"
                    },
                    "webhook_listener_url": {
                        "type": "string",
                        "example": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                    },
                    "is_duplicate": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
                        "example": true
                    },
                    "integration": {
                        "$ref": "#/components/schemas/AccountDetailsAndActionsIntegration",
                        "example": {
                            "name": "SAP SuccessFactors",
                            "categories": [
                                "hris",
                                "ats"
                            ],
                            "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                            "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                            "color": "#F6A704",
                            "slug": "sap-successfactors",
                            "passthrough_available": true,
                            "available_model_operations": [
                                {
                                    "model_name": "Candidate",
                                    "available_operations": [
                                        "FETCH",
                                        "CREATE"
                                    ],
                                    "required_post_parameters": [
                                        "remote_user_id"
                                    ],
                                    "supported_fields": [
                                        "first_name",
                                        "last_name",
                                        "company",
                                        "title"
                                    ]
                                }
                            ]
                        }
                    },
                    "account_type": {
                        "type": "string",
                        "example": "PRODUCTION"
                    }
                },
                "required": [
                    "account_type",
                    "end_user_email_address",
                    "end_user_organization_name",
                    "id",
                    "status",
                    "webhook_listener_url"
                ],
                "x-merge-sample-json": "{\"id\": \"e59b1821-f85c-4e28-a6b3-1804156f3563\", \"category\": \"hris\", \"status\": \"INCOMPLETE\", \"status_detail\": \"Invalid login credentials\", \"end_user_origin_id\": \"3ac95cde-6c7f-4eef-afec-be710b42308d\", \"end_user_organization_name\": \"Foo Bar, LLC\", \"end_user_email_address\": \"hradmin@foobar.dev\", \"webhook_listener_url\": \"https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4\", \"is_duplicate\": true, \"integration\": {\"name\": \"SAP SuccessFactors\", \"categories\": [\"hris\", \"ats\"], \"image\": \"https://cdn.merge.dev/SuccessFactors_Logo.png\", \"square_image\": \"https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg\", \"color\": \"#F6A704\", \"slug\": \"sap-successfactors\", \"passthrough_available\": true, \"available_model_operations\": [{\"model_name\": \"Candidate\", \"available_operations\": [\"FETCH\", \"CREATE\"], \"required_post_parameters\": [\"remote_user_id\"], \"supported_fields\": [\"first_name\", \"last_name\", \"company\", \"title\"]}]}}",
                "x-merge-category": "accounting"
            },
            "AccountDetailsAndActionsIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        }
                    },
                    "image": {
                        "type": "string"
                    },
                    "square_image": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "passthrough_available": {
                        "type": "boolean"
                    },
                    "available_model_operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelOperation"
                        }
                    }
                },
                "required": [
                    "categories",
                    "color",
                    "name",
                    "passthrough_available",
                    "slug"
                ],
                "x-merge-category": "accounting"
            },
            "AccountDetailsAndActionsStatusEnum": {
                "enum": [
                    "COMPLETE",
                    "INCOMPLETE",
                    "RELINK_NEEDED"
                ],
                "type": "string",
                "description": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
                "x-merge-category": "accounting"
            },
            "AccountEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/AccountRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "AccountIntegration": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Company name."
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        },
                        "description": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>"
                    },
                    "square_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Company logo in square shape. <b>Upload an image with a white background.</b>"
                    },
                    "color": {
                        "type": "string",
                        "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                        "maxLength": 18
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "api_endpoints_to_documentation_urls": {
                        "type": "object",
                        "additionalProperties": {},
                        "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}"
                    },
                    "webhook_setup_guide_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "Setup guide URL for third party webhook creation. Exposed in Merge Docs."
                    },
                    "category_beta_status": {
                        "type": "object",
                        "description": "Category or categories this integration is in beta status for.",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "accounting"
            },
            "AccountRequest": {
                "type": "object",
                "description": "# The Account Object\n### Description\nAn `Account` represents a category in a company’s ledger in which a financial transaction is recorded against. The aggregation of each `Account` object is often referred to as the **Chart of Accounts**.\n\nAn `Account` can be classified into one of the following categories, determined through the `classification` field:\n* __Asset:__ Accounts Receivable and Bank Accounts\n* __Liability:__ Accounts Payable and Credit Card Accounts\n* __Equity:__ Treasury Accounts and Retained Earnings\n* __Revenue:__ Income and Other Income\n* __Expense:__ Cost of Goods Sold and Office Expenses\n\n### Usage Example\nFetch from the `LIST Accounts` endpoint and view a company's accounts.",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's name.",
                        "example": "Cash"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's description.",
                        "example": "Cash"
                    },
                    "classification": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClassificationEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The account's broadest grouping.\n\n* `ASSET` - ASSET\n* `EQUITY` - EQUITY\n* `EXPENSE` - EXPENSE\n* `LIABILITY` - LIABILITY\n* `REVENUE` - REVENUE",
                        "example": "ASSET"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's type is a narrower and more specific grouping within the account's classification.",
                        "example": "Asset"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The account's status.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
                        "example": "ACTIVE"
                    },
                    "current_balance": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The account's current balance."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The account's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "account_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The account's number.",
                        "example": "X12Y9AB"
                    },
                    "parent_account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "ID of the parent account.",
                        "example": "22d92d6c-22f9-11ed-861d-0242ac120002"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the account belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-model-tooltip": {
                    "title": "Looking for __Bank Accounts__?",
                    "content": "Bank Accounts are represented as an __Account__ with a `classification` of __ASSET__."
                },
                "x-merge-expands": "{\"owner\": \"User\"}",
                "x-merge-category": "accounting"
            },
            "AccountResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "AccountStatusEnum": {
                "enum": [
                    "ACTIVE",
                    "PENDING",
                    "INACTIVE"
                ],
                "type": "string",
                "description": "* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
                "x-merge-category": "accounting"
            },
            "AccountToken": {
                "type": "object",
                "properties": {
                    "account_token": {
                        "type": "string",
                        "example": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB"
                    },
                    "integration": {
                        "$ref": "#/components/schemas/AccountIntegration",
                        "example": {
                            "name": "SAP SuccessFactors",
                            "categories": [
                                "hris",
                                "ats"
                            ],
                            "image": "https://cdn.merge.dev/SuccessFactors_Logo.png",
                            "square_image": "https://cdn.merge.dev/SuccessFactors_Square_Logo.jpg",
                            "color": "#F6A704",
                            "slug": "sap-successfactors"
                        }
                    }
                },
                "required": [
                    "account_token",
                    "integration"
                ],
                "x-merge-category": "accounting"
            },
            "AccountingAttachment": {
                "type": "object",
                "description": "# The Accounting Attachment Object\n### Description\nThe `AccountingAttachment` object is used to represent a company's attachments.\n\n### Usage Example\nFetch from the `LIST AccountingAttachments` endpoint and view a company's attachments.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "1018270"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's name.",
                        "example": "invoice.png"
                    },
                    "file_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 2000,
                        "example": "https://merge-brand.s3.amazonaws.com/20210315/rect-logo-270x80%402x.png",
                        "description": "The attachment's url."
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the accounting attachment belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-category": "accounting"
            },
            "AccountingAttachmentEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/AccountingAttachmentRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "AccountingAttachmentRequest": {
                "type": "object",
                "description": "# The Accounting Attachment Object\n### Description\nThe `AccountingAttachment` object is used to represent a company's attachments.\n\n### Usage Example\nFetch from the `LIST AccountingAttachments` endpoint and view a company's attachments.",
                "properties": {
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The attachment's name.",
                        "example": "invoice.png"
                    },
                    "file_url": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "maxLength": 2000,
                        "example": "https://merge-brand.s3.amazonaws.com/20210315/rect-logo-270x80%402x.png",
                        "description": "The attachment's url."
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the accounting attachment belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "AccountingAttachmentResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/AccountingAttachment"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "AccountingPeriod": {
                "type": "object",
                "description": "# The AccountingPeriod Object\n### Description\nThe `AccountingPeriod` object is used to define a period of time in which events occurred.\n\n### Usage Example\nCommon models like `Invoice` and `Transaction` will have `AccountingPeriod` objects which will denote when they occurred.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "2804580"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "Beginning date of the period",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "End date of the period",
                        "example": "2020-04-31T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountingPeriodStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "ACTIVE"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "Name of the accounting period.",
                        "maxLength": 100,
                        "example": "April 2020 Financials"
                    }
                },
                "x-merge-category": "accounting"
            },
            "AccountingPeriodStatusEnum": {
                "enum": [
                    "ACTIVE",
                    "INACTIVE"
                ],
                "type": "string",
                "description": "* `ACTIVE` - ACTIVE\n* `INACTIVE` - INACTIVE",
                "x-merge-category": "accounting"
            },
            "AccountingPhoneNumber": {
                "type": "object",
                "description": "# The AccountingPhoneNumber Object\n### Description\nThe `AccountingPhoneNumber` object is used to represent a contact's or company's phone number.\n\n### Usage Example\nFetch from the `GET CompanyInfo` endpoint and view the company's phone numbers.",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phone number.",
                        "example": "+3198675309"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phone number's type.",
                        "example": "Mobile"
                    }
                },
                "x-merge-category": "accounting"
            },
            "AccountingPhoneNumberRequest": {
                "type": "object",
                "description": "# The AccountingPhoneNumber Object\n### Description\nThe `AccountingPhoneNumber` object is used to represent a contact's or company's phone number.\n\n### Usage Example\nFetch from the `GET CompanyInfo` endpoint and view the company's phone numbers.",
                "properties": {
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phone number.",
                        "example": "+3198675309"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The phone number's type.",
                        "example": "Mobile"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "Address": {
                "type": "object",
                "description": "# The Address Object\n### Description\nThe `Address` object is used to represent a contact's or company's address.\n\n### Usage Example\nFetch from the `GET CompanyInfo` endpoint and view the company's addresses.",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The address type.\n\n* `BILLING` - BILLING\n* `SHIPPING` - SHIPPING",
                        "example": "SHIPPING"
                    },
                    "street_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "Line 1 of the address's street.",
                        "example": "2920 Broadway"
                    },
                    "street_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "Line 2 of the address's street.",
                        "example": "2nd Floor"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "description": "The address's city.",
                        "example": "New York"
                    },
                    "state": {
                        "nullable": true,
                        "description": "The address's state or region.",
                        "readOnly": true,
                        "example": "NY"
                    },
                    "country_subdivision": {
                        "type": "string",
                        "nullable": true,
                        "description": "The address's state or region.",
                        "example": "NY"
                    },
                    "country": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The address's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
                        "example": "US"
                    },
                    "zip_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The address's zip code.",
                        "example": "10027"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "accounting"
            },
            "AddressRequest": {
                "type": "object",
                "description": "# The Address Object\n### Description\nThe `Address` object is used to represent a contact's or company's address.\n\n### Usage Example\nFetch from the `GET CompanyInfo` endpoint and view the company's addresses.",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The address type.\n\n* `BILLING` - BILLING\n* `SHIPPING` - SHIPPING",
                        "example": "SHIPPING"
                    },
                    "street_1": {
                        "type": "string",
                        "nullable": true,
                        "description": "Line 1 of the address's street.",
                        "example": "2920 Broadway"
                    },
                    "street_2": {
                        "type": "string",
                        "nullable": true,
                        "description": "Line 2 of the address's street.",
                        "example": "2nd Floor"
                    },
                    "city": {
                        "type": "string",
                        "nullable": true,
                        "description": "The address's city.",
                        "example": "New York"
                    },
                    "country_subdivision": {
                        "type": "string",
                        "nullable": true,
                        "description": "The address's state or region.",
                        "example": "NY"
                    },
                    "country": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The address's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
                        "example": "US"
                    },
                    "zip_code": {
                        "type": "string",
                        "nullable": true,
                        "description": "The address's zip code.",
                        "example": "10027"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "AddressTypeEnum": {
                "enum": [
                    "BILLING",
                    "SHIPPING"
                ],
                "type": "string",
                "description": "* `BILLING` - BILLING\n* `SHIPPING` - SHIPPING",
                "x-merge-category": "accounting"
            },
            "AdvancedMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "is_required": {
                        "type": "boolean"
                    },
                    "is_custom": {
                        "type": "boolean"
                    },
                    "field_choices": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "id"
                ],
                "x-merge-category": "accounting"
            },
            "AsyncPassthroughReciept": {
                "type": "object",
                "properties": {
                    "async_passthrough_receipt_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "fd29020f-2695-445e-922e-dcd5e81903fd"
                    }
                },
                "required": [
                    "async_passthrough_receipt_id"
                ],
                "x-merge-category": "accounting"
            },
            "AuditLogEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b5ceea2a-7171-47ce-8090-165cfce5572c"
                    },
                    "user_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The User's full name at the time of this Event occurring.",
                        "maxLength": 200,
                        "example": "Gil Feig"
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "nullable": true,
                        "description": "The User's email at the time of this Event occurring.",
                        "maxLength": 254,
                        "example": "hello@merge.dev"
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "description": "Designates the role of the user (or SYSTEM/API if action not taken by a user) at the time of this Event occurring.\n\n* `ADMIN` - ADMIN\n* `DEVELOPER` - DEVELOPER\n* `MEMBER` - MEMBER\n* `API` - API\n* `SYSTEM` - SYSTEM\n* `MERGE_TEAM` - MERGE_TEAM",
                        "example": "ADMIN"
                    },
                    "ip_address": {
                        "type": "string",
                        "maxLength": 45,
                        "example": "192.0.2.123"
                    },
                    "event_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EventTypeEnum"
                            }
                        ],
                        "description": "Designates the type of event that occurred.\n\n* `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY\n* `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY\n* `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY\n* `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY\n* `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY\n* `INVITED_USER` - INVITED_USER\n* `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED\n* `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED\n* `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT\n* `CREATED_DESTINATION` - CREATED_DESTINATION\n* `DELETED_DESTINATION` - DELETED_DESTINATION\n* `CHANGED_DESTINATION` - CHANGED_DESTINATION\n* `CHANGED_SCOPES` - CHANGED_SCOPES\n* `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION\n* `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS\n* `ENABLED_INTEGRATION` - ENABLED_INTEGRATION\n* `DISABLED_INTEGRATION` - DISABLED_INTEGRATION\n* `ENABLED_CATEGORY` - ENABLED_CATEGORY\n* `DISABLED_CATEGORY` - DISABLED_CATEGORY\n* `CHANGED_PASSWORD` - CHANGED_PASSWORD\n* `RESET_PASSWORD` - RESET_PASSWORD\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING\n* `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING\n* `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING\n* `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING\n* `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC\n* `MUTED_ISSUE` - MUTED_ISSUE\n* `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK",
                        "example": "CHANGED_SCOPES"
                    },
                    "event_description": {
                        "type": "string",
                        "example": "Organization-wide Scopes for model hris.Employee updated from Read to Read+Write"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "event_description",
                    "event_type",
                    "ip_address",
                    "role"
                ],
                "x-merge-category": "accounting"
            },
            "AvailableActions": {
                "type": "object",
                "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
                "properties": {
                    "integration": {
                        "$ref": "#/components/schemas/AccountIntegration",
                        "example": {
                            "name": "Lever",
                            "categories": [
                                "ats"
                            ],
                            "image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Logo.png",
                            "square_image": "https://merge-api-production.s3.amazonaws.com/media/Lever_Square_Logo.png",
                            "color": "#262A34",
                            "is_in_beta": "true",
                            "api_endpoints_to_documentation_urls": "{'GET': [('/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve')], 'POST': []}"
                        }
                    },
                    "passthrough_available": {
                        "type": "boolean",
                        "example": true
                    },
                    "available_model_operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelOperation"
                        },
                        "example": [
                            {
                                "model_name": "Candidate",
                                "available_operations": [
                                    "FETCH",
                                    "CREATE"
                                ],
                                "required_post_parameters": [
                                    "remote_user_id"
                                ],
                                "supported_fields": [
                                    "first_name",
                                    "last_name",
                                    "company",
                                    "title"
                                ]
                            }
                        ]
                    }
                },
                "required": [
                    "integration",
                    "passthrough_available"
                ],
                "x-merge-category": "accounting"
            },
            "BalanceSheet": {
                "type": "object",
                "description": "# The BalanceSheet Object\n### Description\nThe `BalanceSheet` object shows a company’s assets, liabilities, and equity. Assets should be equal to liability and equity combined. This shows the company’s financial health at a specific point in time.\n\n### Usage Example\nFetch from the `LIST BalanceSheets` endpoint and view a company's balance sheets.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "8937018"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The balance sheet's name.",
                        "example": "BalanceSheet"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The balance sheet's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "`Company` object for the given `BalanceSheet` object.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The balance sheet's date. The balance sheet data will reflect the company's financial position this point in time.",
                        "example": "2021-09-31T00:00:00Z"
                    },
                    "net_assets": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The balance sheet's net assets.",
                        "example": 1000.0
                    },
                    "assets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10010",
                                "name": "Assets",
                                "value": 1000,
                                "sub_items": []
                            }
                        ]
                    },
                    "liabilities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10011",
                                "name": "Liabilities",
                                "value": 500,
                                "sub_items": []
                            }
                        ]
                    },
                    "equity": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10012",
                                "name": "Equity",
                                "value": 500,
                                "sub_items": []
                            }
                        ]
                    },
                    "remote_generated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The time that balance sheet was generated by the accounting system.",
                        "example": "2021-10-01T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"company\": \"CompanyInfo\"}",
                "x-merge-category": "accounting"
            },
            "CashFlowStatement": {
                "type": "object",
                "description": "# The CashFlowStatement Object\n### Description\nThe `CashFlowStatement` object shows operating activities, investing activities, and financing activities over a period of time (month, quarter, or year).\n\n### Usage Example\nFetch from the `LIST CashFlowStatements` endpoint and view a company's cash flow statements.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "8211088"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The cash flow statement's name.",
                        "example": "CashFlow"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The cash flow statement's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the cash flow statement belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "start_period": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The cash flow statement's start period.",
                        "example": "2020-01-01T00:00:00Z"
                    },
                    "end_period": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The cash flow statement's end period.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "cash_at_beginning_of_period": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Cash and cash equivalents at the beginning of the cash flow statement's period.",
                        "example": 5000.0
                    },
                    "cash_at_end_of_period": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "Cash and cash equivalents at the beginning of the cash flow statement's period.",
                        "example": 4063.52
                    },
                    "operating_activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "19202938",
                                "created_at": "2021-09-15T00:00:00Z",
                                "modified_at": "2021-09-18T00:00:00Z",
                                "name": "Operating Activities",
                                "value": 1000,
                                "sub_items": [
                                    {
                                        "remote_id": "23042938",
                                        "created_at": "2021-09-15T00:00:00Z",
                                        "modified_at": "2021-09-18T00:00:00Z",
                                        "name": "Net Income",
                                        "value": 1097.13,
                                        "sub_items": [],
                                        "company": null
                                    }
                                ]
                            }
                        ]
                    },
                    "investing_activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "192406939",
                                "created_at": "2021-11-15T00:00:00Z",
                                "modified_at": "2021-11-18T00:00:00Z",
                                "name": "Equipment",
                                "value": 1000,
                                "sub_items": [
                                    {
                                        "remote_id": null,
                                        "created_at": "2021-11-15T00:00:00Z",
                                        "modified_at": "2021-09-18T00:00:00Z",
                                        "name": "Equipment",
                                        "value": 1000,
                                        "sub_items": [],
                                        "company": null
                                    }
                                ]
                            }
                        ]
                    },
                    "financing_activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "192406939",
                                "created_at": "2021-11-15T00:00:00Z",
                                "modified_at": "2021-11-15T00:00:00Z",
                                "sub_items": []
                            }
                        ]
                    },
                    "remote_generated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The time that cash flow statement was generated by the accounting system.",
                        "example": "2020-04-01T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"company\": \"CompanyInfo\"}",
                "x-merge-category": "accounting"
            },
            "CategoriesEnum": {
                "enum": [
                    "hris",
                    "ats",
                    "accounting",
                    "ticketing",
                    "crm",
                    "mktg",
                    "filestorage"
                ],
                "type": "string",
                "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
                "x-merge-category": "accounting"
            },
            "CategoryEnum": {
                "enum": [
                    "hris",
                    "ats",
                    "accounting",
                    "ticketing",
                    "crm",
                    "mktg",
                    "filestorage"
                ],
                "type": "string",
                "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
                "x-merge-category": "accounting"
            },
            "CategoryTypeEnum": {
                "enum": [
                    "CLASS",
                    "DEPARTMENT"
                ],
                "type": "string",
                "description": "* `CLASS` - CLASS\n* `DEPARTMENT` - DEPARTMENT",
                "x-merge-category": "accounting"
            },
            "ClassificationEnum": {
                "enum": [
                    "ASSET",
                    "EQUITY",
                    "EXPENSE",
                    "LIABILITY",
                    "REVENUE"
                ],
                "type": "string",
                "description": "* `ASSET` - ASSET\n* `EQUITY` - EQUITY\n* `EXPENSE` - EXPENSE\n* `LIABILITY` - LIABILITY\n* `REVENUE` - REVENUE",
                "x-merge-category": "accounting"
            },
            "CommonModelScopeAPI": {
                "type": "object",
                "properties": {
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializer"
                        },
                        "description": "The common models you want to update the scopes for",
                        "example": [
                            {
                                "model_name": "Employee",
                                "model_permissions": {
                                    "READ": {
                                        "is_enabled": true
                                    },
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                },
                                "field_permissions": {
                                    "enabled_fields": [
                                        "avatar",
                                        "created_at",
                                        "custom_fields",
                                        "date_of_birth",
                                        "first_name",
                                        "gender",
                                        "remote_created_at",
                                        "remote_data"
                                    ],
                                    "disabled_fields": [
                                        "company",
                                        "employments",
                                        "groups",
                                        "home_location",
                                        "manager",
                                        "work_location"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "common_models"
                ],
                "x-merge-category": "accounting"
            },
            "CommonModelScopesBodyRequest": {
                "type": "object",
                "properties": {
                    "model_id": {
                        "type": "string",
                        "minLength": 1,
                        "example": "hris.Employee"
                    },
                    "enabled_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnabledActionsEnum"
                        },
                        "example": [
                            "READ",
                            "WRITE"
                        ]
                    },
                    "disabled_fields": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "example": [
                            "first_name"
                        ]
                    }
                },
                "required": [
                    "disabled_fields",
                    "enabled_actions",
                    "model_id"
                ],
                "x-merge-category": "accounting"
            },
            "CompanyInfo": {
                "type": "object",
                "description": "# The CompanyInfo Object\n### Description\nThe `CompanyInfo` object contains information about the company of the linked account. If the company has multiple entities (also known as subsidiaries), each entity may show up as a single `CompanyInfo` record.\n\n### Usage Example\nFetch from the `GET CompanyInfo` endpoint and view a company's information.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "19202938"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The company's name.",
                        "example": "Merge Pickleball Company"
                    },
                    "legal_name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The company's legal name.",
                        "example": "Merge Pickleball Company Inc."
                    },
                    "tax_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The company's tax number.",
                        "example": "11-0011000"
                    },
                    "fiscal_year_end_month": {
                        "type": "integer",
                        "maximum": 12,
                        "minimum": 1,
                        "nullable": true,
                        "description": "The company's fiscal year end month.",
                        "example": 12
                    },
                    "fiscal_year_end_day": {
                        "type": "integer",
                        "maximum": 31,
                        "minimum": 1,
                        "nullable": true,
                        "description": "The company's fiscal year end day.",
                        "example": 31
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The currency set in the company's accounting platform.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's company was created.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true,
                            "description": "The url."
                        },
                        "nullable": true,
                        "description": "The company's urls.",
                        "example": "https://www.merge.dev"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        },
                        "example": [
                            {
                                "street_1": "2920 Broadway",
                                "street_2": "2nd Floor",
                                "city": "New York",
                                "state": "NY",
                                "country": "US",
                                "zip_code": "10027"
                            }
                        ],
                        "x-merge-expands-to": "Address"
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountingPhoneNumber"
                        },
                        "x-merge-expands-to": "AccountingPhoneNumber"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"addresses\": \"Address\", \"phone_numbers\": \"AccountingPhoneNumber\"}",
                "x-merge-category": "accounting"
            },
            "ConditionSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account."
                    },
                    "common_model": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The common model for which a condition schema is defined."
                    },
                    "native_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "field_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "is_unique": {
                        "type": "boolean",
                        "description": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times."
                    },
                    "condition_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConditionTypeEnum"
                            }
                        ],
                        "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS"
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OperatorSchema"
                        },
                        "description": "The schemas for the operators that can be used on a condition."
                    }
                },
                "required": [
                    "condition_type",
                    "field_name",
                    "id",
                    "native_name",
                    "operators"
                ],
                "x-merge-category": "accounting"
            },
            "ConditionTypeEnum": {
                "enum": [
                    "BOOLEAN",
                    "DATE",
                    "DATE_TIME",
                    "INTEGER",
                    "FLOAT",
                    "STRING",
                    "LIST_OF_STRINGS"
                ],
                "type": "string",
                "description": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
                "x-merge-category": "accounting"
            },
            "Contact": {
                "type": "object",
                "description": "# The Contact Object\n### Description\nA `Contact` is an individual or business entity to which products and services are sold to or purchased from. The `Contact` model contains both Customers, in which products and services are sold to, and Vendors (or Suppliers), in which products and services are purchased from.\n* A `Contact` is a Vendor/Supplier if the `is_supplier` property is true.\n* A `Contact` is a customer if the `is_customer` property is true.\n\n### Usage Example\nFetch from the `LIST Contacts` endpoint and view a company's contacts.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "c640b80b-fac9-409f-aa19-1f9221aec445"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "11167"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's name.",
                        "example": "Gil Feig's Pickleball Team"
                    },
                    "is_supplier": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the contact is a supplier."
                    },
                    "is_customer": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the contact is a customer.",
                        "example": true
                    },
                    "email_address": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's email address.",
                        "example": "pickleball@merge.dev"
                    },
                    "tax_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's tax number.",
                        "example": "12-3456789"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7d1Enum"
                            }
                        ],
                        "nullable": true,
                        "description": "The contact's status\n\n* `ACTIVE` - ACTIVE\n* `ARCHIVED` - ARCHIVED",
                        "example": "ACTIVE"
                    },
                    "currency": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currency the contact's transactions are in.",
                        "example": "USD"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's contact was updated.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the contact belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        },
                        "example": [
                            "2f2702aa-8948-492b-a412-2acdf6d2c499",
                            "d98c7428-8dda-48a8-a1da-c570f65e2375"
                        ],
                        "description": "`Address` object IDs for the given `Contacts` object."
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountingPhoneNumber"
                        },
                        "example": [
                            {
                                "number": "+3198675309",
                                "type": "Mobile"
                            }
                        ],
                        "description": "`AccountingPhoneNumber` object for the given `Contacts` object."
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\"}",
                "x-merge-category": "accounting"
            },
            "ContactEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ContactRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "ContactRequest": {
                "type": "object",
                "description": "# The Contact Object\n### Description\nA `Contact` is an individual or business entity to which products and services are sold to or purchased from. The `Contact` model contains both Customers, in which products and services are sold to, and Vendors (or Suppliers), in which products and services are purchased from.\n* A `Contact` is a Vendor/Supplier if the `is_supplier` property is true.\n* A `Contact` is a customer if the `is_customer` property is true.\n\n### Usage Example\nFetch from the `LIST Contacts` endpoint and view a company's contacts.",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's name.",
                        "example": "Gil Feig's Pickleball Team"
                    },
                    "is_supplier": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the contact is a supplier."
                    },
                    "is_customer": {
                        "type": "boolean",
                        "nullable": true,
                        "description": "Whether the contact is a customer.",
                        "example": true
                    },
                    "email_address": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's email address.",
                        "example": "pickleball@merge.dev"
                    },
                    "tax_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The contact's tax number.",
                        "example": "12-3456789"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7d1Enum"
                            }
                        ],
                        "nullable": true,
                        "description": "The contact's status\n\n* `ACTIVE` - ACTIVE\n* `ARCHIVED` - ARCHIVED",
                        "example": "ACTIVE"
                    },
                    "currency": {
                        "type": "string",
                        "nullable": true,
                        "description": "The currency the contact's transactions are in.",
                        "example": "USD"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the contact belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressRequest"
                        },
                        "example": [
                            "2f2702aa-8948-492b-a412-2acdf6d2c499",
                            "d98c7428-8dda-48a8-a1da-c570f65e2375"
                        ],
                        "description": "`Address` object IDs for the given `Contacts` object."
                    },
                    "phone_numbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountingPhoneNumberRequest"
                        },
                        "example": [
                            {
                                "number": "+3198675309",
                                "type": "Mobile"
                            }
                        ],
                        "description": "`AccountingPhoneNumber` object for the given `Contacts` object."
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\"}",
                "x-merge-category": "accounting"
            },
            "ContactResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Contact"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "CountryEnum": {
                "enum": [
                    "AF",
                    "AX",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BV",
                    "BR",
                    "IO",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "CV",
                    "KH",
                    "CM",
                    "CA",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CD",
                    "CK",
                    "CR",
                    "CI",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "SZ",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HK",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "KW",
                    "KG",
                    "LA",
                    "LV",
                    "LB",
                    "LS",
                    "LR",
                    "LY",
                    "LI",
                    "LT",
                    "LU",
                    "MO",
                    "MG",
                    "MW",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MH",
                    "MQ",
                    "MR",
                    "MU",
                    "YT",
                    "MX",
                    "FM",
                    "MD",
                    "MC",
                    "MN",
                    "ME",
                    "MS",
                    "MA",
                    "MZ",
                    "MM",
                    "NA",
                    "NR",
                    "NP",
                    "NL",
                    "NC",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NU",
                    "NF",
                    "KP",
                    "MK",
                    "MP",
                    "NO",
                    "OM",
                    "PK",
                    "PW",
                    "PS",
                    "PA",
                    "PG",
                    "PY",
                    "PE",
                    "PH",
                    "PN",
                    "PL",
                    "PT",
                    "PR",
                    "QA",
                    "RE",
                    "RO",
                    "RU",
                    "RW",
                    "BL",
                    "SH",
                    "KN",
                    "LC",
                    "MF",
                    "PM",
                    "VC",
                    "WS",
                    "SM",
                    "ST",
                    "SA",
                    "SN",
                    "RS",
                    "SC",
                    "SL",
                    "SG",
                    "SX",
                    "SK",
                    "SI",
                    "SB",
                    "SO",
                    "ZA",
                    "GS",
                    "KR",
                    "SS",
                    "ES",
                    "LK",
                    "SD",
                    "SR",
                    "SJ",
                    "SE",
                    "CH",
                    "SY",
                    "TW",
                    "TJ",
                    "TZ",
                    "TH",
                    "TL",
                    "TG",
                    "TK",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TM",
                    "TC",
                    "TV",
                    "UG",
                    "UA",
                    "AE",
                    "GB",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VU",
                    "VE",
                    "VN",
                    "VG",
                    "VI",
                    "WF",
                    "EH",
                    "YE",
                    "ZM",
                    "ZW"
                ],
                "type": "string",
                "description": "* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
                "x-merge-category": "accounting"
            },
            "CreateFieldMappingRequest": {
                "type": "object",
                "properties": {
                    "target_field_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the target field you want this remote field to map to.",
                        "example": "example_target_field_name"
                    },
                    "target_field_description": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The description of the target field you want this remote field to map to.",
                        "example": "this is a example description of the target field"
                    },
                    "remote_field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "description": "The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.",
                        "example": [
                            "example_remote_field"
                        ]
                    },
                    "remote_method": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The method of the remote endpoint where the remote field is coming from.",
                        "example": "GET"
                    },
                    "remote_url_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the remote endpoint where the remote field is coming from.",
                        "example": "/example-url-path"
                    },
                    "common_model_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the Common Model that the remote field corresponds to in a given category.",
                        "example": "ExampleCommonModel"
                    }
                },
                "required": [
                    "common_model_name",
                    "remote_field_traversal_path",
                    "remote_method",
                    "remote_url_path",
                    "target_field_description",
                    "target_field_name"
                ],
                "x-merge-category": "accounting"
            },
            "CreditNote": {
                "type": "object",
                "description": "# The CreditNote Object\n### Description\nA `CreditNote` is transaction issued to a customer, indicating a reduction or cancellation of the amount owed by the customer. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a sales transaction. A `CreditNote` can be applied to *Accounts Receivable* Invoices to decrease the overall amount of the Invoice.\n\n### Usage Example\nFetch from the `LIST CreditNotes` endpoint and view a company's credit notes.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "123877"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The credit note's transaction date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CreditNoteStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The credit note's status.\n\n* `SUBMITTED` - SUBMITTED\n* `AUTHORIZED` - AUTHORIZED\n* `PAID` - PAID",
                        "example": "PAID"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The credit note's number.",
                        "example": "CN-29"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The credit note's contact.",
                        "example": "c6c7b870-bb4d-489a-921e-2f0ee4192ff9",
                        "x-merge-expands-to": "Contact"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the credit note belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The credit note's exchange rate.",
                        "example": "2.9"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The credit note's total amount.",
                        "example": 50.0
                    },
                    "remaining_credit": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The amount of value remaining in the credit note that the customer can use.",
                        "example": 20.0
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditNoteLineItem"
                        },
                        "example": [
                            {
                                "item": "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                                "name": "Basic Monthly",
                                "description": "prorated amount for items",
                                "quantity": 1,
                                "memo": "privNote",
                                "unit_price": "5.0",
                                "tax_rate": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                                "total_line_amount": "5.0",
                                "tracking_category": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                                "tracking_categories": [
                                    "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "account": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "remote_id": "121222",
                                "remote_was_deleted": true
                            }
                        ],
                        "x-merge-expands-to": "CreditNoteLineItem"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The credit note's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's credit note was created.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's credit note was updated.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
                        ],
                        "description": "Array of `Payment` object IDs",
                        "x-merge-expands-to": "Payment"
                    },
                    "applied_payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "a9a94a75-19c1-41fe-90d8-d9ba959c38e5"
                        ],
                        "description": "A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.",
                        "x-merge-expands-to": "PaymentLineItemWithPayment"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the CreditNote was generated in.",
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"applied_payments\": \"PaymentLineItemWithPayment\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"line_items\": \"CreditNoteLineItem\", \"payments\": \"Payment\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "CreditNoteLineItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                        "x-merge-expands-to": "Item"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The credit note line item's name.",
                        "example": "Basic Monthly"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of the item that is owed.",
                        "example": "prorated amount for items"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,24}(?:\\.\\d{0,8})?$",
                        "nullable": true,
                        "description": "The credit note line item's quantity.",
                        "example": 1
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The credit note line item's memo.",
                        "example": "privNote"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The credit note line item's unit price.",
                        "example": "5.0"
                    },
                    "tax_rate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The credit note line item's tax rate.",
                        "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178"
                    },
                    "total_line_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The credit note line item's total.",
                        "example": "5.0"
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The credit note line item's associated tracking category.",
                        "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The credit note line item's associated tracking categories.",
                        "example": [
                            "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ]
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The credit note line item's account.",
                        "example": "8d9fd929-436c-4fd4-a48b-0c61f68d6178"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the credit note belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform.",
                        "example": true
                    }
                },
                "required": [
                    "tracking_categories"
                ],
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"company\": \"CompanyInfo\", \"item\": \"Item\"}",
                "x-merge-category": "accounting"
            },
            "CreditNoteStatusEnum": {
                "enum": [
                    "SUBMITTED",
                    "AUTHORIZED",
                    "PAID"
                ],
                "type": "string",
                "description": "* `SUBMITTED` - SUBMITTED\n* `AUTHORIZED` - AUTHORIZED\n* `PAID` - PAID",
                "x-merge-category": "accounting"
            },
            "CurrencyEnum": {
                "enum": [
                    "XUA",
                    "AFN",
                    "AFA",
                    "ALL",
                    "ALK",
                    "DZD",
                    "ADP",
                    "AOA",
                    "AOK",
                    "AON",
                    "AOR",
                    "ARA",
                    "ARS",
                    "ARM",
                    "ARP",
                    "ARL",
                    "AMD",
                    "AWG",
                    "AUD",
                    "ATS",
                    "AZN",
                    "AZM",
                    "BSD",
                    "BHD",
                    "BDT",
                    "BBD",
                    "BYN",
                    "BYB",
                    "BYR",
                    "BEF",
                    "BEC",
                    "BEL",
                    "BZD",
                    "BMD",
                    "BTN",
                    "BOB",
                    "BOL",
                    "BOV",
                    "BOP",
                    "BAM",
                    "BAD",
                    "BAN",
                    "BWP",
                    "BRC",
                    "BRZ",
                    "BRE",
                    "BRR",
                    "BRN",
                    "BRB",
                    "BRL",
                    "GBP",
                    "BND",
                    "BGL",
                    "BGN",
                    "BGO",
                    "BGM",
                    "BUK",
                    "BIF",
                    "XPF",
                    "KHR",
                    "CAD",
                    "CVE",
                    "KYD",
                    "XAF",
                    "CLE",
                    "CLP",
                    "CLF",
                    "CNX",
                    "CNY",
                    "CNH",
                    "COP",
                    "COU",
                    "KMF",
                    "CDF",
                    "CRC",
                    "HRD",
                    "HRK",
                    "CUC",
                    "CUP",
                    "CYP",
                    "CZK",
                    "CSK",
                    "DKK",
                    "DJF",
                    "DOP",
                    "NLG",
                    "XCD",
                    "DDM",
                    "ECS",
                    "ECV",
                    "EGP",
                    "GQE",
                    "ERN",
                    "EEK",
                    "ETB",
                    "EUR",
                    "XBA",
                    "XEU",
                    "XBB",
                    "XBC",
                    "XBD",
                    "FKP",
                    "FJD",
                    "FIM",
                    "FRF",
                    "XFO",
                    "XFU",
                    "GMD",
                    "GEK",
                    "GEL",
                    "DEM",
                    "GHS",
                    "GHC",
                    "GIP",
                    "XAU",
                    "GRD",
                    "GTQ",
                    "GWP",
                    "GNF",
                    "GNS",
                    "GYD",
                    "HTG",
                    "HNL",
                    "HKD",
                    "HUF",
                    "IMP",
                    "ISK",
                    "ISJ",
                    "INR",
                    "IDR",
                    "IRR",
                    "IQD",
                    "IEP",
                    "ILS",
                    "ILP",
                    "ILR",
                    "ITL",
                    "JMD",
                    "JPY",
                    "JOD",
                    "KZT",
                    "KES",
                    "KWD",
                    "KGS",
                    "LAK",
                    "LVL",
                    "LVR",
                    "LBP",
                    "LSL",
                    "LRD",
                    "LYD",
                    "LTL",
                    "LTT",
                    "LUL",
                    "LUC",
                    "LUF",
                    "MOP",
                    "MKD",
                    "MKN",
                    "MGA",
                    "MGF",
                    "MWK",
                    "MYR",
                    "MVR",
                    "MVP",
                    "MLF",
                    "MTL",
                    "MTP",
                    "MRU",
                    "MRO",
                    "MUR",
                    "MXV",
                    "MXN",
                    "MXP",
                    "MDC",
                    "MDL",
                    "MCF",
                    "MNT",
                    "MAD",
                    "MAF",
                    "MZE",
                    "MZN",
                    "MZM",
                    "MMK",
                    "NAD",
                    "NPR",
                    "ANG",
                    "TWD",
                    "NZD",
                    "NIO",
                    "NIC",
                    "NGN",
                    "KPW",
                    "NOK",
                    "OMR",
                    "PKR",
                    "XPD",
                    "PAB",
                    "PGK",
                    "PYG",
                    "PEI",
                    "PEN",
                    "PES",
                    "PHP",
                    "XPT",
                    "PLN",
                    "PLZ",
                    "PTE",
                    "GWE",
                    "QAR",
                    "XRE",
                    "RHD",
                    "RON",
                    "ROL",
                    "RUB",
                    "RUR",
                    "RWF",
                    "SVC",
                    "WST",
                    "SAR",
                    "RSD",
                    "CSD",
                    "SCR",
                    "SLL",
                    "XAG",
                    "SGD",
                    "SKK",
                    "SIT",
                    "SBD",
                    "SOS",
                    "ZAR",
                    "ZAL",
                    "KRH",
                    "KRW",
                    "KRO",
                    "SSP",
                    "SUR",
                    "ESP",
                    "ESA",
                    "ESB",
                    "XDR",
                    "LKR",
                    "SHP",
                    "XSU",
                    "SDD",
                    "SDG",
                    "SDP",
                    "SRD",
                    "SRG",
                    "SZL",
                    "SEK",
                    "CHF",
                    "SYP",
                    "STN",
                    "STD",
                    "TVD",
                    "TJR",
                    "TJS",
                    "TZS",
                    "XTS",
                    "THB",
                    "XXX",
                    "TPE",
                    "TOP",
                    "TTD",
                    "TND",
                    "TRY",
                    "TRL",
                    "TMT",
                    "TMM",
                    "USD",
                    "USN",
                    "USS",
                    "UGX",
                    "UGS",
                    "UAH",
                    "UAK",
                    "AED",
                    "UYW",
                    "UYU",
                    "UYP",
                    "UYI",
                    "UZS",
                    "VUV",
                    "VES",
                    "VEB",
                    "VEF",
                    "VND",
                    "VNN",
                    "CHE",
                    "CHW",
                    "XOF",
                    "YDD",
                    "YER",
                    "YUN",
                    "YUD",
                    "YUM",
                    "YUR",
                    "ZWN",
                    "ZRN",
                    "ZRZ",
                    "ZMW",
                    "ZMK",
                    "ZWD",
                    "ZWR",
                    "ZWL"
                ],
                "type": "string",
                "description": "* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                "x-merge-category": "accounting"
            },
            "DataPassthroughRequest": {
                "type": "object",
                "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
                "properties": {
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MethodEnum"
                            }
                        ],
                        "example": "POST"
                    },
                    "path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the request in the third party's platform.",
                        "example": "/scooters"
                    },
                    "base_url_override": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "An optional override of the third party's base url for the request.",
                        "example": "https://api.example.com"
                    },
                    "data": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The data with the request. You must include a `request_format` parameter matching the data's format",
                        "example": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
                    },
                    "multipart_form_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultipartFormFieldRequest"
                        },
                        "nullable": true,
                        "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`."
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "nullable": true,
                        "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                        "example": {
                            "EXTRA-HEADER": "value"
                        }
                    },
                    "request_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RequestFormatEnum"
                            }
                        ],
                        "nullable": true,
                        "example": "JSON"
                    },
                    "normalize_response": {
                        "type": "boolean",
                        "description": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`."
                    }
                },
                "required": [
                    "method",
                    "path"
                ],
                "x-merge-category": "accounting"
            },
            "DebugModeLog": {
                "type": "object",
                "properties": {
                    "log_id": {
                        "type": "string",
                        "example": "99433219-8017-4acd-bb3c-ceb23d663832"
                    },
                    "dashboard_view": {
                        "type": "string",
                        "example": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832"
                    },
                    "log_summary": {
                        "$ref": "#/components/schemas/DebugModelLogSummary",
                        "example": {
                            "url": "www.exampleintegration.com/api/v1/exampleapi",
                            "method": "POST",
                            "status_code": 200
                        }
                    }
                },
                "required": [
                    "dashboard_view",
                    "log_id",
                    "log_summary"
                ],
                "x-merge-sample-json": "{\"log_id\": \"99433219-8017-4acd-bb3c-ceb23d663832\", \"dashboard_view\": \"https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832\", \"log_summary\": {\"url\": \"www.exampleintegration.com/api/v1/exampleapi\", \"method\": \"POST\", \"status_code\": 200}}",
                "x-merge-category": "accounting"
            },
            "DebugModelLogSummary": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "www.exampleintegration.com/api/v1/exampleapi"
                    },
                    "method": {
                        "type": "string",
                        "example": "POST"
                    },
                    "status_code": {
                        "type": "integer",
                        "example": 200
                    }
                },
                "required": [
                    "method",
                    "status_code",
                    "url"
                ],
                "x-merge-sample-json": "{\"url\": \"www.exampleintegration.com/api/v1/exampleapi\", \"method\": \"POST\", \"status_code\": 200}",
                "x-merge-category": "accounting"
            },
            "EnabledActionsEnum": {
                "enum": [
                    "READ",
                    "WRITE"
                ],
                "type": "string",
                "description": "* `READ` - READ\n* `WRITE` - WRITE",
                "x-merge-category": "accounting"
            },
            "EncodingEnum": {
                "enum": [
                    "RAW",
                    "BASE64",
                    "GZIP_BASE64"
                ],
                "type": "string",
                "description": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                "x-merge-category": "accounting"
            },
            "EndUserDetailsRequest": {
                "type": "object",
                "properties": {
                    "end_user_email_address": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
                        "maxLength": 100,
                        "example": "example@gmail.com"
                    },
                    "end_user_organization_name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Your end user's organization.",
                        "maxLength": 100,
                        "example": "Test Organization"
                    },
                    "end_user_origin_id": {
                        "type": "string",
                        "minLength": 1,
                        "description": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
                        "maxLength": 100,
                        "example": "12345"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoriesEnum"
                        },
                        "description": "The integration categories to show in Merge Link.",
                        "example": [
                            "hris",
                            "ats"
                        ]
                    },
                    "integration": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://docs.merge.dev/guides/merge-link/single-integration/.",
                        "example": "bamboohr"
                    },
                    "link_expiry_mins": {
                        "type": "integer",
                        "maximum": 10080,
                        "minimum": 30,
                        "default": 30,
                        "description": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30."
                    },
                    "should_create_magic_link_url": {
                        "type": "boolean",
                        "nullable": true,
                        "default": false,
                        "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/integrations-fast-say-hello-to-magic-link."
                    },
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommonModelScopesBodyRequest"
                        },
                        "nullable": true,
                        "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account."
                    },
                    "category_common_model_scopes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializerRequest"
                            }
                        },
                        "nullable": true,
                        "description": "When creating a Link Token, you can set permissions for Common Models that will apply to the account that is going to be linked. Any model or field not specified in link token payload will default to existing settings.",
                        "example": {
                            "hris": [
                                {
                                    "model_name": "Employee",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "first_name",
                                            "last_name",
                                            "personal_email"
                                        ],
                                        "disabled": [
                                            "preferred_name"
                                        ]
                                    }
                                },
                                {
                                    "model_name": "Employment",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": false
                                        },
                                        "WRITE": {
                                            "is_enabled": false
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "effective_date"
                                        ]
                                    }
                                }
                            ],
                            "ats": [
                                {
                                    "model_name": "Job",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    },
                                    "field_permissions": {
                                        "enabled": [
                                            "name"
                                        ],
                                        "disabled": [
                                            "description"
                                        ]
                                    }
                                },
                                {
                                    "model_name": "Department",
                                    "model_permissions": {
                                        "READ": {
                                            "is_enabled": true
                                        },
                                        "WRITE": {
                                            "is_enabled": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "language": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The language code for the language to localize Merge Link to.",
                        "maxLength": 2
                    }
                },
                "required": [
                    "categories",
                    "end_user_email_address",
                    "end_user_organization_name",
                    "end_user_origin_id"
                ],
                "x-merge-category": "accounting"
            },
            "ErrorValidationProblem": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/ValidationProblemSource",
                        "example": {
                            "pointer": "/model/custom_fields"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Missing Required Field"
                    },
                    "detail": {
                        "type": "string",
                        "example": "custom_fields is a required field on model."
                    },
                    "problem_type": {
                        "type": "string",
                        "example": "MISSING_REQUIRED_FIELD"
                    }
                },
                "required": [
                    "detail",
                    "problem_type",
                    "title"
                ],
                "x-merge-category": "accounting"
            },
            "EventTypeEnum": {
                "enum": [
                    "CREATED_REMOTE_PRODUCTION_API_KEY",
                    "DELETED_REMOTE_PRODUCTION_API_KEY",
                    "CREATED_TEST_API_KEY",
                    "DELETED_TEST_API_KEY",
                    "REGENERATED_PRODUCTION_API_KEY",
                    "INVITED_USER",
                    "TWO_FACTOR_AUTH_ENABLED",
                    "TWO_FACTOR_AUTH_DISABLED",
                    "DELETED_LINKED_ACCOUNT",
                    "CREATED_DESTINATION",
                    "DELETED_DESTINATION",
                    "CHANGED_DESTINATION",
                    "CHANGED_SCOPES",
                    "CHANGED_PERSONAL_INFORMATION",
                    "CHANGED_ORGANIZATION_SETTINGS",
                    "ENABLED_INTEGRATION",
                    "DISABLED_INTEGRATION",
                    "ENABLED_CATEGORY",
                    "DISABLED_CATEGORY",
                    "CHANGED_PASSWORD",
                    "RESET_PASSWORD",
                    "ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION",
                    "ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT",
                    "DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION",
                    "DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT",
                    "CREATED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "CREATED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "CHANGED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "CHANGED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "DELETED_INTEGRATION_WIDE_FIELD_MAPPING",
                    "DELETED_LINKED_ACCOUNT_FIELD_MAPPING",
                    "FORCED_LINKED_ACCOUNT_RESYNC",
                    "MUTED_ISSUE",
                    "GENERATED_MAGIC_LINK"
                ],
                "type": "string",
                "description": "* `CREATED_REMOTE_PRODUCTION_API_KEY` - CREATED_REMOTE_PRODUCTION_API_KEY\n* `DELETED_REMOTE_PRODUCTION_API_KEY` - DELETED_REMOTE_PRODUCTION_API_KEY\n* `CREATED_TEST_API_KEY` - CREATED_TEST_API_KEY\n* `DELETED_TEST_API_KEY` - DELETED_TEST_API_KEY\n* `REGENERATED_PRODUCTION_API_KEY` - REGENERATED_PRODUCTION_API_KEY\n* `INVITED_USER` - INVITED_USER\n* `TWO_FACTOR_AUTH_ENABLED` - TWO_FACTOR_AUTH_ENABLED\n* `TWO_FACTOR_AUTH_DISABLED` - TWO_FACTOR_AUTH_DISABLED\n* `DELETED_LINKED_ACCOUNT` - DELETED_LINKED_ACCOUNT\n* `CREATED_DESTINATION` - CREATED_DESTINATION\n* `DELETED_DESTINATION` - DELETED_DESTINATION\n* `CHANGED_DESTINATION` - CHANGED_DESTINATION\n* `CHANGED_SCOPES` - CHANGED_SCOPES\n* `CHANGED_PERSONAL_INFORMATION` - CHANGED_PERSONAL_INFORMATION\n* `CHANGED_ORGANIZATION_SETTINGS` - CHANGED_ORGANIZATION_SETTINGS\n* `ENABLED_INTEGRATION` - ENABLED_INTEGRATION\n* `DISABLED_INTEGRATION` - DISABLED_INTEGRATION\n* `ENABLED_CATEGORY` - ENABLED_CATEGORY\n* `DISABLED_CATEGORY` - DISABLED_CATEGORY\n* `CHANGED_PASSWORD` - CHANGED_PASSWORD\n* `RESET_PASSWORD` - RESET_PASSWORD\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - ENABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - ENABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION` - DISABLED_REDACT_UNMAPPED_DATA_FOR_ORGANIZATION\n* `DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT` - DISABLED_REDACT_UNMAPPED_DATA_FOR_LINKED_ACCOUNT\n* `CREATED_INTEGRATION_WIDE_FIELD_MAPPING` - CREATED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CREATED_LINKED_ACCOUNT_FIELD_MAPPING` - CREATED_LINKED_ACCOUNT_FIELD_MAPPING\n* `CHANGED_INTEGRATION_WIDE_FIELD_MAPPING` - CHANGED_INTEGRATION_WIDE_FIELD_MAPPING\n* `CHANGED_LINKED_ACCOUNT_FIELD_MAPPING` - CHANGED_LINKED_ACCOUNT_FIELD_MAPPING\n* `DELETED_INTEGRATION_WIDE_FIELD_MAPPING` - DELETED_INTEGRATION_WIDE_FIELD_MAPPING\n* `DELETED_LINKED_ACCOUNT_FIELD_MAPPING` - DELETED_LINKED_ACCOUNT_FIELD_MAPPING\n* `FORCED_LINKED_ACCOUNT_RESYNC` - FORCED_LINKED_ACCOUNT_RESYNC\n* `MUTED_ISSUE` - MUTED_ISSUE\n* `GENERATED_MAGIC_LINK` - GENERATED_MAGIC_LINK",
                "x-merge-category": "accounting"
            },
            "Expense": {
                "type": "object",
                "description": "# The Expense Object\n### Description\nThe `Expense` object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each `Expense` object is dedicated to a grouping of expenses, with each expense recorded in the lines object.\n\nThe `Expense` object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and `Expense` objects with a positive amount are refunds to those purchases.\n\n### Usage Example\nFetch from the `GET Expense` endpoint and view a company's expense.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "088899"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the transaction occurred."
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the expense was created.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's payment account.",
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's contact.",
                        "example": "3d263469-51a1-4766-9205-f6c997826be1",
                        "x-merge-expands-to": "Contact"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The expense's total amount.",
                        "example": 10000.0
                    },
                    "sub_total": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The expense's total amount before tax."
                    },
                    "total_tax_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The expense's total tax amount."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The expense's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The expense's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the expense belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The expense's private note.",
                        "example": "New employee supplies"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExpenseLine"
                        },
                        "example": [
                            {
                                "remote_id": "121222",
                                "net_amount": 25.54,
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "account": "2a56344a-a491-11ec-b909-0242ac120002",
                                "contact": "c640b80b-fac9-409f-aa19-1f9221aec445",
                                "description": "MacBook Pro",
                                "exchange_rate": "2.9",
                                "remote_was_deleted": false
                            },
                            {
                                "remote_id": "121223",
                                "net_amount": 10,
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "account": "2a56344a-a491-11ec-b909-0242ac120002",
                                "description": "Desk Lamp"
                            }
                        ]
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the Expense was generated in.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"accounting_period\": \"AccountingPeriod\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "ExpenseEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/ExpenseRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "ExpenseLine": {
                "type": "object",
                "description": "# The ExpenseLine Object\n### Description\nThe `ExpenseLine` object is used to represent an expense's line items.\n\n### Usage Example\nFetch from the `GET Expense` endpoint and view the expense's line items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line's item.",
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "Item"
                    },
                    "net_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line's net amount.",
                        "example": 25.54
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the line belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The expense line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's payment account.",
                        "example": "2a56344a-a491-11ec-b909-0242ac120002",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's contact.",
                        "example": "c640b80b-fac9-409f-aa19-1f9221aec445",
                        "x-merge-expands-to": "Contact"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of the item that was purchased by the company.",
                        "example": "MacBook Pro"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The expense line item's exchange rate.",
                        "example": "2.9"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"account\": \"Account\", \"contact\": \"Contact\", \"item\": \"Item\", \"tracking_categories\": \"TrackingCategory\", \"tracking_category\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "ExpenseLineRequest": {
                "type": "object",
                "description": "# The ExpenseLine Object\n### Description\nThe `ExpenseLine` object is used to represent an expense's line items.\n\n### Usage Example\nFetch from the `GET Expense` endpoint and view the expense's line items.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line's item.",
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "Item"
                    },
                    "net_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line's net amount.",
                        "example": 25.54
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the line belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The expense line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's payment account.",
                        "example": "2a56344a-a491-11ec-b909-0242ac120002",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's contact.",
                        "example": "c640b80b-fac9-409f-aa19-1f9221aec445",
                        "x-merge-expands-to": "Contact"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of the item that was purchased by the company.",
                        "example": "MacBook Pro"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The expense line item's exchange rate.",
                        "example": "2.9"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"contact\": \"Contact\", \"item\": \"Item\", \"tracking_categories\": \"TrackingCategory\", \"tracking_category\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "ExpenseRequest": {
                "type": "object",
                "description": "# The Expense Object\n### Description\nThe `Expense` object is used to represent a direct purchase by a business, typically made with a check, credit card, or cash. Each `Expense` object is dedicated to a grouping of expenses, with each expense recorded in the lines object.\n\nThe `Expense` object is used also used to represent refunds to direct purchases. Refunds can be distinguished from purchases by the amount sign of the records. Expense objects with a negative amount are purchases and `Expense` objects with a positive amount are refunds to those purchases.\n\n### Usage Example\nFetch from the `GET Expense` endpoint and view a company's expense.",
                "properties": {
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the transaction occurred."
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's payment account.",
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The expense's contact.",
                        "example": "3d263469-51a1-4766-9205-f6c997826be1",
                        "x-merge-expands-to": "Contact"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The expense's total amount.",
                        "example": 10000.0
                    },
                    "sub_total": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The expense's total amount before tax."
                    },
                    "total_tax_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The expense's total tax amount."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The expense's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The expense's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the expense belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The expense's private note.",
                        "example": "New employee supplies"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExpenseLineRequest"
                        },
                        "example": [
                            {
                                "remote_id": "121222",
                                "net_amount": 25.54,
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "account": "2a56344a-a491-11ec-b909-0242ac120002",
                                "contact": "c640b80b-fac9-409f-aa19-1f9221aec445",
                                "description": "MacBook Pro",
                                "exchange_rate": "2.9",
                                "remote_was_deleted": false
                            },
                            {
                                "remote_id": "121223",
                                "net_amount": 10,
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "item": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "account": "2a56344a-a491-11ec-b909-0242ac120002",
                                "description": "Desk Lamp"
                            }
                        ]
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the Expense was generated in.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"accounting_period\": \"AccountingPeriod\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "ExpenseResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Expense"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "ExternalTargetFieldAPI": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": "example_target_field_name"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": "this is a example description of a target field"
                    },
                    "is_mapped": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true,
                        "example": true
                    }
                },
                "x-merge-category": "accounting"
            },
            "ExternalTargetFieldAPIResponse": {
                "type": "object",
                "properties": {
                    "Account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "AccountingAttachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "BalanceSheet": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "CashFlowStatement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "CompanyInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "IncomeStatement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "CreditNote": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Item": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "PurchaseOrder": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "TrackingCategory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "JournalEntry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "TaxRate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Invoice": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Payment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Expense": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "VendorCredit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "Transaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    },
                    "GeneralLedgerTransaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalTargetFieldAPI"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "FieldMappingApiInstance": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "is_integration_wide": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "target_field": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "is_organization_wide": {
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "description",
                            "is_organization_wide",
                            "name"
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "example": {
                            "name": "example_target_field_name",
                            "description": "this is a example description of a target field",
                            "is_organization_wide": true
                        }
                    },
                    "remote_field": {
                        "type": "object",
                        "properties": {
                            "remote_key_name": {
                                "type": "string"
                            },
                            "schema": {
                                "type": "object",
                                "additionalProperties": {}
                            },
                            "remote_endpoint_info": {
                                "type": "object",
                                "properties": {
                                    "method": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "url_path": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "field_traversal_path": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "field_traversal_path",
                                    "method",
                                    "url_path"
                                ]
                            }
                        },
                        "required": [
                            "remote_endpoint_info",
                            "remote_key_name",
                            "schema"
                        ],
                        "nullable": true,
                        "readOnly": true,
                        "example": {
                            "remote_key_name": "example_remote_field_key",
                            "schema": {
                                "type": "string"
                            },
                            "remote_endpoint_info": {
                                "method": "GET",
                                "url_path": "/example-url-path",
                                "field_traversal_path": [
                                    "string"
                                ]
                            }
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "FieldMappingApiInstanceResponse": {
                "type": "object",
                "properties": {
                    "Account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "AccountingAttachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "BalanceSheet": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "CashFlowStatement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "CompanyInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "IncomeStatement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "CreditNote": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Item": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "PurchaseOrder": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "TrackingCategory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "JournalEntry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "TaxRate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Invoice": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Payment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Expense": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "VendorCredit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "Transaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    },
                    "GeneralLedgerTransaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingApiInstance"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "FieldMappingInstanceResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/FieldMappingApiInstance"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "FieldPermissionDeserializer": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "array",
                        "items": {}
                    },
                    "disabled": {
                        "type": "array",
                        "items": {}
                    }
                },
                "x-merge-category": "accounting"
            },
            "FieldPermissionDeserializerRequest": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "array",
                        "items": {}
                    },
                    "disabled": {
                        "type": "array",
                        "items": {}
                    }
                },
                "x-merge-category": "accounting"
            },
            "GenerateRemoteKeyRequest": {
                "type": "object",
                "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the remote key",
                        "example": "Remote Deployment Key 1"
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "accounting"
            },
            "IncomeStatement": {
                "type": "object",
                "description": "# The IncomeStatement Object\n### Description\nThe `IncomeStatement` object is used to represent a company’s income, the cost of sales, operating expenses, and other non-operating expenses. The object also includes other important values like gross profit, gross operating profit, and net income. This represents a period of time (month, quarter, or year).\n\n### Usage Example\nFetch from the `GET IncomeStatement` endpoint and view a company's income statement for a given period.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "1342348"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The income statement's name.",
                        "example": "IncomeStatement"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The income statement's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the income statement belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "start_period": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The income statement's start period."
                    },
                    "end_period": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The income statement's end period."
                    },
                    "income": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10299",
                                "name": "Total Income",
                                "value": 325.0,
                                "sub_items": [
                                    {
                                        "remote_id": "10200",
                                        "name": "Landscaping Services",
                                        "value": 425,
                                        "sub_items": []
                                    },
                                    {
                                        "remote_id": "10201",
                                        "name": "Pest Control Services",
                                        "value": -100,
                                        "sub_items": []
                                    }
                                ]
                            }
                        ]
                    },
                    "cost_of_sales": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10299",
                                "name": "Total COGS",
                                "value": 25.0,
                                "sub_items": [
                                    {
                                        "remote_id": "10200",
                                        "name": "Supplies",
                                        "value": 10,
                                        "sub_items": []
                                    }
                                ]
                            }
                        ]
                    },
                    "gross_profit": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The revenue minus the cost of sale.",
                        "example": 300.0
                    },
                    "operating_expenses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10299",
                                "name": "Total Operating Expenses",
                                "value": 100.0,
                                "sub_items": []
                            }
                        ]
                    },
                    "net_operating_income": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The revenue minus the operating expenses.",
                        "example": 200.0
                    },
                    "non_operating_expenses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReportItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10299",
                                "name": "Total Non-Operating Expenses",
                                "value": 100.0,
                                "sub_items": []
                            }
                        ]
                    },
                    "net_income": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The gross profit minus the total expenses.",
                        "example": 100.0
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"company\": \"CompanyInfo\"}",
                "x-merge-category": "accounting"
            },
            "IndividualCommonModelScopeDeserializer": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "type": "string"
                    },
                    "model_permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ModelPermissionDeserializer"
                        }
                    },
                    "field_permissions": {
                        "$ref": "#/components/schemas/FieldPermissionDeserializer"
                    }
                },
                "required": [
                    "model_name"
                ],
                "x-merge-category": "accounting"
            },
            "IndividualCommonModelScopeDeserializerRequest": {
                "type": "object",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "minLength": 1
                    },
                    "model_permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ModelPermissionDeserializerRequest"
                        }
                    },
                    "field_permissions": {
                        "$ref": "#/components/schemas/FieldPermissionDeserializerRequest"
                    }
                },
                "required": [
                    "model_name"
                ],
                "x-merge-category": "accounting"
            },
            "Invoice": {
                "type": "object",
                "description": "# The Invoice Object\n### Description\nThe `Invoice` object represents an itemized record of goods and/or services sold to a customer.\n\n### Usage Example\nFetch from the `LIST Invoices` endpoint and view a company's invoices.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "990110"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "Whether the invoice is an accounts receivable or accounts payable. If `type` is `ACCOUNTS_PAYABLE`, the invoice is a bill. If `type` is `ACCOUNTS_RECEIVABLE`, it is an invoice.\n\n* `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE\n* `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE",
                        "example": "ACCOUNTS_RECEIVABLE"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The invoice's contact.",
                        "example": "022a2bef-57e5-4def-8ed2-7c41bd9a5ed8",
                        "x-merge-expands-to": "Contact"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The invoice's number.",
                        "example": "AIQ12546"
                    },
                    "issue_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoice's issue date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoice's due date.",
                        "example": "2020-04-15T00:00:00Z"
                    },
                    "paid_on_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoice's paid date.",
                        "example": "2020-04-01T00:00:00Z"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The invoice's private note.",
                        "example": "Weekly Payment"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the invoice belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The invoice's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The invoice's exchange rate.",
                        "example": "2.9"
                    },
                    "total_discount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total discounts applied to the total cost."
                    },
                    "sub_total": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total amount being paid before taxes.",
                        "example": 100
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The status of the invoice.\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `SUBMITTED` - SUBMITTED\n* `PARTIALLY_PAID` - PARTIALLY_PAID\n* `OPEN` - OPEN\n* `VOID` - VOID",
                        "example": "DRAFT"
                    },
                    "total_tax_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total amount being paid in taxes.",
                        "example": 5
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The invoice's total amount.",
                        "example": 105
                    },
                    "balance": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The invoice's remaining balance.",
                        "example": 105
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's invoice entry was updated.",
                        "example": "2020-04-01T00:00:00Z"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "7dc5ca17-d311-44cd-9ce0-333080367a18",
                            "6aa0700c-48e1-4c4a-8162-02e6a582df05",
                            "8c933d61-8f5b-4360-ac0c-c9dc87bee763"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
                        ],
                        "description": "Array of `Payment` object IDs.",
                        "x-merge-expands-to": "Payment"
                    },
                    "applied_payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "9017594e-dc33-4113-a5d2-b0f928e34fdd"
                        ],
                        "description": "A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.",
                        "x-merge-expands-to": "PaymentLineItemWithPayment"
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceLineItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "8765432",
                                "description": "Pickleball lessons",
                                "unit_price": 50.0,
                                "quantity": 1.0,
                                "total_amount": 50.0,
                                "currency": "USD",
                                "exchange_rate": "2.9",
                                "item": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                                "account": "cd0f32d4-a493-11ec-b909-0242ac120002",
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "remote_data": [
                                    {
                                        "path": "/actions",
                                        "data": [
                                            "Varies by platform"
                                        ]
                                    }
                                ]
                            }
                        ],
                        "x-merge-expands-to": "InvoiceLineItem"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the Invoice was generated in.",
                        "example": "7dc5ca17-d311-44cd-9ce0-333080367a18",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "purchase_orders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "e7378d8f-3992-4c2a-8417-ebdc4f2bfeb7",
                            "dd70ca2f-b120-46fa-889a-9604037f45fd",
                            "889b281d-739c-4759-95b8-0aedb3947131"
                        ],
                        "x-merge-expands-to": "PurchaseOrder"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"applied_payments\": \"PaymentLineItemWithPayment\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"line_items\": \"InvoiceLineItem\", \"payments\": \"Payment\", \"purchase_orders\": \"PurchaseOrder\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "InvoiceEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/InvoiceRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "InvoiceLineItem": {
                "type": "object",
                "description": "# The InvoiceLineItem Object\n### Description\nThe `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer.\n\n### Usage Example\nFetch from the `GET Invoice` endpoint and view the invoice's line items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "8765432"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The line item's description.",
                        "example": "Pickleball lessons"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's unit price.",
                        "example": 50.0
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's quantity.",
                        "example": 1.0
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's total amount.",
                        "example": 50.0
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The line item's exchange rate.",
                        "example": "2.9"
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                        "x-merge-expands-to": "Item"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "cd0f32d4-a493-11ec-b909-0242ac120002",
                        "x-merge-expands-to": "Account"
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the line item belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"account\": \"Account\", \"item\": \"Item\", \"tracking_categories\": \"TrackingCategory\", \"tracking_category\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "InvoiceLineItemRequest": {
                "type": "object",
                "description": "# The InvoiceLineItem Object\n### Description\nThe `InvoiceLineItem` object represents an itemized record of goods and/or services sold to a customer.\n\n### Usage Example\nFetch from the `GET Invoice` endpoint and view the invoice's line items.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "8765432"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The line item's description.",
                        "example": "Pickleball lessons"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's unit price.",
                        "example": 50.0
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's quantity.",
                        "example": 1.0
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's total amount.",
                        "example": 50.0
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The line item's exchange rate.",
                        "example": "2.9"
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                        "x-merge-expands-to": "Item"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "cd0f32d4-a493-11ec-b909-0242ac120002",
                        "x-merge-expands-to": "Account"
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the line item belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"item\": \"Item\", \"tracking_categories\": \"TrackingCategory\", \"tracking_category\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "InvoiceRequest": {
                "type": "object",
                "description": "# The Invoice Object\n    ### Description\n    The `Invoice` object represents an itemized record of goods and/or services sold to a customer.\nIf type = accounts_payable `Invoice` is a bill, if type = accounts_receivable it's an invoice.\n\n    ### Usage Example\n    Fetch from the `LIST Invoices` endpoint and view a company's invoices.",
                "properties": {
                    "type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "Whether the invoice is an accounts receivable or accounts payable. If `type` is `ACCOUNTS_PAYABLE`, the invoice is a bill. If `type` is `ACCOUNTS_RECEIVABLE`, it is an invoice.\n\n* `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE\n* `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The invoice's contact.",
                        "x-merge-expands-to": "Contact"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The invoice's number."
                    },
                    "issue_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoice's issue date."
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoice's due date."
                    },
                    "paid_on_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The invoice's paid date."
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The invoice's private note."
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The status of the invoice.\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `SUBMITTED` - SUBMITTED\n* `PARTIALLY_PAID` - PARTIALLY_PAID\n* `OPEN` - OPEN\n* `VOID` - VOID"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the invoice belongs to.",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The invoice's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The invoice's exchange rate."
                    },
                    "total_discount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total discounts applied to the total cost."
                    },
                    "sub_total": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total amount being paid before taxes."
                    },
                    "total_tax_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total amount being paid in taxes."
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The invoice's total amount."
                    },
                    "balance": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The invoice's remaining balance."
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "description": "Array of `Payment` object IDs.",
                        "x-merge-expands-to": "Payment"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceLineItemRequest"
                        },
                        "x-merge-expands-to": "InvoiceLineItem"
                    },
                    "purchase_orders": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "x-merge-expands-to": "PurchaseOrder"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"applied_payments\": \"PaymentLineItemWithPayment\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"line_items\": \"InvoiceLineItem\", \"payments\": \"Payment\", \"purchase_orders\": \"PurchaseOrder\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "InvoiceResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Invoice"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "InvoiceStatusEnum": {
                "enum": [
                    "PAID",
                    "DRAFT",
                    "SUBMITTED",
                    "PARTIALLY_PAID",
                    "OPEN",
                    "VOID"
                ],
                "type": "string",
                "description": "* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `SUBMITTED` - SUBMITTED\n* `PARTIALLY_PAID` - PARTIALLY_PAID\n* `OPEN` - OPEN\n* `VOID` - VOID",
                "x-merge-category": "accounting"
            },
            "InvoiceTypeEnum": {
                "enum": [
                    "ACCOUNTS_RECEIVABLE",
                    "ACCOUNTS_PAYABLE"
                ],
                "type": "string",
                "description": "* `ACCOUNTS_RECEIVABLE` - ACCOUNTS_RECEIVABLE\n* `ACCOUNTS_PAYABLE` - ACCOUNTS_PAYABLE",
                "x-merge-category": "accounting"
            },
            "Issue": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IssueStatusEnum"
                            }
                        ],
                        "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                        "example": "ONGOING"
                    },
                    "error_description": {
                        "type": "string",
                        "example": "Missing Permissions"
                    },
                    "end_user": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
                    },
                    "first_incident_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-12-05T16:19:15.161Z"
                    },
                    "last_incident_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "example": "2022-12-05T16:19:15.161Z"
                    },
                    "is_muted": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "error_details": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true,
                        "example": [
                            "Missing employee permissions.",
                            "Missing time off permissions."
                        ]
                    }
                },
                "required": [
                    "error_description"
                ],
                "x-merge-category": "accounting"
            },
            "IssueStatusEnum": {
                "enum": [
                    "ONGOING",
                    "RESOLVED"
                ],
                "type": "string",
                "description": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
                "x-merge-category": "accounting"
            },
            "Item": {
                "type": "object",
                "description": "# The Item Object\n### Description\nThe `Item` object refers to the goods involved in a transaction.\n\n### Usage Example\nFetch from the `LIST Items` endpoint and view a company's items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "d2f972d0-2526-434b-9409-4c3b468e08f0"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "12374"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The item's name.",
                        "example": "Pickleball Paddle"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7d1Enum"
                            }
                        ],
                        "nullable": true,
                        "description": "The item's status.\n\n* `ACTIVE` - ACTIVE\n* `ARCHIVED` - ARCHIVED",
                        "example": "ACTIVE"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The item's unit price.",
                        "example": 10.0
                    },
                    "purchase_price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The price at which the item is purchased from a vendor.",
                        "example": 25.0
                    },
                    "purchase_account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "References the default account used to record a purchase of the item.",
                        "example": "9871b4a9-f5d2-4f3b-a66b-dfedbed42c46",
                        "x-merge-expands-to": "Account"
                    },
                    "sales_account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "References the default account used to record a sale.",
                        "example": "3872b4c9-f5d2-4f3b-a66b-dfedbed42c49",
                        "x-merge-expands-to": "Account"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the item belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's item note was updated.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"company\": \"CompanyInfo\", \"purchase_account\": \"Account\", \"sales_account\": \"Account\"}",
                "x-merge-category": "accounting"
            },
            "JournalEntry": {
                "type": "object",
                "description": "# The JournalEntry Object\n### Description\nA `JournalEntry` is a record of a transaction or event that is entered into a company's accounting system.\n\nThe `JournalEntry` common model contains records that are automatically created as a result of a certain type of transaction, like an Invoice, and records that are manually created against a company’s ledger.\n\nThe lines of a given `JournalEntry` object should always sum to 0. A positive `net_amount` means the line represents a debit and a negative net_amount represents a credit.\n\n### Usage Example\nFetch from the `GET JournalEntry` endpoint and view a company's journey entry.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "088899"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The journal entry's transaction date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's journal entry was created.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's journal entry was updated.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
                        ],
                        "description": "Array of `Payment` object IDs.",
                        "x-merge-expands-to": "Payment"
                    },
                    "applied_payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "4311155d-f236-4a5d-9e0f-1cb167e38f95"
                        ],
                        "description": "A list of the Payment Applied to Lines common models related to a given Invoice, Credit Note, or Journal Entry.",
                        "x-merge-expands-to": "PaymentLineItemWithPayment"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The journal entry's private note.",
                        "example": "Weekly Payment"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The journal's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The journal entry's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the journal entry belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JournalLine"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "121222",
                                "account": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                                "net_amount": 25.54,
                                "tracking_category": "d25d609b-945f-4762-b55a-1c8fb220c43c",
                                "tracking_categories": [
                                    "d25d609b-945f-4762-b55a-1c8fb220c43c",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "contact": "d2d5ea3c-b032-11ec-b909-0242ac120002",
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "description": "Cash payment for lunch",
                                "exchange_rate": "2.9",
                                "remote_was_deleted": false
                            },
                            {
                                "remote_id": "121223",
                                "account": "f963f34d-3d2f-4f77-b557-cf36bc7e6498",
                                "net_amount": 10.0
                            }
                        ],
                        "x-merge-expands-to": "JournalLine"
                    },
                    "journal_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "Reference number for identifying journal entries.",
                        "maxLength": 70,
                        "example": "42"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "posting_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PostingStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The journal's posting status.\n\n* `UNPOSTED` - UNPOSTED\n* `POSTED` - POSTED",
                        "example": "POSTED"
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the JournalEntry was generated in.",
                        "example": "655c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"applied_payments\": \"PaymentLineItemWithPayment\", \"company\": \"CompanyInfo\", \"lines\": \"JournalLine\", \"payments\": \"Payment\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "JournalEntryEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/JournalEntryRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "JournalEntryRequest": {
                "type": "object",
                "description": "# The JournalEntry Object\n### Description\nThe `JournalEntry` object is used to get a record of all manually created entries made in a company’s general ledger. The journal line items for each journal entry should sum to zero.\n\n### Usage Example\nFetch from the `GET JournalEntry` endpoint and view a company's journey entry.",
                "properties": {
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The journal entry's transaction date."
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "description": "Array of `Payment` object IDs.",
                        "x-merge-expands-to": "Payment"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "The journal entry's private note."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The journal's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The journal entry's exchange rate."
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the journal entry belongs to.",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JournalLineRequest"
                        },
                        "x-merge-expands-to": "JournalLine"
                    },
                    "journal_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "Reference number for identifying journal entries.",
                        "maxLength": 70
                    },
                    "posting_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PostingStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The journal's posting status.\n\n* `UNPOSTED` - UNPOSTED\n* `POSTED` - POSTED"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"applied_payments\": \"PaymentLineItemWithPayment\", \"company\": \"CompanyInfo\", \"lines\": \"JournalLine\", \"payments\": \"Payment\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "JournalEntryResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/JournalEntry"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "JournalLine": {
                "type": "object",
                "description": "# The JournalLine Object\n### Description\nThe `JournalLine` object is used to represent a journal entry's line items.\n\n### Usage Example\nFetch from the `GET JournalEntry` endpoint and view the journal entry's line items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "Account"
                    },
                    "net_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The value of the line item including taxes and other fees.",
                        "example": 25.54
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "d25d609b-945f-4762-b55a-1c8fb220c43c",
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "d25d609b-945f-4762-b55a-1c8fb220c43c",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The journal line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the journal entry belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "d2d5ea3c-b032-11ec-b909-0242ac120002"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The line's description.",
                        "example": "Cash payment for lunch"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The journal line item's exchange rate.",
                        "example": "2.9"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"account\": \"Account\", \"tracking_categories\": \"TrackingCategory\", \"tracking_category\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "JournalLineRequest": {
                "type": "object",
                "description": "# The JournalLine Object\n### Description\nThe `JournalLine` object is used to represent a journal entry's line items.\n\n### Usage Example\nFetch from the `GET JournalEntry` endpoint and view the journal entry's line items.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "Account"
                    },
                    "net_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The value of the line item including taxes and other fees.",
                        "example": 25.54
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "d25d609b-945f-4762-b55a-1c8fb220c43c",
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "d25d609b-945f-4762-b55a-1c8fb220c43c",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The journal line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the journal entry belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "d2d5ea3c-b032-11ec-b909-0242ac120002"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The line's description.",
                        "example": "Cash payment for lunch"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The journal line item's exchange rate.",
                        "example": "2.9"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"tracking_categories\": \"TrackingCategory\", \"tracking_category\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "LinkToken": {
                "type": "object",
                "properties": {
                    "link_token": {
                        "type": "string",
                        "example": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
                    },
                    "integration_name": {
                        "type": "string",
                        "example": "Lever"
                    },
                    "magic_link_url": {
                        "type": "string",
                        "example": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                    }
                },
                "required": [
                    "link_token"
                ],
                "x-merge-category": "accounting"
            },
            "LinkedAccountCommonModelScopeDeserializerRequest": {
                "type": "object",
                "properties": {
                    "common_models": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndividualCommonModelScopeDeserializerRequest"
                        },
                        "description": "The common models you want to update the scopes for",
                        "example": [
                            {
                                "model_name": "Employee",
                                "model_permissions": {
                                    "READ": {
                                        "is_enabled": true
                                    },
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                },
                                "field_permissions": {
                                    "enabled_fields": [
                                        "avatar",
                                        "home_location"
                                    ],
                                    "disabled_fields": [
                                        "work_location"
                                    ]
                                }
                            },
                            {
                                "model_name": "Benefit",
                                "model_permissions": {
                                    "WRITE": {
                                        "is_enabled": false
                                    }
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "common_models"
                ],
                "x-merge-category": "accounting"
            },
            "LinkedAccountCondition": {
                "type": "object",
                "properties": {
                    "condition_schema_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID indicating which condition schema to use for a specific condition."
                    },
                    "common_model": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The common model for a specific condition."
                    },
                    "native_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "operator": {
                        "type": "string",
                        "description": "The operator for a specific condition."
                    },
                    "value": {
                        "readOnly": true,
                        "description": "The value for a condition."
                    },
                    "field_name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "condition_schema_id",
                    "field_name",
                    "native_name",
                    "operator"
                ],
                "x-merge-category": "accounting"
            },
            "LinkedAccountConditionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The ID indicating which Linked Account Condition this is."
                    },
                    "condition_schema_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID indicating which condition schema to use for a specific condition."
                    },
                    "operator": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The operator for a specific condition."
                    },
                    "value": {
                        "description": "The value for a specific condition."
                    }
                },
                "required": [
                    "condition_schema_id",
                    "operator",
                    "value"
                ],
                "x-merge-category": "accounting"
            },
            "LinkedAccountSelectiveSyncConfiguration": {
                "type": "object",
                "properties": {
                    "linked_account_conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountCondition"
                        },
                        "readOnly": true,
                        "description": "The conditions belonging to a selective sync."
                    }
                },
                "x-merge-category": "accounting"
            },
            "LinkedAccountSelectiveSyncConfigurationListRequest": {
                "type": "object",
                "properties": {
                    "sync_configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountSelectiveSyncConfigurationRequest"
                        },
                        "description": "The selective syncs associated with a linked account."
                    }
                },
                "required": [
                    "sync_configurations"
                ],
                "x-merge-category": "accounting"
            },
            "LinkedAccountSelectiveSyncConfigurationRequest": {
                "type": "object",
                "properties": {
                    "linked_account_conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedAccountConditionRequest"
                        },
                        "description": "The conditions belonging to a selective sync."
                    }
                },
                "required": [
                    "linked_account_conditions"
                ],
                "x-merge-category": "accounting"
            },
            "LinkedAccountStatus": {
                "type": "object",
                "properties": {
                    "linked_account_status": {
                        "type": "string"
                    },
                    "can_make_request": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "can_make_request",
                    "linked_account_status"
                ],
                "x-merge-category": "accounting"
            },
            "MetaResponse": {
                "type": "object",
                "properties": {
                    "request_schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "type": "object",
                            "properties": {
                                "model": {
                                    "type": "object",
                                    "required": [
                                        "last_name",
                                        "first_name",
                                        "merge_categories",
                                        "new_york_city_neighborhood",
                                        "favorite_tv_shows",
                                        "favorite_watch"
                                    ],
                                    "properties": {
                                        "email_addresses": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "email_address_type": {
                                                        "type": "string",
                                                        "title": "email_address_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "email_addresses",
                                            "description": "Array of email_addresses objects"
                                        },
                                        "urls": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "url_type": {
                                                        "type": "string",
                                                        "title": "url_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "urls",
                                            "description": "Array of urls objects"
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "title": "first_name",
                                            "description": "The first name."
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "title": "last_name",
                                            "description": "The last name."
                                        },
                                        "phone_numbers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "value": {
                                                        "type": "string",
                                                        "title": "value"
                                                    },
                                                    "phone_number_type": {
                                                        "type": "string",
                                                        "title": "phone_number_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "phone_numbers",
                                            "description": "Array of phone_numbers objects"
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": "tags",
                                            "description": "Array of tags names"
                                        },
                                        "attachments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string",
                                                        "title": "id"
                                                    },
                                                    "file_url": {
                                                        "type": "string",
                                                        "title": "file_url"
                                                    },
                                                    "file_name": {
                                                        "type": "string",
                                                        "title": "file_name"
                                                    },
                                                    "attachment_type": {
                                                        "type": "string",
                                                        "title": "attachment_type"
                                                    },
                                                    "integration_params": {
                                                        "type": "object",
                                                        "title": "integration_params",
                                                        "properties": {}
                                                    },
                                                    "linked_account_params": {
                                                        "type": "object",
                                                        "title": "linked_account_params",
                                                        "properties": {}
                                                    }
                                                }
                                            },
                                            "title": "attachments",
                                            "description": "Array of attachments objects "
                                        },
                                        "merge_categories": {
                                            "type": "array",
                                            "categories": {
                                                "type": "string",
                                                "enum": [
                                                    "HRIS",
                                                    "ATS",
                                                    "Accounting",
                                                    "Ticketing",
                                                    "File Storage",
                                                    "CRM",
                                                    "Marketing Automation"
                                                ],
                                                "enum_information": [
                                                    {
                                                        "value": "HRIS",
                                                        "description": "Merge HRIS Category"
                                                    },
                                                    {
                                                        "value": "ATS",
                                                        "description": "Merge ATS Category"
                                                    },
                                                    {
                                                        "value": "Accounting",
                                                        "description": "Merge Accounting Category"
                                                    },
                                                    {
                                                        "value": "Ticketing",
                                                        "description": "Merge Ticketing Category"
                                                    },
                                                    {
                                                        "value": "File Storage",
                                                        "description": "Merge File Storage Category"
                                                    },
                                                    {
                                                        "value": "CRM",
                                                        "description": "Merge CRM Category"
                                                    },
                                                    {
                                                        "value": "Marketing Automation",
                                                        "description": "Merge Marketing Automation Category"
                                                    }
                                                ]
                                            },
                                            "title": "Merge Categories",
                                            "description": "Array of Merge's Unified API Categories"
                                        },
                                        "new_york_city_neighborhood": {
                                            "type": "string",
                                            "title": "Borough",
                                            "description": "One of the 5 Boroughs of New York City"
                                        },
                                        "favorite_tv_shows": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "title": "Favorite TV Shows",
                                            "description": "Array of TV Show objects on merge.tv_shows"
                                        },
                                        "favorite_watch": {
                                            "type": "string",
                                            "title": "Favorite Watch",
                                            "description": "Favorite watch of all time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "remote_field_classes": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "status": {
                        "$ref": "#/components/schemas/LinkedAccountStatus",
                        "example": {
                            "linked_account_status": "COMPLETE",
                            "can_make_request": true
                        }
                    },
                    "has_conditional_params": {
                        "type": "boolean"
                    },
                    "has_required_linked_account_params": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "has_conditional_params",
                    "has_required_linked_account_params",
                    "request_schema"
                ],
                "x-merge-category": "accounting"
            },
            "MethodEnum": {
                "enum": [
                    "GET",
                    "OPTIONS",
                    "HEAD",
                    "POST",
                    "PUT",
                    "PATCH",
                    "DELETE"
                ],
                "type": "string",
                "description": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
                "x-merge-category": "accounting"
            },
            "ModelOperation": {
                "type": "object",
                "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "example": "Candidate"
                    },
                    "available_operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "FETCH",
                            "CREATE"
                        ]
                    },
                    "required_post_parameters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "remote_user_id"
                        ]
                    },
                    "supported_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "first_name",
                            "last_name",
                            "company",
                            "title"
                        ]
                    }
                },
                "required": [
                    "available_operations",
                    "model_name",
                    "required_post_parameters",
                    "supported_fields"
                ],
                "x-merge-category": "accounting"
            },
            "ModelPermissionDeserializer": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "x-merge-category": "accounting"
            },
            "ModelPermissionDeserializerRequest": {
                "type": "object",
                "properties": {
                    "is_enabled": {
                        "type": "boolean"
                    }
                },
                "x-merge-category": "accounting"
            },
            "MultipartFormFieldRequest": {
                "type": "object",
                "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the form field",
                        "example": "resume"
                    },
                    "data": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The data for the form field.",
                        "example": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
                    },
                    "encoding": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EncodingEnum"
                            }
                        ],
                        "nullable": true,
                        "default": "RAW",
                        "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
                        "example": "BASE64"
                    },
                    "file_name": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The file name of the form field, if the field is for a file.",
                        "example": "resume.pdf"
                    },
                    "content_type": {
                        "type": "string",
                        "nullable": true,
                        "minLength": 1,
                        "description": "The MIME type of the file, if the field is for a file.",
                        "example": "application/pdf"
                    }
                },
                "required": [
                    "data",
                    "name"
                ],
                "x-merge-category": "accounting"
            },
            "OperatorSchema": {
                "type": "object",
                "properties": {
                    "operator": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operator for which an operator schema is defined."
                    },
                    "is_unique": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether the operator can be repeated multiple times."
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedAccountDetailsAndActionsList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountDetailsAndActions"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedAccountList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedAccountingAttachmentList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountingAttachment"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedAccountingPeriodList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountingPeriod"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedAuditLogEventList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AuditLogEvent"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedBalanceSheetList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BalanceSheet"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedCashFlowStatementList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CashFlowStatement"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedCompanyInfoList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyInfo"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedConditionSchemaList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConditionSchema"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedContactList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedCreditNoteList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreditNote"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedExpenseList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Expense"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedIncomeStatementList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncomeStatement"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedInvoiceList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedIssueList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Issue"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedItemList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Item"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedJournalEntryList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JournalEntry"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedPaymentList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedPurchaseOrderList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseOrder"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedSyncStatusList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SyncStatus"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedTaxRateList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxRate"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedTrackingCategoryList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingCategory"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedTransactionList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transaction"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaginatedVendorCreditList": {
                "type": "object",
                "properties": {
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "example": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "example": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorCredit"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PatchedEditFieldMappingRequest": {
                "type": "object",
                "properties": {
                    "remote_field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "description": "The field traversal path of the remote field listed when you hit the GET /remote-fields endpoint.",
                        "example": [
                            "example_remote_field_name"
                        ]
                    },
                    "remote_method": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The method of the remote endpoint where the remote field is coming from.",
                        "example": "GET"
                    },
                    "remote_url_path": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The path of the remote endpoint where the remote field is coming from.",
                        "example": "/example-url-path"
                    }
                },
                "x-merge-category": "accounting"
            },
            "Payment": {
                "type": "object",
                "description": "# The Payment Object\n### Description\nThe `Payment` object represents general payments made towards a specific transaction.\n\n### Usage Example\nFetch from the `GET Payment` endpoint and view an invoice's payment.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b26fd49a-cbae-470a-a8f8-bcbc119e0390"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "987300"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The payment's transaction date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The supplier, or customer involved in the payment.",
                        "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                        "x-merge-expands-to": "Contact"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The supplier’s or customer’s account in which the payment is made.",
                        "example": "d6e687d6-0c36-48a1-8114-35324b5cb38f",
                        "x-merge-expands-to": "Account"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The payment's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "FKP"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The payment's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the payment belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total amount of money being paid to the supplier, or customer, after taxes.",
                        "example": 50.0
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's payment entry was updated.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the Payment was generated in.",
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "applied_to_lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentLineItem"
                        },
                        "description": "A list of “Payment Applied to Lines” objects.",
                        "example": [
                            {
                                "remote_id": "234",
                                "applied_amount": 25,
                                "related_object_id": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                                "related_object_type": "INVOICE",
                                "applied_date": "2020-03-31T00:00:00Z"
                            },
                            {
                                "remote_id": "235",
                                "applied_amount": 25,
                                "related_object_id": "9b96a886-29a5-452b-8733-2a1e03497cf4",
                                "related_object_type": "CREDIT_NOTE",
                                "applied_date": "2020-03-31T00:00:00Z"
                            }
                        ],
                        "x-merge-expands-to": "PaymentLineItem"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"accounting_period\": \"AccountingPeriod\", \"applied_to_lines\": \"PaymentLineItem\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "PaymentEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/PaymentRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "PaymentLineItem": {
                "type": "object",
                "description": "# The PaymentLineItem Object\n### Description\nThe `PaymentLineItem` object is an applied-to-line on a `Payment` that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.\n\n### Usage Example\n`Payment` will have a field called `applied-to-lines` which will be an array of `PaymentLineItemInternalMappingSerializer` objects that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "234"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "applied_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The amount being applied to the transaction.",
                        "example": 25
                    },
                    "applied_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date the payment portion is applied.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "related_object_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The Merge ID of the transaction the payment portion is being applied to.",
                        "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1"
                    },
                    "related_object_type": {
                        "type": "string",
                        "description": "The type of transaction the payment portion is being applied to. Possible values include: INVOICE, JOURNAL_ENTRY, or CREDIT_NOTE.",
                        "example": "INVOICE"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "accounting"
            },
            "PaymentLineItemRequest": {
                "type": "object",
                "description": "# The PaymentLineItem Object\n### Description\nThe `PaymentLineItem` object is an applied-to-line on a `Payment` that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.\n\n### Usage Example\n`Payment` will have a field called `applied-to-lines` which will be an array of `PaymentLineItemInternalMappingSerializer` objects that can either be a `Invoice`, `CreditNote`, or `JournalEntry`.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "234"
                    },
                    "applied_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The amount being applied to the transaction.",
                        "example": 25
                    },
                    "applied_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date the payment portion is applied.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "related_object_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The Merge ID of the transaction the payment portion is being applied to.",
                        "example": "92e8a369-fffe-430d-b93a-f7e8a16563f1"
                    },
                    "related_object_type": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The type of transaction the payment portion is being applied to. Possible values include: INVOICE, JOURNAL_ENTRY, or CREDIT_NOTE.",
                        "example": "INVOICE"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "PaymentRequest": {
                "type": "object",
                "description": "# The Payment Object\n### Description\nThe `Payment` object represents general payments made towards a specific transaction.\n\n### Usage Example\nFetch from the `GET Payment` endpoint and view an invoice's payment.",
                "properties": {
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The payment's transaction date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The supplier, or customer involved in the payment.",
                        "example": "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                        "x-merge-expands-to": "Contact"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The supplier’s or customer’s account in which the payment is made.",
                        "example": "d6e687d6-0c36-48a1-8114-35324b5cb38f",
                        "x-merge-expands-to": "Account"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The payment's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "FKP"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The payment's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the payment belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The total amount of money being paid to the supplier, or customer, after taxes.",
                        "example": 50.0
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the Payment was generated in.",
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "applied_to_lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentLineItemRequest"
                        },
                        "description": "A list of “Payment Applied to Lines” objects.",
                        "example": [
                            {
                                "remote_id": "234",
                                "applied_amount": 25,
                                "related_object_id": "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                                "related_object_type": "INVOICE",
                                "applied_date": "2020-03-31T00:00:00Z"
                            },
                            {
                                "remote_id": "235",
                                "applied_amount": 25,
                                "related_object_id": "9b96a886-29a5-452b-8733-2a1e03497cf4",
                                "related_object_type": "CREDIT_NOTE",
                                "applied_date": "2020-03-31T00:00:00Z"
                            }
                        ],
                        "x-merge-expands-to": "PaymentLineItem"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "x-merge-expands": "{\"account\": \"Account\", \"accounting_period\": \"AccountingPeriod\", \"applied_to_lines\": \"PaymentLineItem\", \"company\": \"CompanyInfo\", \"contact\": \"Contact\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "PaymentResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/Payment"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "PostingStatusEnum": {
                "enum": [
                    "UNPOSTED",
                    "POSTED"
                ],
                "type": "string",
                "description": "* `UNPOSTED` - UNPOSTED\n* `POSTED` - POSTED",
                "x-merge-category": "accounting"
            },
            "PurchaseOrder": {
                "type": "object",
                "description": "# The PurchaseOrder Object\n### Description\nA `PurchaseOrder` represents a request to purchase goods or services from a vendor. It outlines the details of the purchase, such as the items or services requested, quantities, prices, and delivery details.\n\nA `PurchaseOrder` is a crucial component of the procurement process, but does not typically result in any impact on the company’s general ledger. The general ledger is typically only affected when the `PurchaseOrder` is fulfilled as an *Accounts Payable* Invoice object.\n\n### Usage Example\nFetch from the `LIST PurchaseOrders` endpoint and view a company's purchase orders.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0048ea5b-911e-4dff-9364-92070dea62ff"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "239741"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PurchaseOrderStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The purchase order's status.\n\n* `DRAFT` - DRAFT\n* `SUBMITTED` - SUBMITTED\n* `AUTHORIZED` - AUTHORIZED\n* `BILLED` - BILLED\n* `DELETED` - DELETED",
                        "example": "SUBMITTED"
                    },
                    "issue_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The purchase order's issue date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "purchase_order_number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The human-readable number of the purchase order.",
                        "maxLength": 100,
                        "example": "PO1234"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The purchase order's delivery date.",
                        "example": "2020-04-15T00:00:00Z"
                    },
                    "delivery_address": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The purchase order's delivery address.",
                        "example": {
                            "street_1": "2920 Broadway",
                            "street_2": "2nd Floor",
                            "city": "New York",
                            "state": "NY",
                            "country": "US",
                            "zip_code": "10027"
                        },
                        "x-merge-expands-to": "Address"
                    },
                    "customer": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact making the purchase order.",
                        "example": "3e442c5d-8f51-4103-b5c9-dcee39c30a08"
                    },
                    "vendor": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The party fulfilling the purchase order.",
                        "example": "2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b",
                        "x-merge-expands-to": "Contact"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "A memo attached to the purchase order.",
                        "example": "private note"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the purchase order belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The purchase order's total amount.",
                        "example": 260.0
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The purchase order's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order's exchange rate.",
                        "example": "2.9"
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseOrderLineItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "121222",
                                "description": "Pickleball paddles",
                                "unit_price": 25.0,
                                "quantity": 10.0,
                                "item": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                                "tracking_category": "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                "tracking_categories": [
                                    "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "tax_amount": 10.0,
                                "total_line_amount": 260.0,
                                "currency": "USD",
                                "exchange_rate": "2.9",
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "remote_was_deleted": false
                            },
                            {
                                "description": "Pickleball Balls",
                                "unit_price": 1.0,
                                "quantity": 10.0,
                                "item": "249c9faa-3045-4a31-953b-8f22d3613301",
                                "tracking_category": "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                "tracking_categories": [
                                    "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "tax_amount": 10.0,
                                "total_line_amount": 20.0
                            }
                        ],
                        "x-merge-expands-to": "PurchaseOrderLineItem"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "remote_created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's purchase order note was created.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the third party's purchase order note was updated.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the PurchaseOrder was generated in.",
                        "example": "2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"company\": \"CompanyInfo\", \"delivery_address\": \"Address\", \"line_items\": \"PurchaseOrderLineItem\", \"tracking_categories\": \"TrackingCategory\", \"vendor\": \"Contact\"}",
                "x-merge-category": "accounting"
            },
            "PurchaseOrderEndpointRequest": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/PurchaseOrderRequest"
                    }
                },
                "required": [
                    "model"
                ],
                "x-merge-category": "accounting"
            },
            "PurchaseOrderLineItem": {
                "type": "object",
                "description": "# The PurchaseOrderLineItem Object\n### Description\nThe `PurchaseOrderLineItem` object is used to represent a purchase order's line item.\n\n### Usage Example\nFetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "A description of the good being purchased.",
                        "example": "Pickleball paddles"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's unit price.",
                        "example": 25.0
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's quantity.",
                        "example": 10.0
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Item"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The purchase order line item's account."
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The purchase order line item's associated tracking category.",
                        "example": "f1214c24-2702-4617-b74b-3ddecfc0d384"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The purchase order line item's associated tracking categories.",
                        "example": [
                            "f1214c24-2702-4617-b74b-3ddecfc0d384",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ]
                    },
                    "tax_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order line item's tax amount.",
                        "example": 10.0
                    },
                    "total_line_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order line item's total amount.",
                        "example": 260.0
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The purchase order line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order line item's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the purchase order line item belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    }
                },
                "required": [
                    "tracking_categories"
                ],
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"item\": \"Item\"}",
                "x-merge-category": "accounting"
            },
            "PurchaseOrderLineItemRequest": {
                "type": "object",
                "description": "# The PurchaseOrderLineItem Object\n### Description\nThe `PurchaseOrderLineItem` object is used to represent a purchase order's line item.\n\n### Usage Example\nFetch from the `GET PurchaseOrder` endpoint and view a company's purchase orders.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "A description of the good being purchased.",
                        "example": "Pickleball paddles"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's unit price.",
                        "example": 25.0
                    },
                    "quantity": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The line item's quantity.",
                        "example": 10.0
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Item"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The purchase order line item's account."
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The purchase order line item's associated tracking category.",
                        "example": "f1214c24-2702-4617-b74b-3ddecfc0d384"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The purchase order line item's associated tracking categories.",
                        "example": [
                            "f1214c24-2702-4617-b74b-3ddecfc0d384",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ]
                    },
                    "tax_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order line item's tax amount.",
                        "example": 10.0
                    },
                    "total_line_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order line item's total amount.",
                        "example": 260.0
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The purchase order line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order line item's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the purchase order line item belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_integration_field": "unique_integration_field_value"
                        }
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true,
                        "example": {
                            "unique_linked_account_field": "unique_linked_account_field_value"
                        }
                    }
                },
                "required": [
                    "tracking_categories"
                ],
                "x-merge-expands": "{\"item\": \"Item\"}",
                "x-merge-category": "accounting"
            },
            "PurchaseOrderRequest": {
                "type": "object",
                "description": "# The PurchaseOrder Object\n### Description\nThe `PurchaseOrder` object is a record of request for a product or service between a buyer and seller.\n\n### Usage Example\nFetch from the `LIST PurchaseOrders` endpoint and view a company's purchase orders.",
                "properties": {
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PurchaseOrderStatusEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The purchase order's status.\n\n* `DRAFT` - DRAFT\n* `SUBMITTED` - SUBMITTED\n* `AUTHORIZED` - AUTHORIZED\n* `BILLED` - BILLED\n* `DELETED` - DELETED"
                    },
                    "issue_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The purchase order's issue date."
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The purchase order's delivery date."
                    },
                    "delivery_address": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The purchase order's delivery address.",
                        "x-merge-expands-to": "Address"
                    },
                    "customer": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact making the purchase order."
                    },
                    "vendor": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The party fulfilling the purchase order.",
                        "x-merge-expands-to": "Contact"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "A memo attached to the purchase order."
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the purchase order belongs to.",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The purchase order's total amount."
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The purchase order's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The purchase order's exchange rate."
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PurchaseOrderLineItemRequest"
                        },
                        "x-merge-expands-to": "PurchaseOrderLineItem"
                    },
                    "integration_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true
                    },
                    "linked_account_params": {
                        "type": "object",
                        "additionalProperties": {},
                        "writeOnly": true,
                        "nullable": true
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"company\": \"CompanyInfo\", \"delivery_address\": \"Address\", \"line_items\": \"PurchaseOrderLineItem\", \"tracking_categories\": \"TrackingCategory\", \"vendor\": \"Contact\"}",
                "x-merge-category": "accounting"
            },
            "PurchaseOrderResponse": {
                "type": "object",
                "properties": {
                    "model": {
                        "$ref": "#/components/schemas/PurchaseOrder"
                    },
                    "warnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WarningValidationProblem"
                        }
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorValidationProblem"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DebugModeLog"
                        }
                    }
                },
                "required": [
                    "errors",
                    "model",
                    "warnings"
                ],
                "x-merge-category": "accounting"
            },
            "PurchaseOrderStatusEnum": {
                "enum": [
                    "DRAFT",
                    "SUBMITTED",
                    "AUTHORIZED",
                    "BILLED",
                    "DELETED"
                ],
                "type": "string",
                "description": "* `DRAFT` - DRAFT\n* `SUBMITTED` - SUBMITTED\n* `AUTHORIZED` - AUTHORIZED\n* `BILLED` - BILLED\n* `DELETED` - DELETED",
                "x-merge-category": "accounting"
            },
            "RemoteData": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "data": {
                        "readOnly": true
                    }
                },
                "required": [
                    "path"
                ],
                "x-merge-category": "accounting"
            },
            "RemoteEndpointInfo": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "url_path": {
                        "type": "string",
                        "example": "/example-url-path"
                    },
                    "field_traversal_path": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "example_key_name"
                        ]
                    }
                },
                "required": [
                    "field_traversal_path",
                    "method",
                    "url_path"
                ],
                "x-merge-category": "accounting"
            },
            "RemoteFieldAPI": {
                "type": "object",
                "properties": {
                    "schema": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "type": "string"
                        }
                    },
                    "remote_key_name": {
                        "type": "string",
                        "example": "example_remote_key_name"
                    },
                    "remote_endpoint_info": {
                        "$ref": "#/components/schemas/RemoteEndpointInfo",
                        "example": {
                            "method": "GET",
                            "url_path": "/example-url-path",
                            "field_traversal_path": [
                                "example_key_name"
                            ]
                        }
                    },
                    "example_values": {
                        "type": "array",
                        "items": {},
                        "example": [
                            "example"
                        ]
                    },
                    "advanced_metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AdvancedMetadata"
                            }
                        ],
                        "nullable": true
                    }
                },
                "required": [
                    "advanced_metadata",
                    "example_values",
                    "remote_endpoint_info",
                    "remote_key_name",
                    "schema"
                ],
                "x-merge-category": "accounting"
            },
            "RemoteFieldAPIResponse": {
                "type": "object",
                "properties": {
                    "Account": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "AccountingAttachment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "BalanceSheet": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "CashFlowStatement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "CompanyInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Contact": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "IncomeStatement": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "CreditNote": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Item": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "PurchaseOrder": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "TrackingCategory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "JournalEntry": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "TaxRate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Invoice": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Payment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Expense": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "VendorCredit": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "Transaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    },
                    "GeneralLedgerTransaction": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteFieldAPI"
                        }
                    }
                },
                "x-merge-category": "accounting"
            },
            "RemoteKey": {
                "type": "object",
                "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Remote Deployment Key 1"
                    },
                    "key": {
                        "type": "string",
                        "example": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    }
                },
                "required": [
                    "key",
                    "name"
                ],
                "x-merge-category": "accounting"
            },
            "RemoteKeyForRegenerationRequest": {
                "type": "object",
                "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "description": "The name of the remote key",
                        "example": "Remote Deployment Key 1"
                    }
                },
                "required": [
                    "name"
                ],
                "x-merge-category": "accounting"
            },
            "RemoteResponse": {
                "type": "object",
                "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
                "properties": {
                    "method": {
                        "type": "string",
                        "example": "GET"
                    },
                    "path": {
                        "type": "string",
                        "example": "/scooters"
                    },
                    "status": {
                        "type": "integer",
                        "example": 200
                    },
                    "response": {
                        "example": {
                            "scooters": [
                                {
                                    "company": "Lime",
                                    "model": "Gen 2.5"
                                },
                                {
                                    "company": "Bird",
                                    "model": "Bird Zero"
                                }
                            ]
                        }
                    },
                    "response_headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "X-Page-Token": "value"
                        }
                    },
                    "response_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResponseTypeEnum"
                            }
                        ],
                        "example": "JSON"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {},
                        "example": {
                            "EXTRA-HEADER": "value",
                            "Authorization": "<redacted>"
                        }
                    }
                },
                "required": [
                    "method",
                    "path",
                    "response",
                    "status"
                ],
                "x-merge-category": "accounting"
            },
            "ReportItem": {
                "type": "object",
                "description": "# The ReportItem Object\n### Description\nThe `ReportItem` object is used to represent a report item for a Balance Sheet, Cash Flow Statement or Profit and Loss Report.\n\n### Usage Example\nFetch from the `GET BalanceSheet` endpoint and view the balance sheet's report items.",
                "properties": {
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "10299"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The report item's name.",
                        "example": "Revenue"
                    },
                    "value": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The report item's value.",
                        "example": 1000
                    },
                    "sub_items": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "10300",
                                "name": "Revenue - San Francisco",
                                "value": 500,
                                "sub_items": []
                            },
                            {
                                "remote_id": "10301",
                                "name": "Revenue - New York",
                                "value": 500,
                                "sub_items": []
                            }
                        ]
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the report item belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    }
                },
                "x-merge-nested-write-allowed": true,
                "x-merge-category": "accounting"
            },
            "RequestFormatEnum": {
                "enum": [
                    "JSON",
                    "XML",
                    "MULTIPART"
                ],
                "type": "string",
                "description": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
                "x-merge-category": "accounting"
            },
            "ResponseTypeEnum": {
                "enum": [
                    "JSON",
                    "BASE64_GZIP"
                ],
                "type": "string",
                "description": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
                "x-merge-category": "accounting"
            },
            "RoleEnum": {
                "enum": [
                    "ADMIN",
                    "DEVELOPER",
                    "MEMBER",
                    "API",
                    "SYSTEM",
                    "MERGE_TEAM"
                ],
                "type": "string",
                "description": "* `ADMIN` - ADMIN\n* `DEVELOPER` - DEVELOPER\n* `MEMBER` - MEMBER\n* `API` - API\n* `SYSTEM` - SYSTEM\n* `MERGE_TEAM` - MERGE_TEAM",
                "x-merge-category": "accounting"
            },
            "SelectiveSyncConfigurationsUsageEnum": {
                "enum": [
                    "IN_NEXT_SYNC",
                    "IN_LAST_SYNC"
                ],
                "type": "string",
                "description": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
                "x-merge-category": "accounting"
            },
            "Status7d1Enum": {
                "enum": [
                    "ACTIVE",
                    "ARCHIVED"
                ],
                "type": "string",
                "description": "* `ACTIVE` - ACTIVE\n* `ARCHIVED` - ARCHIVED",
                "x-merge-category": "accounting"
            },
            "SyncStatus": {
                "type": "object",
                "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
                "properties": {
                    "model_name": {
                        "type": "string",
                        "example": "Invoice"
                    },
                    "model_id": {
                        "type": "string",
                        "example": "accounting.Invoices"
                    },
                    "last_sync_start": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-30T19:44:18.695973Z"
                    },
                    "next_sync_start": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-03-30T20:44:18.662942Z"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SyncStatusStatusEnum"
                            }
                        ],
                        "example": "SYNCING"
                    },
                    "is_initial_sync": {
                        "type": "boolean",
                        "example": true
                    },
                    "selective_sync_configurations_usage": {
                        "$ref": "#/components/schemas/SelectiveSyncConfigurationsUsageEnum"
                    }
                },
                "required": [
                    "is_initial_sync",
                    "model_id",
                    "model_name",
                    "status"
                ],
                "x-merge-sample-json": "{\"model_name\": \"Candidate\", \"model_id\": \"ats.Candidate\", \"last_sync_start\": \"2021-03-30T19:44:18.695973Z\", \"next_sync_start\": \"2021-03-30T20:44:18.662942Z\", \"status\": \"SYNCING\", \"is_initial_sync\": true}",
                "x-merge-category": "accounting"
            },
            "SyncStatusStatusEnum": {
                "enum": [
                    "SYNCING",
                    "DONE",
                    "FAILED",
                    "DISABLED",
                    "PAUSED",
                    "PARTIALLY_SYNCED"
                ],
                "type": "string",
                "description": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
                "x-merge-category": "accounting"
            },
            "TaxRate": {
                "type": "object",
                "description": "# The TaxRate Object\n### Description\nThe `TaxRate` object is used to represent a tax rate.\n\n### Usage Example\nFetch from the `LIST TaxRates` endpoint and view tax rates relevant to a company.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "b82302de-852e-4e60-b050-edf9da3b7c02"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "039111"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The tax rate's description.",
                        "example": "Sales Tax"
                    },
                    "total_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The tax rate's total tax rate.",
                        "example": 15.0
                    },
                    "effective_tax_rate": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The tax rate's effective tax rate.",
                        "example": 15.0
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the tax rate belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"company\": \"CompanyInfo\"}",
                "x-merge-category": "accounting"
            },
            "TrackingCategory": {
                "type": "object",
                "description": "# The TrackingCategory Object\n### Description\nA `TrackingCategory` object represents a categorization method used to classify transactions within an accounting platform. They are often used to group records for reporting and analysis purposes. The most common types of `TrackingCategories` are Classes and Departments.\n\n### Usage Example\nFetch from the `GET TrackingCategory` endpoint and view a company's tracking category.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "948201"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "description": "The tracking category's name.",
                        "example": "Marketing Department"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7d1Enum"
                            }
                        ],
                        "nullable": true,
                        "description": "The tracking category's status.\n\n* `ACTIVE` - ACTIVE\n* `ARCHIVED` - ARCHIVED",
                        "example": "ACTIVE"
                    },
                    "category_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CategoryTypeEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The tracking category’s type.\n\n* `CLASS` - CLASS\n* `DEPARTMENT` - DEPARTMENT",
                        "example": "DEPARTMENT"
                    },
                    "parent_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "ID of the parent tracking category.",
                        "example": "d25d609b-945f-4762-b55a-1c8fb220c43c"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the tracking category belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"company\": \"CompanyInfo\"}",
                "x-merge-category": "accounting"
            },
            "Transaction": {
                "type": "object",
                "description": "# The Transaction Object\n### Description\nThe `Transaction` common model includes records of all types of transactions that do not appear in other common models. The type of transaction can be identified through the type field. More specifically, it will contain all types of transactions outside of:\n* __Credit Notes__\n* __Expenses__\n* __Invoices__\n* __Journal Entries__\n* __Payments__\n* __Purchase Orders__\n* __Vendor Credits__\n\n### Usage Example\nFetch from the `GET Transaction` endpoint and view a company's transactions.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "0048ea5b-911e-4dff-9364-92070dea62ff"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "239741"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "transaction_type": {
                        "type": "string",
                        "nullable": true,
                        "description": "The type of transaction, which can by any transaction object not already included in Merge’s common model.",
                        "example": "estimate"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The transaction's number used for identifying purposes.",
                        "example": "122"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The date upon which the transaction occurred.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The transaction's account.",
                        "example": "3e442c5d-8f51-4103-b5c9-dcee39c30a08",
                        "x-merge-expands-to": "Account"
                    },
                    "contact": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The contact to whom the transaction relates to.",
                        "example": "2c22ce34-5c6e-4fc7-a594-7f26bb4cf78b",
                        "x-merge-expands-to": "Contact"
                    },
                    "total_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The total amount being paid after taxes.",
                        "example": 260.0
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The transaction's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The transaction's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the transaction belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "line_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionLineItem"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "121222",
                                "memo": "Pickleball paddles",
                                "unit_price": "25.0",
                                "quantity": "10.0",
                                "item": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                                "account": "2b38c085-2620-4269-b5ec-75dd9095ed2c",
                                "tracking_category": "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                "tracking_categories": [
                                    "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "total_line_amount": 260.0,
                                "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384",
                                "currency": "USD",
                                "exchange_rate": "2.9",
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "remote_was_deleted": false
                            },
                            {
                                "memo": "Pickleball Balls",
                                "unit_price": 1.0,
                                "quantity": 10.0,
                                "item": "249c9faa-3045-4a31-953b-8f22d3613301",
                                "account": "3e442c5d-8f51-4103-b5c9-dcee39c30a08",
                                "tracking_category": "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                "tracking_categories": [
                                    "f1214c24-2702-4617-b74b-3ddecfc0d384",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "total_line_amount": 20.0,
                                "tax_rate": "a12e7c20-1922-9df7-s75n-edfeewnn7384"
                            }
                        ],
                        "x-merge-expands-to": "TransactionLineItem"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the Transaction was generated in.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-model-tooltip": {
                    "title": null,
                    "content": "A positive `net_amount` means the line represents a debit and a negative `net_amount` represents a credit."
                },
                "x-merge-expands": "{\"account\": \"Account\", \"accounting_period\": \"AccountingPeriod\", \"contact\": \"Contact\", \"line_items\": \"TransactionLineItem\", \"tracking_categories\": \"TrackingCategory\"}",
                "x-merge-category": "accounting"
            },
            "TransactionLineItem": {
                "type": "object",
                "description": "# The TransactionLineItem Object\n### Description\nThe `TransactionLineItem` object is used to represent a transaction's line items.\n\n### Usage Example\nFetch from the `GET TransactionLineItem` endpoint and view the transaction's line items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "memo": {
                        "type": "string",
                        "nullable": true,
                        "description": "An internal note used by the business to clarify purpose of the transaction.",
                        "example": "Pickleball paddles"
                    },
                    "unit_price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The line item's unit price.",
                        "example": "25.0"
                    },
                    "quantity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,24}(?:\\.\\d{0,8})?$",
                        "nullable": true,
                        "description": "The line item's quantity.",
                        "example": "10.0"
                    },
                    "item": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "x-merge-expands-to": "Item"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line item's account.",
                        "example": "2b38c085-2620-4269-b5ec-75dd9095ed2c"
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line's associated tracking category.",
                        "example": "f1214c24-2702-4617-b74b-3ddecfc0d384"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The line's associated tracking categories.",
                        "example": [
                            "f1214c24-2702-4617-b74b-3ddecfc0d384",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ]
                    },
                    "total_line_amount": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The line item's total.",
                        "example": 260.0
                    },
                    "tax_rate": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line item's tax rate.",
                        "example": "a12e7c20-1922-9df7-s75n-edfeewnn7384"
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The line item's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The line item's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the line belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    }
                },
                "required": [
                    "tracking_categories"
                ],
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"item\": \"Item\"}",
                "x-merge-category": "accounting"
            },
            "ValidationProblemSource": {
                "type": "object",
                "properties": {
                    "pointer": {
                        "type": "string"
                    }
                },
                "required": [
                    "pointer"
                ],
                "x-merge-category": "accounting"
            },
            "VendorCredit": {
                "type": "object",
                "description": "# The VendorCredit Object\n### Description\nA `VendorCredit` is transaction issued by a vendor to the accounting company, indicating a reduction or cancellation of the amount owed to the vendor. It is most generally used as an adjustment note used to rectify errors, returns, or overpayments related to a purchasing transaction. A `VendorCredit` can be applied to *Accounts Payable* Invoices to decrease the overall amount of the Invoice.\n\n### Usage Example\nFetch from the `GET VendorCredit` endpoint and view a company's vendor credits.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "088899"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "number": {
                        "type": "string",
                        "nullable": true,
                        "description": "The vendor credit's number.",
                        "example": "6"
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "The vendor credit's transaction date.",
                        "example": "2020-03-31T00:00:00Z"
                    },
                    "vendor": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The vendor that owes the gift or refund.",
                        "example": "3d263469-51a1-4766-9205-f6c997826be1",
                        "x-merge-expands-to": "Contact"
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The vendor credit's total amount.",
                        "example": 10000
                    },
                    "currency": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyEnum"
                            }
                        ],
                        "nullable": true,
                        "description": "The vendor credit's currency.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
                        "example": "USD"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The vendor credit's exchange rate.",
                        "example": "2.9"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the vendor credit belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        "x-merge-expands-to": "CompanyInfo"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VendorCreditLine"
                        },
                        "readOnly": true,
                        "example": [
                            {
                                "remote_id": "121222",
                                "net_amount": 25.54,
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "exchange_rate": "2.9",
                                "description": "Gifted Merge Credit",
                                "account": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                                "company": "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                                "remote_was_deleted": false
                            },
                            {
                                "remote_id": "121223",
                                "net_amount": 10,
                                "tracking_category": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                "tracking_categories": [
                                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                    "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                                ],
                                "description": "Refund for overpayment",
                                "account": "9d892439-5fab-4dbb-8bd8-34f7f96c7912"
                            }
                        ],
                        "x-merge-expands-to": "VendorCreditLine"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true
                        },
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ],
                        "x-merge-expands-to": "TrackingCategory"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    },
                    "accounting_period": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The accounting period that the VendorCredit was generated in.",
                        "example": "9b840d2-686a-465a-8a8e-7b028498f8e4",
                        "x-merge-expands-to": "AccountingPeriod"
                    },
                    "field_mappings": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true,
                        "nullable": true,
                        "example": {
                            "organization_defined_targets": {
                                "custom_key": "custom_value"
                            },
                            "linked_account_defined_targets": {
                                "custom_key": "custom_value"
                            }
                        }
                    },
                    "remote_data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RemoteData"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "example": [
                            {
                                "path": "/actions",
                                "data": [
                                    "Varies by platform"
                                ]
                            }
                        ]
                    }
                },
                "x-merge-expands": "{\"accounting_period\": \"AccountingPeriod\", \"company\": \"CompanyInfo\", \"lines\": \"VendorCreditLine\", \"tracking_categories\": \"TrackingCategory\", \"vendor\": \"Contact\"}",
                "x-merge-category": "accounting"
            },
            "VendorCreditLine": {
                "type": "object",
                "description": "# The VendorCreditLine Object\n### Description\nThe `VendorCreditLine` object is used to represent a vendor credit's line items.\n\n### Usage Example\nFetch from the `GET VendorCredit` endpoint and view the vendor credit's line items.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true,
                        "example": "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4"
                    },
                    "remote_id": {
                        "type": "string",
                        "nullable": true,
                        "description": "The third-party API ID of the matching object.",
                        "example": "121222"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-09-15T00:00:00Z"
                    },
                    "modified_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "This is the datetime that this object was last updated by Merge",
                        "example": "2021-10-16T00:00:00Z"
                    },
                    "net_amount": {
                        "type": "number",
                        "format": "double",
                        "nullable": true,
                        "description": "The full value of the credit.",
                        "example": 25.54
                    },
                    "tracking_category": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line's associated tracking category.",
                        "example": "b38c59b0-a9d7-4740-b1ee-5436c6751e3d"
                    },
                    "tracking_categories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The line's associated tracking categories.",
                        "example": [
                            "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The line's description.",
                        "example": "Gifted Merge Credit"
                    },
                    "account": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The line's account.",
                        "example": "9d892439-5fab-4dbb-8bd8-34f7f96c7912",
                        "x-merge-expands-to": "Account"
                    },
                    "company": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "description": "The company the line belongs to.",
                        "example": "595c8f97-2ac4-45b7-b000-41bdf43240b5"
                    },
                    "exchange_rate": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,32}(?:\\.\\d{0,16})?$",
                        "nullable": true,
                        "description": "The vendor credit line item's exchange rate.",
                        "example": "2.9"
                    },
                    "remote_was_deleted": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Indicates whether or not this object has been deleted in the third party platform."
                    }
                },
                "required": [
                    "tracking_categories"
                ],
                "x-merge-nested-write-allowed": true,
                "x-merge-expands": "{\"account\": \"Account\"}",
                "x-merge-category": "accounting"
            },
            "WarningValidationProblem": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/ValidationProblemSource",
                        "example": {
                            "pointer": "/age"
                        }
                    },
                    "title": {
                        "type": "string",
                        "example": "Unrecognized Field"
                    },
                    "detail": {
                        "type": "string",
                        "example": "An unrecognized field, age, was passed in with request data."
                    },
                    "problem_type": {
                        "type": "string",
                        "example": "UNRECOGNIZED_FIELD"
                    }
                },
                "required": [
                    "detail",
                    "problem_type",
                    "title"
                ],
                "x-merge-category": "accounting"
            },
            "WebhookReceiver": {
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "required": [
                    "event",
                    "is_active"
                ],
                "x-merge-category": "accounting"
            },
            "WebhookReceiverRequest": {
                "type": "object",
                "properties": {
                    "event": {
                        "type": "string",
                        "minLength": 1
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "string",
                        "minLength": 1
                    }
                },
                "required": [
                    "event",
                    "is_active"
                ],
                "x-merge-category": "accounting"
            }
        },
        "securitySchemes": {
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Bearer\""
            }
        }
    },
    "servers": [
        {
            "url": "https://api.merge.dev/api/accounting/v1",
            "description": "Production"
        },
        {
            "url": "https://api-sandbox.merge.dev/api/accounting/v1",
            "description": "Sandbox"
        },
        {
            "url": "https://api-eu.merge.dev/api/accounting/v1",
            "description": "Production EU"
        }
    ]
}